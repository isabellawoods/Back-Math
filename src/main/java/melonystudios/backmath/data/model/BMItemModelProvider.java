package melonystudios.backmath.data.model;

import net.minecraft.data.PackOutput;
import net.neoforged.neoforge.common.data.ExistingFileHelper;
import org.jetbrains.annotations.NotNull;

import static melonystudios.backmath.item.AxolotlTest.*;

public class BMItemModelProvider extends BMItemModelModels {
    public BMItemModelProvider(PackOutput output, ExistingFileHelper fileHelper) {
        super(output, fileHelper);
    }

    @Override
    @NotNull
    public String getName() {
        return "Back Math - Item Models";
    }

    @Override
    protected void registerModels() {
        // TODO: Items
        standard(this.generated, "charjan_coal");
        standard(this.generated, "raw_devil");
        standard(this.generated, "raw_angelic");
        standard(this.generated, "raw_mid_term");
        standard(this.generated, "raw_aljameed");
        standard(this.generated, "raw_aljamic_copper");
        standard(this.generated, "raw_aljamic_tin");
        standard(this.generated, "raw_mooner");
        standard(this.generated, "crushed_devil_ore");
        standard(this.generated, "crushed_angelic_ore");
        standard(this.generated, "crushed_mid_term_ore");
        standard(this.generated, "crushed_christian_mid_term");
        standard(this.generated, "crushed_aljameed_ore");
        standard(this.generated, "crushed_moonering_ore");
        standard(this.generated, "mid_term");
        standard(this.generated, "obsidian_infused_mid_term");
        standard(this.generated, "milkllarity");
        standard(this.generated, "emotional_singularity");
        standard(this.generated, "heat_singularity");
        standard(this.generated, "temperature_singularity");
        standard(this.generated, "christianity_singularity");
        standard(this.generated, "mangibelarity");
        standard(this.generated, "amaracamelarity");
        standard(this.generated, "yin_yang");
        standard(this.generated, "frutifery_singularity_backmath");
        standard(this.generated, "frutifery_singularity_vanilla");
        standard(this.generated, "meaty_singularity_sophie");
        standard(this.generated, "meaty_singularity_fabricio");
        standard(this.generated, "meaty_singularity_lucia");
        standard(this.generated, "meaty_singularity_vanilla");
        standard(this.generated, "fishy_singularity");
        standard(this.generated, "vegetably_singularity");
        standard(this.generated, "vegetably_singularity_revaried");
        standard(this.generated, "multi_singularity_frame");
        standard(this.generated, "crystalline_angelic");
        standard(this.generated, "jantical");
        standard(this.generated, "cut_jantical");
        standard(this.generated, "persona_shard");
        standard(this.generated, "emeriond");
        standard(this.generated, "milkllarity_shard");
        standard(this.generated, "mid_term_shard");
        standard(this.generated, "obsidian_infused_mid_term_shard");
        standard(this.generated, "crystalline_angelic_shard");
        standard(this.generated, "jantical_shard");
        standard(this.generated, "diamond_shard");
        standard(this.generated, "devil_nugget");
        standard(this.generated, "angelic_nugget");
        standard(this.generated, "milkllary_nugget");
        standard(this.generated, "two_thirds_hillary_nugget");
        standard(this.generated, "hardened_amaracamel_nugget");
        standard(this.generated, "christian_mid_term_nugget");
        standard(this.generated, "mid_term_nugget");
        standard(this.generated, "obsidian_infused_mid_term_nugget");
        standard(this.generated, "aljameed_nugget");
        standard(this.generated, "aljansteel_nugget");
        standard(this.generated, "moonering_nugget");
        standard(this.generated, "devil_ingot");
        standard(this.generated, "devil_angelic_alloy_ingot");
        standard(this.generated, "angelic_ingot");
        standard(this.generated, "milkllary_ingot");
        standard(this.generated, "two_thirds_hillary_ingot");
        standard(this.generated, "hardened_amaracamel_batter");
        standard(this.generated, "hardened_amaracamel_ingot");
        standard(this.generated, "christian_mid_term_ingot");
        standard(this.generated, "christian_mid_term_devil_alloy_ingot");
        standard(this.generated, "christian_mid_term_angelic_alloy_ingot");
        standard(this.generated, "warmterm_ingot");
        standard(this.generated, "mid_term_ingot");
        standard(this.generated, "coldterm_ingot");
        standard(this.generated, "obsidian_infused_mid_term_ingot");
        standard(this.generated, "obsidian_ingot");
        standard(this.generated, "aljameed_ingot");
        standard(this.generated, "aljansteel_ingot");
        standard(this.generated, "aljamic_copper_ingot");
        standard(this.generated, "aljamic_tin_ingot");
        standard(this.generated, "moonering_ingot");
        standard(this.generated, "crystallized_guarana_ingot");
        standard(this.generated, "crystallized_mango_ingot");
        standard(this.generated, "crystallized_mangaed_mango_ingot");
        standard(this.generated, "crystallized_grape_ingot");
        standard(this.generated, "crystallized_lemon_ingot");
        standard(this.generated, "crystallized_pineapple_ingot");
        standard(this.generated, "crystallized_orange_ingot");
        standard(this.generated, "crystallized_banana_ingot");
        standard(this.generated, "crystallized_guava_ingot");
        standard(this.generated, "crystallized_jabuticaba_ingot");
        standard(this.generated, "crystallized_aljamic_berry_ingot");
        standard(this.generated, "crystallized_aljame_ingot");
        standard(this.generated, "crystallized_apple_ingot");
        standard(this.generated, "crystallized_golden_apple_ingot");
        getBuilder("crystallized_enchanted_golden_apple_ingot").parent(this.generated).texture("layer0", "item/crystallized_golden_apple_ingot");
        standard(this.generated, "crystallized_melon_ingot");
        standard(this.generated, "crystallized_pumpkin_ingot");
        standard(this.generated, "crystallized_sweet_berry_ingot");
        standard(this.generated, "crystallized_glow_berry_ingot");
        standard(this.generated, "hillary_bucket");
        standard(this.generated, "milkllary_bucket");
        standard(this.generated, "liquid_aljame_bucket");
        standard(this.generated, "liquid_manga_bucket");
        standard(this.generated, "liquefied_monster_bucket");
        standard(this.generated, "sleepishwater_bucket");
        standard(this.generated, "molten_mid_term_bucket");
        standard(this.handheld, "crystalline_birch_stick");
        standard(this.handheld, "goldenwood_stick");
        standard(this.handheld, "guava_stick");
        standard(this.handheld, "jabuticaba_stick");
        standard(this.handheld, "cork_oak_stick");
        standard(this.handheld, "aljanwood_stick");
        standard(this.handheld, "aljancap_stick");
        standard(this.handheld, "insomnian_stick");
        standard(this.handheld, "avondalic_willow_stick");
        standard(this.handheld, "devil_rod");
        standard(this.handheld, "angelic_rod");
        standard(this.handheld, "hillary_rod");
        standard(this.handheld, "mid_term_rod");
        standard(this.generated, "human_patrick");
        standard(this.generated, "cork_stopper");
        standard(this.generated, "aljanwood_boat");
        standard(this.generated, "aljancap_boat");
        standard(this.generated, "insomnian_boat");
        standard(this.generated, "avondalic_willow_boat");
        standard(this.generated, "jantiquified_pearl");
        standard(this.generated, "insoflint");
        standard(this.generated, "carameled_wheat");
        standard(this.generated, "carameled_wheat_dough");
        standard(this.handheld, "aljameed_bone");
        standard(this.handheld, "sleepish_bone");
        standard(this.generated, "sleepish_fertilizer");
        standard(this.generated, "jantskin");
        standard(this.generated, "sticky_amaracamel_ball");
        standard(this.generated, "red_yellow_dye");
        standard(this.generated, "aljan_light_blue_dye");
        standard(this.generated, "poison_brown_dye");
        standard(this.generated, "insomnian_dye");
        standard(this.generated, "angelic_meal_plate");
        standard(this.generated, "queen_lucy_battle_info");
        standard(this.generated, "regular_molds_book");
        standard(this.generated, "advanced_molds_book");
        standard(this.generated, "aljamic_glass_bottle");
        standard(this.generated, "sleepishwater_bottle");
        standard(this.generated, "sophie_fragrance");
        standard(this.generated, "alcohol_gel");
        standard(this.generated, "hillary_disinfectant");
        standard(this.generated, "hillary_deodorant");
        standard(this.generated, "glue");
        standard(this.generated, "two_thirds_hillary_key");
        standard(this.generated, "carameled_wheat_seeds");
        standard(this.generated, "devil_dust");
        standard(this.generated, "devil_angelic_dust");
        standard(this.generated, "angelic_dust");
        standard(this.generated, "hillary_agglomeratio");
        standard(this.generated, "milkllary_agglomeratio");
        standard(this.generated, "two_thirds_hillary_dust");
        standard(this.generated, "carameled_wheat_flour");
        standard(this.generated, "christian_mid_term_dust");
        standard(this.generated, "christian_mid_term_devil_dust");
        standard(this.generated, "christian_mid_term_angelic_dust");
        standard(this.generated, "mid_term_dust");
        standard(this.generated, "obsidian_infused_mid_term_dust");
        standard(this.generated, "aljameed_dust");
        standard(this.generated, "aljansteel_blend");
        standard(this.generated, "moonering_dust");
        standard(this.generated, "cebolinha_hair_strand");
        standard(this.generated, "spath_sirius_black");
        standard(this.generated, "black_sulios");
        standard(this.generated, "empty_mold");
        standard(this.generated, "singularity_mold");
        standard(this.generated, "crystallized_mold");
        standard(this.generated, "ingot_mold");
        standard(this.generated, "mold_mold");
        standard(this.generated, "rod_mold");
        standard(this.generated, "crystalline_empty_mold");
        standard(this.generated, "crystalline_gem_mold");
        standard(this.generated, "upgrade_token_base");
        standard(this.generated, "upgrade_token_flame");
        standard(this.generated, "upgrade_token_crystallizer_upg");
        standard(this.generated, "blank_mob_persona_card");
        standard(this.generated, "mob_persona_card_wan_sop");
        standard(this.generated, "mob_persona_card_ang_sop");
        standard(this.generated, "mob_persona_card_ins_sop");
        standard(this.generated, "mob_persona_card_war_sop");
        standard(this.generated, "mob_persona_card_que_sop");
        standard(this.generated, "mob_persona_card_arc_luc");
        standard(this.generated, "mob_persona_card_kar_luc");
        standard(this.generated, "mob_persona_card_shy_fab");
        standard(this.generated, "mob_persona_card_mal");
        standard(this.generated, "wanderer_termian_spawn_egg");
        standard(this.generated, "angry_termian_spawn_egg");
        standard(this.generated, "insomniac_termian_spawn_egg");
        standard(this.generated, "archer_insomniac_termian_spawn_egg");
        standard(this.generated, "warrior_termian_spawn_egg");
        standard(this.generated, "queen_lucy_spawn_egg");
        standard(this.generated, "queen_lucy_pet_spawn_egg");
        standard(this.generated, "archer_lucia_spawn_egg");
        standard(this.generated, "karate_lucia_spawn_egg");
        standard(this.generated, "shy_alcalyte_spawn_egg");
        standard(this.generated, "malaika_spawn_egg");
        standard(this.generated, "insomniac_zombie_spawn_egg");
        standard(this.generated, "zombie_alcalyte_spawn_egg");
        standard(this.generated, "aljamic_bones_spawn_egg");
        standard(this.generated, "sleepish_skeleton_spawn_egg");
        standard(this.generated, "amaracameler_spawn_egg");
        standard(this.generated, "janticle_spawn_egg");
        standard(this.generated, "collector_alcalyte_spawn_egg");
        standard(this.generated, "music_disc_wellerman");
        standard(this.generated, "music_disc_snowman");
        standard(this.generated, "music_disc_duet_challenge");
        standard(this.generated, "music_disc_arcade");
        standard(this.generated, "music_disc_sugar_crash");
        standard(this.generated, "music_disc_bus");
        standard(this.generated, "music_disc_ievan_polkka");
        standard(this.generated, "music_disc_rick_roll");
        standard(this.generated, "music_disc_beggin");
        standard(this.generated, "music_disc_stay");
        standard(this.generated, "music_disc_flying_arm");
        standard(this.generated, "music_disc_dramatic_intro_1");
        standard(this.generated, "music_disc_dramatic_intro_2");
        standard(this.generated, "music_disc_dramatic_intro_3");
        standard(this.generated, "back_guide");


        // TODO: Back Math Weaponry
        armorSet(this.generated, "devil", false, true);
        armorSet(this.generated, "angelic", false, true);
        armorSet(this.generated, "hardened_amaracamel", false, true);
        armorSet(this.generated, "mid_term", true, true);
        armorSet(this.generated, "obsidian_infused_mid_term", true, true);
        armorSet(this.generated, "plateforced_mid_term", true, false);
        armorSet(this.generated, "milkllary", false, true);
        armorSet(this.generated, "jantskin", false, false);
        armorSet(this.generated, "aljameed", false, true);
        armorSet(this.generated, "moonering", false, true);
        armorSet(this.generated, "jantiquified_moonering", false, true);
        oneTextureCrowns("golden", "devil", "angelic", "christian_mid_term", "crystalline_angelic", "aljameed", "moonering");
        twoTextureCrowns("mid_term","obsidian_infused_mid_term", "milkllary", "jantical");
        queenLucyShirts(this.generated, "current", "alt", "relic");
        trimmedArmorItem(this.generated, ALJAMIC_BONE_HELMET.get());
        trimmedArmorItem(this.generated, INSOMNIAC_TERMIAN_SLEEPWEAR_BLOUSE.get());
        trimmedArmorItem(this.generated, INSOMNIAC_TERMIAN_SLEEPWEAR_PANTS.get());
        trimmedArmorItem(this.generated, ARCHER_LUCIA_HOOD.get());
        trimmedArmorItem(this.generated, ARCHER_LUCIA_VEST.get());
        trimmedArmorItem(this.generated, ARCHER_LUCIA_BOOTS.get());
        trimmedArmorItem(this.generated, ARCHER_ALCALYTE_HOOD.get());
        trimmedArmorItem(this.generated, ARCHER_ALCALYTE_VEST.get());
        trimmedArmorItem(this.generated, BAKUGOU_HAIR.get());
        trimmedArmorItem(this.generated, BAKUGOU_BLOUSE.get());
        trimmedArmorItem(this.generated, BAKUGOU_PANTS.get());
        trimmedArmorItem(this.generated, BAKUGOU_SHOES.get());
        trimmedArmorItem(this.generated, GOLDEN_PLATED.get());
        trimmedArmorItem(this.generated, CANDY_YELLOW_TURTLE_HELMET.get());
        trimmedArmorItem(this.generated, CANDY_PINK_TURTLE_HELMET.get());
        standard(this.generated, "cat_tiara");
        standard(this.generated, "dog_tiara");
        standard(this.generated, "karate_headband");
        standard(this.generated, "golden_halo");
        standard(this.generated, "red_yellow_glasses");

        dualWieldedSword("mid_term_longsword");
        standard(this.handheld, "angelic_spoon");
        standard(this.handheld, "moonering_usb_stick");
        standard(this.handheld, "moonering_backstabber");
        vanillaMilkedSword(this.handheld, "wooden_sword");
        vanillaMilkedSword(this.handheld, "stone_sword");
        vanillaMilkedSword(this.handheld, "iron_sword");
        vanillaMilkedSword(this.handheld, "diamond_sword");
        vanillaMilkedSword(this.handheld, "netherite_sword");
        vanillaMilkedSword(this.handheld, "golden_sword");
        swordWithMilked(this.handheld, "persona_blade", false);
        swordWithMilked(this.handheld, "golden_patty", false);
        swordWithMilked(this.handheld, "butter_sword", false);
        swordWithMilked(this.handheld, "devil_sparey", true);
        swordWithMilked(this.handheld, "mid_term_sparey", true);
        swordWithMilked(this.handheld, "obsidian_infused_mid_term_sparey", true);
        toolSet(this.handheld, "devil", true);
        toolSet(this.handheld, "angelic", true);
        toolSet(this.handheld, "mid_term", true);
        toolSet(this.handheld, "obsidian_infused_mid_term", true);
        toolSet(this.handheld, "milkllary", true);
        toolSet(this.handheld, "olive", true);
        toolSet(this.handheld, "crystalline_birch", true);
        toolSet(this.handheld, "goldenwood", true);
        toolSet(this.handheld, "guava", true);
        toolSet(this.handheld, "jabuticaba", true);
        toolSet(this.handheld, "cork_oak", true);
        toolSet(this.handheld, "aljanwood", true);
        toolSet(this.handheld, "aljancap", true);
        toolSet(this.handheld, "insomnian", true);
        toolSet(this.handheld, "avondalic_willow", true);
        toolSet(this.handheld, "aljanstone", true);
        toolSet(this.handheld, "sleepingstone", true);
        toolSet(this.handheld, "aljameed", true, "_blade", "_pick", "_shovel", "_axe", "_hoe");
        toolSet(this.handheld, "aljansteel", true, "_blade", "_pick", "_shovel", "_axe", "_hoe");
        toolSet(this.handheld, "moonering", true);
        toolSet(this.handheld, "jantiquified_moonering", true);
        toolSet(this.handheld, "", true, "sparey", "stacks", "spavel", "spaxe", "stoe");
        standard(this.handheld, "wooden_knife");
        standard(this.handheld, "stone_knife");
        standard(this.handheld, "iron_knife");
        standard(this.handheld, "golden_knife");
        standard(this.handheld, "diamond_knife");
        standard(this.handheld, "netherite_knife");
        standard(this.handheld, "devil_knife");
        standard(this.handheld, "angelic_knife");
        standard(this.handheld, "mid_term_knife");
        standard(this.handheld, "obsidian_infused_mid_term_knife");
        standard(this.handheld, "milkllary_knife");
        standard(this.handheld, "olive_knife");
        standard(this.handheld, "crystalline_birch_knife");
        standard(this.handheld, "goldenwood_knife");
        standard(this.handheld, "guava_knife");
        standard(this.handheld, "jabuticaba_knife");
        standard(this.handheld, "cork_oak_knife");
        standard(this.handheld, "aljanwood_knife");
        standard(this.handheld, "aljancap_knife");
        standard(this.handheld, "insomnian_knife");
        standard(this.handheld, "avondalic_willow_knife");
        standard(this.handheld, "aljanstone_knife");
        standard(this.handheld, "sleepingstone_knife");
        standard(this.handheld, "aljameed_knife");
        standard(this.handheld, "aljansteel_knife");
        standard(this.handheld, "moonering_knife");
        standard(this.handheld, "jantiquified_moonering_knife");
        standard(this.handheld, "tabu_sword");
        standard(this.handheld, "bread_sword");
        dualWieldedSword("carewni");
        standard(this.handheld, "mech_mech");
        standard(this.handheld, "rainbow_pencil");
        standard(this.handheld, "karate_training_stick");
        queenLucySummonerStaff("queen_lucy_summoner_staff");
        standard(this.generated, "water_talc_powder");
        standard(this.generated, "insoflint_and_aljansteel");
        bow("devil_bow");
        crossbow("devil_crossbow");
        bow("angelic_bow");
        crossbow("angelic_crossbow");
        bow("mid_term_bow");
        janticRailgun("jantic_railgun");
        standard(this.generated, "chocoglue");
        standard(this.handheld, "pink_gum_frying_pan");
        standard(this.generated, "insomnia_arrow");
        standard(this.generated, "superheater");
        standard(this.generated, "mortar_and_pestle");
        standard(this.generated, "crystalline_birch_mortar_and_pestle");
        standard(this.generated, "goldenwood_mortar_and_pestle");
        standard(this.generated, "guava_mortar_and_pestle");
        standard(this.generated, "jabuticaba_mortar_and_pestle");
        standard(this.generated, "cork_oak_mortar_and_pestle");
        standard(this.generated, "aljanwood_mortar_and_pestle");
        standard(this.generated, "aljancap_mortar_and_pestle");
        standard(this.generated, "insomnian_mortar_and_pestle");
        standard(this.generated, "avondalic_willow_mortar_and_pestle");
        standard(this.generated, "devil_shears");
        standard(this.generated, "angelic_shears");
        standard(this.generated, "mid_term_shears");
        standard(this.generated, "obsidian_infused_mid_term_shears");
        standard(this.generated, "christian_mid_term_shears");
        standard(this.generated, "milkllary_shears");
        standard(this.generated, "aljameed_shears");
        standard(this.generated, "aljansteel_shears");
        standard(this.generated, "moonering_shears");
        standard(this.generated, "jantiquified_moonering_shears");
        shield("devil_shield", modLoc("entity/shield/devil"), modLoc("block/devil_block"));
        shield("angelic_shield", modLoc("entity/shield/angelic"), modLoc("block/angelic_block"));
        shield("mid_term_shield", modLoc("entity/shield/mid_term"), modLoc("block/mid_term_block_side"));
        shield("aljameed_shield", modLoc("entity/shield/aljameed"), modLoc("block/aljameed_block"));
        shield("moonering_shield", modLoc("entity/shield/moonering"), modLoc("block/moonering_block"));

        // TODO: Back Math Foods
        // Fruits
        standard(this.generated, "guarana");
        standard(this.generated, "mango");
        standard(this.generated, "mangaed_mango");
        standard(this.generated, "grapes");
        standard(this.generated, "lemon");
        standard(this.generated, "pineapple");
        standard(this.generated, "orange");
        standard(this.generated, "banana");
        standard(this.generated, "guava");
        standard(this.generated, "jabuticaba");
        standard(this.generated, "green_apple");
        standard(this.generated, "aljamic_berry");
        standard(this.generated, "aljame");
        standard(this.generated, "jantiquified_aljame");
        getBuilder("holy_jantiquified_aljame").parent(this.generated).texture("layer0", "item/jantiquified_aljame");

        // Cut Fruits
        standard(this.generated, "cut_guarana");
        standard(this.generated, "cut_mango");
        standard(this.generated, "cut_grapes");
        standard(this.generated, "cut_lemon");
        standard(this.generated, "cut_pineapple");
        standard(this.generated, "cut_orange");
        standard(this.generated, "cut_banana");
        standard(this.generated, "cut_guava");
        standard(this.generated, "cut_jabuticaba");
        standard(this.generated, "cut_green_apple");
        standard(this.generated, "cut_aljamic_berry");
        standard(this.generated, "cut_aljame");
        standard(this.generated, "cut_jantiquified_aljame");
        getBuilder("cut_holy_jantiquified_aljame").parent(this.generated).texture("layer0", "item/cut_jantiquified_aljame");
        standard(this.generated, "cut_apple");
        standard(this.generated, "cut_golden_apple");
        getBuilder("cut_enchanted_golden_apple").parent(this.generated).texture("layer0", "item/cut_golden_apple");
        standard(this.generated, "pumpkin_slice");
        standard(this.generated, "cut_sweet_berries");
        standard(this.generated, "cut_glow_berries");

        // Juices
        standard(this.generated, "guarana_juice");
        standard(this.generated, "mango_juice");
        standard(this.generated, "manga_juice");
        standard(this.generated, "grape_juice");
        standard(this.generated, "lemon_juice");
        standard(this.generated, "pineapple_juice");
        standard(this.generated, "orange_juice");
        standard(this.generated, "banana_juice");
        standard(this.generated, "guava_juice");
        standard(this.generated, "jabuticabada");
        standard(this.generated, "green_apple_juice");
        standard(this.generated, "aljamic_berry_juice");
        standard(this.generated, "aljamic_aljamic_berry_juice");
        standard(this.generated, "aljame_juice");
        standard(this.generated, "aljamic_aljame_juice");
        standard(this.generated, "apple_juice");
        standard(this.generated, "golden_apple_juice");
        getBuilder("enchanted_golden_apple_juice").parent(this.generated).texture("layer0", "item/golden_apple_juice");
        standard(this.generated, "melon_juice");
        standard(this.generated, "pumpkin_juice");
        standard(this.generated, "sweet_berry_juice");
        standard(this.generated, "glow_berry_juice");

        // Popsicles
        standard(this.generated, "guarana_popsicle");
        standard(this.generated, "mango_popsicle");
        standard(this.generated, "manga_popsicle");
        standard(this.generated, "grape_popsicle");
        standard(this.generated, "lemon_popsicle");
        standard(this.generated, "pineapple_popsicle");
        standard(this.generated, "orange_popsicle");
        standard(this.generated, "banana_popsicle");
        standard(this.generated, "guava_popsicle");
        standard(this.generated, "jabuticaba_popsicle");
        standard(this.generated, "green_apple_popsicle");
        standard(this.generated, "aljamic_berry_popsicle");
        standard(this.generated, "aljame_popsicle");
        standard(this.generated, "water_popsicle");
        standard(this.generated, "hillary_popsicle");
        standard(this.generated, "milkllary_popsicle");
        standard(this.generated, "apple_popsicle");
        standard(this.generated, "golden_apple_popsicle");
        getBuilder("enchanted_golden_apple_popsicle").parent(this.generated).texture("layer0", "item/golden_apple_popsicle");
        standard(this.generated, "melon_popsicle");
        standard(this.generated, "pumpkin_popsicle");
        standard(this.generated, "sweet_berry_popsicle");
        standard(this.generated, "glow_berry_popsicle");

        // Jams
        // Pots
        standard(this.generated, "spice_pot");
        standard(this.generated, "oregano_pot");
        standard(this.generated, "jam_pot");
        standard(this.generated, "water_pot");
        standard(this.generated, "milk_pot");
        standard(this.generated, "lava_pot");
        standard(this.generated, "powder_snow_pot");
        standard(this.generated, "cookie_pot");
        standard(this.generated, "beetroot_soup_pot");
        standard(this.generated, "mushroom_stew_pot");
        standard(this.generated, "rabbit_stew_pot");
        standard(this.generated, "fungi_stew_pot");
        standard(this.generated, "end_fungi_stew_pot");
        standard(this.generated, "aljan_fungi_stew_pot");
        getBuilder("effect_jam").parent(this.generated).texture("layer0", "item/effect_jam_overlay").texture("layer1", "item/effect_jam_pot");

        standard(this.generated, "guarana_jam");
        standard(this.generated, "mango_jam");
        standard(this.generated, "manga_jam");
        standard(this.generated, "grape_jam");
        standard(this.generated, "lemon_jam");
        standard(this.generated, "pineapple_jam");
        standard(this.generated, "orange_jam");
        standard(this.generated, "banana_jam");
        standard(this.generated, "guava_jam");
        standard(this.generated, "jabuticaba_jam");
        standard(this.generated, "green_apple_jam");
        standard(this.generated, "aljamic_berry_jam");
        standard(this.generated, "aljame_jam");
        standard(this.generated, "hillary_jam");
        standard(this.generated, "milkllary_jam");
        standard(this.generated, "apple_jam");
        standard(this.generated, "golden_apple_jam");
        getBuilder("enchanted_golden_apple_jam").parent(this.generated).texture("layer0", "item/golden_apple_jam");
        standard(this.generated, "melon_jam");
        standard(this.generated, "pumpkin_jam");
        standard(this.generated, "sweet_berry_jam");
        standard(this.generated, "glow_berry_jam");

        // Jam Bread
        standard(this.generated, "fried_egg_bread");
        standard(this.generated, "turtle_fried_egg_bread");
        standard(this.generated, "ender_dragon_fried_egg_bread");
        standard(this.generated, "bread_with_pao");
        standard(this.generated, "chocolate");
        standard(this.generated, "honeyed_bread");
        standard(this.generated, "nutella_chocolate");
        standard(this.generated, "amaracamel_batter_bread");
        standard(this.generated, "amaracamel_batter_toast");
        standard(this.generated, "cheese_bread");
        standard(this.generated, "cheese_bread_bag");

        standard(this.generated, "guarana_jam_bread");
        standard(this.generated, "mango_jam_bread");
        standard(this.generated, "manga_jam_bread");
        standard(this.generated, "grape_jam_bread");
        standard(this.generated, "lemon_jam_bread");
        standard(this.generated, "pineapple_jam_bread");
        standard(this.generated, "orange_jam_bread");
        standard(this.generated, "banana_jam_bread");
        standard(this.generated, "guava_jam_bread");
        standard(this.generated, "jabuticaba_jam_bread");
        standard(this.generated, "green_apple_jam_bread");
        standard(this.generated, "aljamic_berry_jam_bread");
        standard(this.generated, "aljame_jam_bread");
        standard(this.generated, "water_droplet_bread");
        getBuilder("ze_droplet_bread").parent(this.generated).texture("layer0", "item/water_droplet_bread");
        standard(this.generated, "hillary_jam_bread");
        standard(this.generated, "milkllary_jam_bread");
        standard(this.generated, "apple_jam_bread");
        standard(this.generated, "golden_apple_jam_bread");
        getBuilder("enchanted_golden_apple_jam_bread").parent(this.generated).texture("layer0", "item/golden_apple_jam_bread");
        standard(this.generated, "melon_jam_bread");
        standard(this.generated, "pumpkin_jam_bread");
        standard(this.generated, "sweet_berry_jam_bread");
        standard(this.generated, "glow_berry_jam_bread");

        // Miscellaneous
        standard(this.generated, "aljamic_onion");
        standard(this.generated, "aljan_fungi_stew");
        standard(this.generated, "monster_energy_drink");
        standard(this.generated, "energetic_monster");
        standard(this.generated, "wine");
        standard(this.generated, "jabuticaba_wine");
        standard(this.generated, "aljame_tea_box");
        standard(this.generated, "aljame_tea");
        standard(this.generated, "aljame_teacup");
        standard(this.generated, "patience_tea");
        standard(this.generated, "peace_tea");
        standard(this.generated, "disgust_tea");
        standard(this.generated, "mood_tea");
        standard(this.generated, "amaracamel_juice");
        standard(this.generated, "coffee_mug");
        standard(this.generated, "choccy_milk_bucket");
        standard(this.generated, "choccy_milk_bottle");
        standard(this.generated, "hillary_bottle");
        standard(this.generated, "milkllary_bottle");
        standard(this.generated, "toddy");
        standard(this.generated, "mortadella");
        standard(this.generated, "aljamic_beef");
        standard(this.generated, "cooked_aljamic_beef");
        standard(this.generated, "aljamic_porkchop");
        standard(this.generated, "cooked_aljamic_porkchop");
        standard(this.generated, "aljamic_mutton");
        standard(this.generated, "cooked_aljamic_mutton");
        standard(this.generated, "aljamic_chicken");
        standard(this.generated, "cooked_aljamic_chicken");
        standard(this.generated, "rotten_aljamic_flesh");
        standard(this.generated, "aljamic_eye");
        standard(this.generated, "pasta");
        standard(this.generated, "fried_sophie_fried_egg_meal");
        standard(this.generated, "cooked_lucia_fried_egg_meal");
        standard(this.generated, "toasted_fabricio_fried_egg_meal");
        standard(this.generated, "hot_sophie_cold_fabricio_meal");
        standard(this.generated, "lagusta");
        standard(this.generated, "fried_egg");
        standard(this.generated, "oregano_fried_egg");
        standard(this.generated, "omelet");
        standard(this.generated, "turtle_fried_egg");
        standard(this.generated, "oregano_turtle_fried_egg");
        standard(this.generated, "turtle_omelet");
        standard(this.generated, "ender_dragon_fried_egg");
        standard(this.generated, "oregano_ender_dragon_fried_egg");
        standard(this.generated, "ender_omelet");
        standard(this.generated, "hillary_cake");
        standard(this.generated, "milkllary_cake");
        block("chocolate_naked_cake");
        standard(this.generated, "pine_jelly");
        standard(this.generated, "patty");
        notebook("notebook", "notebook_bottom", "notebook_screen", "notebook_keyboard");
        notebook("fried_notebook", "fried_notebook_bottom", "fried_notebook_screen", "fried_notebook_keyboard");
        stuffedNotebook("stuffed_cookie_notebook", "stuffed_cookie_notebook_bottom", "stuffed_cookie_notebook_screen", "stuffed_cookie_notebook_keyboard", "stuffed_cookie_notebook_inner");
        stuffedNotebook("fried_stuffed_cookie_notebook", "fried_stuffed_cookie_notebook_bottom", "fried_stuffed_cookie_notebook_screen", "fried_stuffed_cookie_notebook_keyboard", "fried_stuffed_cookie_notebook_inner");

        // Bags
        standard(this.generated, "amaracamel_batter_bag");
        standard(this.generated, "empty_amaracamel_batter_bag");
        standard(this.generated, "amaracamel_batter");
        standard(this.generated, "fried_egg_bag");
        standard(this.generated, "empty_fried_egg_bag");
        standard(this.generated, "turtle_fried_egg_bag");
        standard(this.generated, "empty_turtle_fried_egg_bag");
        standard(this.generated, "ender_dragon_fried_egg_bag");
        standard(this.generated, "empty_ender_dragon_fried_egg_bag");
        standard(this.generated, "lagusta_bag");
        standard(this.generated, "empty_lagusta_bag");
        standard(this.generated, "boot_pack");
        standard(this.generated, "empty_boot_pack");
        standard(this.generated, "queen_lucy_battle_pack");
        standard(this.generated, "food_bag");
        standard(this.generated, "food_bag_alt");

        standard(this.generated, "sophie");
        standard(this.generated, "raw_minced_sophie");
        standard(this.generated, "fried_sophie");
        standard(this.generated, "minced_sophie");
        standard(this.generated, "hot_sophie");
        standard(this.generated, "lucia");
        standard(this.generated, "raw_minced_lucia");
        standard(this.generated, "cooked_lucia");
        standard(this.generated, "minced_lucia");
        standard(this.generated, "fabricio");
        standard(this.generated, "raw_minced_fabricio");
        standard(this.generated, "toasted_fabricio");
        standard(this.generated, "minced_fabricio");
        standard(this.generated, "cold_fabricio");
        standard(this.generated, "raw_sophicio_mixture");
        standard(this.generated, "sophicio_mixture");
    }
}
