package melonystudios.backmath.item.tab;

import melonystudios.backmath.BackMath;
import melonystudios.backmath.item.AxolotlTest;
import net.minecraft.core.HolderLookup;
import net.minecraft.core.registries.BuiltInRegistries;
import net.minecraft.core.registries.Registries;
import net.minecraft.network.chat.Component;
import net.minecraft.network.chat.Style;
import net.minecraft.world.flag.FeatureFlagSet;
import net.minecraft.world.item.CreativeModeTab;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.alchemy.Potion;
import net.minecraft.world.item.alchemy.PotionContents;
import net.neoforged.neoforge.registries.DeferredHolder;
import net.neoforged.neoforge.registries.DeferredItem;
import net.neoforged.neoforge.registries.DeferredRegister;

import static melonystudios.backmath.item.AxolotlTest.*;

public class BMCreativeTabs {
    public static final DeferredRegister<CreativeModeTab> TABS = DeferredRegister.create(BuiltInRegistries.CREATIVE_MODE_TAB, BackMath.MOD_ID);

    public static final DeferredHolder<CreativeModeTab, CreativeModeTab> BLOCKS = TABS.register("blocks", () -> CreativeModeTab.builder().title(Component.translatable("tabs.backmath.blocks"))
            .icon(() -> GOLDEN_PLATED.get().getDefaultInstance()).displayItems((parameters, output) -> {}).build());
    public static final DeferredHolder<CreativeModeTab, CreativeModeTab> BACK_LAYER = TABS.register("back_layer", () -> CreativeModeTab.builder().title(Component.translatable("tabs.backmath.back_layer").setStyle(Style.EMPTY.withUnderlined(true)))
            .withTabsBefore(BLOCKS.getKey()).icon(() -> GOLDEN_PLATED.get().getDefaultInstance()).displayItems((parameters, output) -> {
                output.accept(CHARJAN_COAL);
                output.accept(RAW_DEVIL);
                output.accept(RAW_ANGELIC);
                output.accept(RAW_MID_TERM);
                output.accept(RAW_ALJAMEED);
                output.accept(RAW_ALJAMIC_COPPER);
                output.accept(RAW_ALJAMIC_TIN);
                output.accept(RAW_MOONER);
                output.accept(CRUSHED_DEVIL_ORE);
                output.accept(CRUSHED_ANGELIC_ORE);
                output.accept(CRUSHED_MID_TERM_ORE);
                output.accept(CRUSHED_CHRISTIAN_MID_TERM);
                output.accept(CRUSHED_ALJAMEED_ORE);
                output.accept(CRUSHED_MOONERING_ORE);
                output.accept(MID_TERM);
                output.accept(OBSIDIAN_INFUSED_MID_TERM);
                output.accept(MILKLLARITY);
                output.accept(EMOTIONAL_SINGULARITY);
                output.accept(HEAT_SINGULARITY);
                output.accept(TEMPERATURE_SINGULARITY);
                output.accept(CHRISTIANITY_SINGULARITY);
                output.accept(MANGIBELARITY);
                output.accept(AMARACAMELARITY);
                output.accept(FRUTIFERY_SINGULARITY_BACKMATH);
                output.accept(FRUTIFERY_SINGULARITY_MINECRAFT);
                output.accept(MEATY_SINGULARITY_SOPHIE);
                output.accept(MEATY_SINGULARITY_LUCIA);
                output.accept(MEATY_SINGULARITY_FABRICIO);
                output.accept(MEATY_SINGULARITY_MINECRAFT);
                output.accept(FISHY_SINGULARITY);
                output.accept(VEGETABLY_SINGULARITY);
                output.accept(VEGETABLY_SINGULARITY_VARIANTS);
                output.accept(MULTI_SINGULARITY_FRAME);
                output.accept(CRYSTALLINE_ANGELIC);
                output.accept(JANTICAL);
                output.accept(CUT_JANTICAL);
                output.accept(PERSONA_SHARD);
                output.accept(EMERIOND);
                output.accept(MILKLLARITY_SHARD);
                output.accept(MID_TERM_SHARD);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_SHARD);
                output.accept(CRYSTALLINE_ANGELIC_SHARD);
                output.accept(JANTICAL_SHARD);
                output.accept(DIAMOND_SHARD);
                output.accept(DEVIL_NUGGET);
                output.accept(ANGELIC_NUGGET);
                output.accept(MILKLLARY_NUGGET);
                output.accept(TWO_THIRDS_HILLARY_NUGGET);
                output.accept(HARDENED_AMARACAMEL_NUGGET);
                output.accept(CHRISTIAN_MID_TERM_NUGGET);
                output.accept(MID_TERM_NUGGET);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_NUGGET);
                output.accept(ALJAMEED_NUGGET);
                output.accept(ALJANSTEEL_NUGGET);
                output.accept(MOONERING_NUGGET);
                output.accept(DEVIL_INGOT);
                output.accept(DEVIL_ANGELIC_ALLOY_INGOT);
                output.accept(ANGELIC_INGOT);
                output.accept(MILKLLARY_INGOT);
                output.accept(TWO_THIRDS_HILLARY_INGOT);
                output.accept(HARDENED_AMARACAMEL_BATTER);
                output.accept(HARDENED_AMARACAMEL_INGOT);
                output.accept(CHRISTIAN_MID_TERM_INGOT);
                output.accept(CHRISTIAN_MID_TERM_DEVIL_ALLOY_INGOT);
                output.accept(CHRISTIAN_MID_TERM_ANGELIC_ALLOY_INGOT);
                output.accept(WARMTERM_INGOT);
                output.accept(MID_TERM_INGOT);
                output.accept(COLDTERM_INGOT);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_INGOT);
                output.accept(OBSIDIAN_INGOT);
                output.accept(ALJAMEED_INGOT);
                output.accept(ALJANSTEEL_INGOT);
                output.accept(ALJAMIC_COPPER_INGOT);
                output.accept(ALJAMIC_TIN_INGOT);
                output.accept(MOONERING_INGOT);
                output.accept(CRYSTALLIZED_GUARANA_INGOT);
                output.accept(CRYSTALLIZED_MANGO_INGOT);
                output.accept(CRYSTALLIZED_MANGAED_MANGO_INGOT);
                output.accept(CRYSTALLIZED_GRAPE_INGOT);
                output.accept(CRYSTALLIZED_LEMON_INGOT);
                output.accept(CRYSTALLIZED_PINEAPPLE_INGOT);
                output.accept(CRYSTALLIZED_ORANGE_INGOT);
                output.accept(CRYSTALLIZED_BANANA_INGOT);
                output.accept(CRYSTALLIZED_GUAVA_INGOT);
                output.accept(CRYSTALLIZED_JABUTICABA_INGOT);
                output.accept(CRYSTALLIZED_ALJAMIC_BERRY_INGOT);
                output.accept(CRYSTALLIZED_ALJAME_INGOT);
                output.accept(CRYSTALLIZED_APPLE_INGOT);
                output.accept(CRYSTALLIZED_GOLDEN_APPLE_INGOT);
                output.accept(CRYSTALLIZED_ENCHANTED_GOLDEN_APPLE_INGOT);
                output.accept(CRYSTALLIZED_MELON_INGOT);
                output.accept(CRYSTALLIZED_PUMPKIN_INGOT);
                output.accept(CRYSTALLIZED_SWEET_BERRY_INGOT);
                output.accept(CRYSTALLIZED_GLOW_BERRY_INGOT);
                output.accept(HILLARY_BUCKET);
                output.accept(MILKLLARY_BUCKET);
                output.accept(LIQUID_ALJAME_BUCKET);
                output.accept(LIQUID_MANGA_BUCKET);
                output.accept(LIQUEFIED_MONSTER_BUCKET);
                output.accept(SLEEPISHWATER_BUCKET);
                output.accept(MOLTEN_MID_TERM_BUCKET);
                output.accept(CRYSTALLINE_BIRCH_STICK);
                output.accept(GOLDENWOOD_STICK);
                output.accept(GUAVA_STICK);
                output.accept(JABUTICABA_STICK);
                output.accept(CORK_OAK_STICK);
                output.accept(ALJANWOOD_STICK);
                output.accept(ALJANCAP_STICK);
                output.accept(INSOMNIAN_STICK);
                output.accept(AVONDALIC_WILLOW_STICK);
                output.accept(DEVIL_ROD);
                output.accept(ANGELIC_ROD);
                output.accept(HILLARY_ROD);
                output.accept(MID_TERM_ROD);
                output.accept(CORK_STOPPER);
                output.accept(ALJANWOOD_BOAT);
                output.accept(ALJANCAP_BOAT);
                output.accept(INSOMNIAN_BOAT);
                output.accept(JANTIQUIFIED_PEARL);
                output.accept(INSOFLINT);
                output.accept(CARAMELED_WHEAT);
                output.accept(CARAMELED_WHEAT_DOUGH);
                output.accept(ALJAMEED_BONE);
                output.accept(SLEEPISH_BONE);
                output.accept(SLEEPISH_FERTILIZER);
                output.accept(JANTSKIN);
                output.accept(STICKY_AMARACAMEL_BALL);
                output.accept(RED_YELLOW_DYE);
                output.accept(ALJAN_LIGHT_BLUE_DYE);
                output.accept(POISON_BROWN_DYE);
                output.accept(INSOMNIAN_DYE);
                output.accept(ANGELIC_MEAL_PLATE);
                output.accept(QUEEN_LUCY_BATTLE_INFO);
                output.accept(REGULAR_MOLDS_BOOK);
                output.accept(ADVANCED_MOLDS_BOOK);
                output.accept(ALJAMIC_GLASS_BOTTLE);
                output.accept(SLEEPISHWATER_BOTTLE);
                output.accept(SOPHIE_FRAGRANCE);
                output.accept(GEL_ALCOHOL);
                output.accept(HILLARY_DISINFECTANT);
                output.accept(HILLARY_DEODORANT);
                output.accept(GLUE);
                output.accept(TWO_THIRDS_HILLARY_KEY);
                output.accept(CARAMELED_WHEAT_SEEDS);
                output.accept(DEVIL_DUST);
                output.accept(DEVIL_ANGELIC_DUST);
                output.accept(ANGELIC_DUST);
                output.accept(HILLARY_AGGLOMERATIO);
                output.accept(MILKLLARY_AGGLOMERATIO);
                output.accept(TWO_THIRDS_HILLARY_DUST);
                output.accept(CARAMELED_WHEAT_FLOUR);
                output.accept(CHRISTIAN_MID_TERM_DUST);
                output.accept(CHRISTIAN_MID_TERM_DEVIL_DUST);
                output.accept(CHRISTIAN_MID_TERM_ANGELIC_DUST);
                output.accept(MID_TERM_DUST);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_DUST);
                output.accept(ALJAMEED_DUST);
                output.accept(ALJANSTEEL_BLEND);
                output.accept(MOONERING_DUST);
                output.accept(CEBOLINHA_HAIR_STRAND);
                output.accept(SPATH_SIRIUS_BLACK);
                output.accept(BLACK_SULIOS);
                output.accept(EMPTY_MOLD);
                output.accept(SINGULARITY_MOLD);
                output.accept(CRYSTALLIZED_MOLD);
                output.accept(INGOT_MOLD);
                output.accept(MOLD_MOLD);
                output.accept(ROD_MOLD);
                output.accept(CRYSTALLINE_EMPTY_MOLD);
                output.accept(CRYSTALLINE_GEM_MOLD);
                output.accept(UPGRADE_TOKEN_BASE);
                output.accept(UPGRADE_TOKEN_FLAME);
                output.accept(UPGRADE_TOKEN_CRYSTALLIZER_UPG);
                output.accept(BLANK_MOB_PERSONA_CARD);
                output.accept(MOB_PERSONA_CARD_WAN_SOP);
                output.accept(MOB_PERSONA_CARD_ANG_SOP);
                output.accept(MOB_PERSONA_CARD_INS_SOP);
                output.accept(MOB_PERSONA_CARD_WAR_SOP);
                output.accept(MOB_PERSONA_CARD_QUE_LUC);
                output.accept(MOB_PERSONA_CARD_ARC_LUC);
                output.accept(MOB_PERSONA_CARD_KAR_LUC);
                output.accept(MOB_PERSONA_CARD_SHY_ALC);
                output.accept(MOB_PERSONA_CARD_MAL);
                output.accept(WANDERER_SOPHIE_SPAWN_EGG);
                output.accept(ANGRY_SOPHIE_SPAWN_EGG);
                output.accept(INSOMNIA_SOPHIE_SPAWN_EGG);
                output.accept(ARCHER_INSOMNIA_SOPHIE_SPAWN_EGG);
                output.accept(WARRIOR_SOPHIE_SPAWN_EGG);
                output.accept(QUEEN_LUCY_SPAWN_EGG);
                output.accept(QUEEN_LUCY_PET_SPAWN_EGG);
                output.accept(ARCHER_LUCIA_SPAWN_EGG);
                output.accept(KARATE_LUCIA_SPAWN_EGG);
                output.accept(SHY_ALCALYTE_SPAWN_EGG);
                output.accept(COLLECTOR_ALCALYTE_SPAWN_EGG);
                output.accept(MALAIKA_SPAWN_EGG);
                output.accept(INSOMNIA_ZOMBIE_SPAWN_EGG);
                output.accept(ZOMBIE_FABRICIO_SPAWN_EGG);
                output.accept(ALJAMIC_BONES_SPAWN_EGG);
                output.accept(SLEEPISH_SKELETON_SPAWN_EGG);
                output.accept(AMARACAMELER_SPAWN_EGG);
                output.accept(JANTICLE_SPAWN_EGG);
                output.accept(WELLERMAN_DISC);
                output.accept(SNOWMAN_DISC);
                output.accept(DUET_CHALLENGE_DISC);
                output.accept(ARCADE_DISC);
                output.accept(SUGAR_CRASH_DISC);
                output.accept(O_ONIBUS_VAI_DERRAPAR_DISC);
                output.accept(IEVAN_POLKKA_DISC);
                output.accept(NEVER_GONNA_GIVE_YOU_UP_DISC);
                output.accept(BEGGIN_DISC);
                output.accept(STAY_DISC);
                output.accept(THE_FLYING_ARM_DISC);
                output.accept(DRAMATIC_INTRO_1_DISC);
                output.accept(DRAMATIC_INTRO_2_DISC);
                output.accept(DRAMATIC_INTRO_3_DISC);
            }).build());
    public static final DeferredHolder<CreativeModeTab, CreativeModeTab> WEAPONRY = TABS.register("weaponry", () -> CreativeModeTab.builder().title(Component.translatable("tabs.backmath.weaponry"))
            .withTabsBefore(BACK_LAYER.getKey()).icon(() -> MID_TERM_BREASTPLATE.get().getDefaultInstance()).displayItems((parameters, output) -> {
                output.accept(DEVIL_WARRIOR_HELMET);
                output.accept(DEVIL_HELMET);
                output.accept(DEVIL_CHESTPLATE);
                output.accept(DEVIL_LEGGINGS);
                output.accept(DEVIL_BOOTS);
                output.accept(ANGELIC_WARRIOR_HELMET);
                output.accept(ANGELIC_HELMET);
                output.accept(ANGELIC_CHESTPLATE);
                output.accept(ANGELIC_LEGGINGS);
                output.accept(ANGELIC_BOOTS);
                output.accept(HARDENED_AMARACAMEL_WARRIOR_HELMET);
                output.accept(HARDENED_AMARACAMEL_HELMET);
                output.accept(HARDENED_AMARACAMEL_CHESTPLATE);
                output.accept(HARDENED_AMARACAMEL_LEGGINGS);
                output.accept(HARDENED_AMARACAMEL_BOOTS);
                output.accept(MID_TERM_WARRIOR_HELMET);
                output.accept(MID_TERM_HELMET);
                output.accept(MID_TERM_BREASTPLATE);
                output.accept(MID_TERM_LEGGINGS);
                output.accept(MID_TERM_BOOTS);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_WARRIOR_HELMET);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_HELMET);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_BREASTPLATE);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_LEGGINGS);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_BOOTS);
                output.accept(PLATEFORCED_MID_TERM_HELMET);
                output.accept(PLATEFORCED_MID_TERM_BREASTPLATE);
                output.accept(PLATEFORCED_MID_TERM_LEGGINGS);
                output.accept(PLATEFORCED_MID_TERM_BOOTS);
                output.accept(MILKLLARY_WARRIOR_HELMET);
                output.accept(MILKLLARY_HELMET);
                output.accept(MILKLLARY_CHESTPLATE);
                output.accept(MILKLLARY_LEGGINGS);
                output.accept(MILKLLARY_BOOTS);
                output.accept(JANTSKIN_HELMET);
                output.accept(JANTSKIN_CHESTPLATE);
                output.accept(JANTSKIN_LEGGINGS);
                output.accept(JANTSKIN_BOOTS);
                output.accept(ALJAMEED_WARRIOR_HELMET);
                output.accept(ALJAMIC_BONE_HELMET);
                output.accept(ALJAMEED_HELMET);
                output.accept(ALJAMEED_CHESTPLATE);
                output.accept(ALJAMEED_LEGGINGS);
                output.accept(ALJAMEED_BOOTS);
                output.accept(MOONERING_WARRIOR_HELMET);
                output.accept(MOONERING_HELMET);
                output.accept(MOONERING_CHESTPLATE);
                output.accept(MOONERING_LEGGINGS);
                output.accept(MOONERING_BOOTS);
                output.accept(JANTIQUIFIED_MOONERING_WARRIOR_HELMET);
                output.accept(JANTIQUIFIED_MOONERING_HELMET);
                output.accept(JANTIQUIFIED_MOONERING_CHESTPLATE);
                output.accept(JANTIQUIFIED_MOONERING_LEGGINGS);
                output.accept(JANTIQUIFIED_MOONERING_BOOTS);
                output.accept(INSOMNIA_SOPHIE_SLEEPWEAR_BLOUSE);
                output.accept(INSOMNIA_SOPHIE_SLEEPWEAR_PANTS);
                output.accept(ARCHER_LUCIA_HOOD);
                output.accept(ARCHER_LUCIA_VEST);
                output.accept(ARCHER_LUCIA_BOOTS);
                output.accept(ARCHER_FABRICIO_HOOD);
                output.accept(ARCHER_FABRICIO_VEST);
                output.accept(QUEEN_LUCY_SHIRT_CURRENT);
                output.accept(QUEEN_LUCY_SHIRT_ALT);
                output.accept(QUEEN_LUCY_SHIRT_RELIC);
                output.accept(BAKUGOU_HAIR);
                output.accept(BAKUGOU_BLOUSE);
                output.accept(BAKUGOU_PANTS);
                output.accept(BAKUGOU_SHOES);
                output.accept(GOLDEN_PLATED);
                output.accept(CANDY_YELLOW_TURTLE_HELMET);
                output.accept(CANDY_PINK_TURTLE_HELMET);
                output.accept(CAT_TIARA);
                output.accept(DOG_TIARA);
                output.accept(KARATE_HEADBAND);
                output.accept(GOLDEN_HALO);
                output.accept(RED_YELLOW_GLASSES);
                output.accept(GOLDEN_CROWN);
                output.accept(DEVIL_CROWN);
                output.accept(ANGELIC_CROWN);
                output.accept(MID_TERM_CROWN);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_CROWN);
                output.accept(CHRISTIAN_MID_TERM_CROWN);
                output.accept(CRYSTALLINE_ANGELIC_CROWN);
                output.accept(MILKLLARY_CROWN);
                output.accept(ALJAMEED_CROWN);
                output.accept(MOONERING_CROWN);
                output.accept(JANTICAL_CROWN);
                output.accept(MID_TERM_LONGSWORD);
                output.accept(MILKED_WOODEN_SWORD);
                output.accept(MILKED_STONE_SWORD);
                output.accept(MILKED_GOLDEN_SWORD);
                output.accept(MILKED_IRON_SWORD);
                output.accept(MILKED_DIAMOND_SWORD);
                output.accept(MILKED_NETHERITE_SWORD);
                output.accept(MILKED_DEVIL_SWORD);
                output.accept(MILKED_ANGELIC_SWORD);
                output.accept(MILKED_MID_TERM_SWORD);
                output.accept(MILKED_OBSIDIAN_INFUSED_MID_TERM_SWORD);
                output.accept(MILKEDLLARY_SWORD);
                output.accept(MILKED_OLIVE_SWORD);
                output.accept(MILKED_CRYSTALLINE_BIRCH_SWORD);
                output.accept(MILKED_GOLDENWOOD_SWORD);
                output.accept(MILKED_GUAVA_SWORD);
                output.accept(MILKED_JABUTICABA_SWORD);
                output.accept(MILKED_CORK_OAK_SWORD);
                output.accept(MILKED_ALJANWOOD_SWORD);
                output.accept(MILKED_ALJANCAP_SWORD);
                output.accept(MILKED_INSOMNIAN_SWORD);
                output.accept(MILKED_AVONDALIC_WILLOW_SWORD);
                output.accept(MILKED_ALJANSTONE_SWORD);
                output.accept(MILKED_SLEEPINGSTONE_SWORD);
                output.accept(MILKED_ALJAMEED_BLADE);
                output.accept(MILKED_ALJANSTEEL_BLADE);
                output.accept(MILKED_MOONERING_SWORD);
                output.accept(MILKED_JANTIQUIFIED_MOONERING_SWORD);
                output.accept(MILKED_PERSONA_BLADE);
                output.accept(MILKED_MID_TERM_SPAREY);
                output.accept(MILKED_OBSIDIAN_INFUSED_MID_TERM_SPAREY);
                output.accept(MILKED_SPAREY);
                output.accept(MILKED_DEVIL_SPAREY);
                output.accept(MILKED_GOLDEN_PATTY);
                output.accept(MILKED_BUTTER_SWORD);
                output.accept(DEVIL_SWORD);
                output.accept(DEVIL_PICKAXE);
                output.accept(DEVIL_SHOVEL);
                output.accept(DEVIL_AXE);
                output.accept(DEVIL_HOE);
                output.accept(ANGELIC_SWORD);
                output.accept(ANGELIC_PICKAXE);
                output.accept(ANGELIC_SHOVEL);
                output.accept(ANGELIC_AXE);
                output.accept(ANGELIC_HOE);
                output.accept(MID_TERM_SWORD);
                output.accept(MID_TERM_PICKAXE);
                output.accept(MID_TERM_SHOVEL);
                output.accept(ANGELIC_SPOON);
                output.accept(MID_TERM_AXE);
                output.accept(MID_TERM_HOE);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_SWORD);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_PICKAXE);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_SHOVEL);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_AXE);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_HOE);
                output.accept(MILKLLARY_SWORD);
                output.accept(MILKLLARY_PICKAXE);
                output.accept(MILKLLARY_SHOVEL);
                output.accept(MILKLLARY_AXE);
                output.accept(MILKLLARY_HOE);
                output.accept(OLIVE_SWORD);
                output.accept(OLIVE_PICKAXE);
                output.accept(OLIVE_SHOVEL);
                output.accept(OLIVE_AXE);
                output.accept(OLIVE_HOE);
                output.accept(SPAREY);
                output.accept(STACKS);
                output.accept(SPAVEL);
                output.accept(SPAXE);
                output.accept(STOE);
                output.accept(CRYSTALLINE_BIRCH_SWORD);
                output.accept(CRYSTALLINE_BIRCH_PICKAXE);
                output.accept(CRYSTALLINE_BIRCH_SHOVEL);
                output.accept(CRYSTALLINE_BIRCH_AXE);
                output.accept(CRYSTALLINE_BIRCH_HOE);
                output.accept(GOLDENWOOD_SWORD);
                output.accept(GOLDENWOOD_PICKAXE);
                output.accept(GOLDENWOOD_SHOVEL);
                output.accept(GOLDENWOOD_AXE);
                output.accept(GOLDENWOOD_HOE);
                output.accept(GUAVA_SWORD);
                output.accept(GUAVA_PICKAXE);
                output.accept(GUAVA_SHOVEL);
                output.accept(GUAVA_AXE);
                output.accept(GUAVA_HOE);
                output.accept(JABUTICABA_SWORD);
                output.accept(JABUTICABA_PICKAXE);
                output.accept(JABUTICABA_SHOVEL);
                output.accept(JABUTICABA_AXE);
                output.accept(JABUTICABA_HOE);
                output.accept(CORK_OAK_SWORD);
                output.accept(CORK_OAK_PICKAXE);
                output.accept(CORK_OAK_SHOVEL);
                output.accept(CORK_OAK_AXE);
                output.accept(CORK_OAK_HOE);
                output.accept(ALJANWOOD_SWORD);
                output.accept(ALJANWOOD_PICKAXE);
                output.accept(ALJANWOOD_SHOVEL);
                output.accept(ALJANWOOD_AXE);
                output.accept(ALJANWOOD_HOE);
                output.accept(ALJANCAP_SWORD);
                output.accept(ALJANCAP_PICKAXE);
                output.accept(ALJANCAP_SHOVEL);
                output.accept(ALJANCAP_AXE);
                output.accept(ALJANCAP_HOE);
                output.accept(INSOMNIAN_SWORD);
                output.accept(INSOMNIAN_PICKAXE);
                output.accept(INSOMNIAN_SHOVEL);
                output.accept(INSOMNIAN_AXE);
                output.accept(INSOMNIAN_HOE);
                output.accept(AVONDALIC_WILLOW_SWORD);
                output.accept(AVONDALIC_WILLOW_PICKAXE);
                output.accept(AVONDALIC_WILLOW_SHOVEL);
                output.accept(AVONDALIC_WILLOW_AXE);
                output.accept(AVONDALIC_WILLOW_HOE);
                output.accept(ALJANSTONE_SWORD);
                output.accept(ALJANSTONE_PICKAXE);
                output.accept(ALJANSTONE_SHOVEL);
                output.accept(ALJANSTONE_AXE);
                output.accept(ALJANSTONE_HOE);
                output.accept(SLEEPINGSTONE_SWORD);
                output.accept(SLEEPINGSTONE_PICKAXE);
                output.accept(SLEEPINGSTONE_SHOVEL);
                output.accept(SLEEPINGSTONE_AXE);
                output.accept(SLEEPINGSTONE_HOE);
                output.accept(ALJAMEED_BLADE);
                output.accept(ALJAMEED_PICK);
                output.accept(ALJAMEED_SHOVEL);
                output.accept(ALJAMEED_AXE);
                output.accept(ALJAMEED_HOE);
                output.accept(ALJANSTEEL_BLADE);
                output.accept(ALJANSTEEL_PICK);
                output.accept(ALJANSTEEL_SHOVEL);
                output.accept(ALJANSTEEL_AXE);
                output.accept(ALJANSTEEL_HOE);
                output.accept(MOONERING_BACKSTABBER);
                output.accept(MOONERING_SWORD);
                output.accept(MOONERING_PICKAXE);
                output.accept(MOONERING_SHOVEL);
                output.accept(MOONERING_AXE);
                output.accept(MOONERING_HOE);
                output.accept(JANTIQUIFIED_MOONERING_SWORD);
                output.accept(JANTIQUIFIED_MOONERING_PICKAXE);
                output.accept(JANTIQUIFIED_MOONERING_SHOVEL);
                output.accept(JANTIQUIFIED_MOONERING_AXE);
                output.accept(JANTIQUIFIED_MOONERING_HOE);
                output.accept(WOODEN_KNIFE);
                output.accept(STONE_KNIFE);
                output.accept(IRON_KNIFE);
                output.accept(GOLDEN_KNIFE);
                output.accept(DIAMOND_KNIFE);
                output.accept(NETHERITE_KNIFE);
                output.accept(DEVIL_KNIFE);
                output.accept(ANGELIC_KNIFE);
                output.accept(MID_TERM_KNIFE);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_KNIFE);
                output.accept(MILKLLARY_KNIFE);
                output.accept(OLIVE_KNIFE);
                output.accept(CRYSTALLINE_BIRCH_KNIFE);
                output.accept(GOLDENWOOD_KNIFE);
                output.accept(GUAVA_KNIFE);
                output.accept(JABUTICABA_KNIFE);
                output.accept(CORK_OAK_KNIFE);
                output.accept(ALJANWOOD_KNIFE);
                output.accept(ALJANCAP_KNIFE);
                output.accept(INSOMNIAN_KNIFE);
                output.accept(AVONDALIC_WILLOW_KNIFE);
                output.accept(ALJANSTONE_KNIFE);
                output.accept(SLEEPINGSTONE_KNIFE);
                output.accept(ALJAMEED_KNIFE);
                output.accept(ALJANSTEEL_KNIFE);
                output.accept(MOONERING_KNIFE);
                output.accept(JANTIQUIFIED_MOONERING_KNIFE);
                output.accept(TABU_SWORD);
                output.accept(BREAD_SWORD);
                output.accept(PERSONA_BLADE);
                output.accept(CAREWNI);
                output.accept(GOLDEN_PATTY);
                output.accept(BUTTER_SWORD);
                output.accept(MECH_MECH);
                output.accept(DEVIL_SPAREY);
                output.accept(MID_TERM_SPAREY);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_SPAREY);
                output.accept(RAINBOW_PENCIL);
                output.accept(KARATE_TRAINING_STICK);
                output.accept(QUEEN_LUCY_SUMMONER_STAFF);
                output.accept(WATER_TALC_POWDER);
                output.accept(INSOFLINT_AND_ALJANSTEEL);
                output.accept(DEVIL_BOW);
                output.accept(ANGELIC_BOW);
                output.accept(MID_TERM_BOW);
                output.accept(DEVIL_CROSSBOW);
                output.accept(ANGELIC_CROSSBOW);
                output.accept(JANTIC_RAILGUN);
                output.accept(CHOCOGLUE);
                output.accept(PINK_GUM_FRYING_PAN);
                output.accept(INSOMNIA_ARROW);
                output.accept(SUPERHEATER);
                output.accept(MORTAR_AND_PESTLE);
                output.accept(CRYSTALLINE_BIRCH_MORTAR_AND_PESTLE);
                output.accept(GOLDENWOOD_MORTAR_AND_PESTLE);
                output.accept(GUAVA_MORTAR_AND_PESTLE);
                output.accept(JABUTICABA_MORTAR_AND_PESTLE);
                output.accept(CORK_OAK_MORTAR_AND_PESTLE);
                output.accept(ALJANWOOD_MORTAR_AND_PESTLE);
                output.accept(ALJANCAP_MORTAR_AND_PESTLE);
                output.accept(INSOMNIAN_MORTAR_AND_PESTLE);
                output.accept(AVONDALIC_WILLOW_MORTAR_AND_PESTLE);
                output.accept(DEVIL_SHEARS);
                output.accept(ANGELIC_SHEARS);
                output.accept(MID_TERM_SHEARS);
                output.accept(OBSIDIAN_INFUSED_MID_TERM_SHEARS);
                output.accept(CHRISTIAN_MID_TERM_SHEARS);
                output.accept(MILKLLARY_SHEARS);
                output.accept(ALJAMEED_SHEARS);
                output.accept(ALJANSTEEL_SHEARS);
                output.accept(MOONERING_SHEARS);
                output.accept(JANTIQUIFIED_MOONERING_SHEARS);
                output.accept(DEVIL_SHIELD);
                output.accept(ANGELIC_SHIELD);
                output.accept(MID_TERM_SHIELD);
                output.accept(ALJAMEED_SHIELD);
                output.accept(MOONERING_SHIELD);
            }).build());
    public static final DeferredHolder<CreativeModeTab, CreativeModeTab> SOPHIES_CURSED_FOODS = TABS.register("sophies_cursed_foods", () -> CreativeModeTab.builder().title(Component.translatable("tabs.backmath.sophies_cursed_foods")
            .setStyle(Style.EMPTY.withUnderlined(true))).withTabsBefore(WEAPONRY.getKey()).icon(() -> FRIED_EGG.get().getDefaultInstance()).displayItems((parameters, output) -> {
                output.accept(GUARANA);
                output.accept(MANGO);
                output.accept(MANGAED_MANGO);
                output.accept(GRAPES);
                output.accept(LEMON);
                output.accept(PINEAPPLE);
                output.accept(ORANGE);
                output.accept(BANANA);
                output.accept(GUAVA);
                output.accept(JABUTICABA);
                output.accept(ALJAMIC_ONION);
                output.accept(ALJAMIC_BERRY);
                output.accept(ALJAME);
                output.accept(JANTIQUIFIED_ALJAME);
                output.accept(HOLY_JANTIQUIFIED_ALJAME);
                output.accept(GREEN_APPLE);
                output.accept(CUT_GUARANA);
                output.accept(CUT_MANGO);
                output.accept(CUT_GRAPES);
                output.accept(CUT_LEMON);
                output.accept(CUT_PINEAPPLE);
                output.accept(CUT_ORANGE);
                output.accept(CUT_BANANA);
                output.accept(CUT_GUAVA);
                output.accept(CUT_JABUTICABA);
                output.accept(CUT_ALJAMIC_BERRY);
                output.accept(CUT_ALJAME);
                output.accept(CUT_JANTIQUIFIED_ALJAME);
                output.accept(CUT_HOLY_JANTIQUIFIED_ALJAME);
                output.accept(CUT_GREEN_APPLE);
                output.accept(CUT_APPLE);
                output.accept(CUT_GOLDEN_APPLE);
                output.accept(CUT_ENCHANTED_GOLDEN_APPLE);
                output.accept(PUMPKIN_SLICE);
                output.accept(CUT_SWEET_BERRIES);
                output.accept(CUT_GLOW_BERRIES);
                output.accept(GUARANA_JUICE);
                output.accept(MANGO_JUICE);
                output.accept(MANGA_JUICE);
                output.accept(GRAPE_JUICE);
                output.accept(LEMON_JUICE);
                output.accept(PINEAPPLE_JUICE);
                output.accept(ORANGE_JUICE);
                output.accept(BANANA_JUICE);
                output.accept(GUAVA_JUICE);
                output.accept(JABUTICABADA);
                output.accept(ALJAMIC_BERRY_JUICE);
                output.accept(ALJAMIC_ALJAMIC_BERRY_JUICE);
                output.accept(ALJAME_JUICE);
                output.accept(ALJAMIC_ALJAME_JUICE);
                output.accept(GREEN_APPLE_JUICE);
                output.accept(APPLE_JUICE);
                output.accept(GOLDEN_APPLE_JUICE);
                output.accept(ENCHANTED_GOLDEN_APPLE_JUICE);
                output.accept(MELON_JUICE);
                output.accept(PUMPKIN_JUICE);
                output.accept(SWEET_BERRY_JUICE);
                output.accept(GLOW_BERRY_JUICE);
                output.accept(GUARANA_POPSICLE);
                output.accept(MANGO_POPSICLE);
                output.accept(MANGA_POPSICLE);
                output.accept(GRAPE_POPSICLE);
                output.accept(LEMON_POPSICLE);
                output.accept(PINEAPPLE_POPSICLE);
                output.accept(ORANGE_POPSICLE);
                output.accept(BANANA_POPSICLE);
                output.accept(GUAVA_POPSICLE);
                output.accept(JABUTICABA_POPSICLE);
                output.accept(ALJAMIC_BERRY_POPSICLE);
                output.accept(ALJAME_POPSICLE);
                output.accept(WATER_POPSICLE);
                output.accept(HILLARY_POPSICLE);
                output.accept(MILKLLARY_POPSICLE);
                output.accept(GREEN_APPLE_POPSICLE);
                output.accept(APPLE_POPSICLE);
                output.accept(GOLDEN_APPLE_POPSICLE);
                output.accept(ENCHANTED_GOLDEN_APPLE_POPSICLE);
                output.accept(MELON_POPSICLE);
                output.accept(PUMPKIN_POPSICLE);
                output.accept(SWEET_BERRY_POPSICLE);
                output.accept(GLOW_BERRY_POPSICLE);
                output.accept(SPICE_POT);
                output.accept(OREGANO_POT);
                output.accept(JAM_POT);
                output.accept(GUARANA_JAM);
                output.accept(MANGO_JAM);
                output.accept(MANGA_JAM);
                output.accept(GRAPE_JAM);
                output.accept(LEMON_JAM);
                output.accept(PINEAPPLE_JAM);
                output.accept(ORANGE_JAM);
                output.accept(BANANA_JAM);
                output.accept(GUAVA_JAM);
                output.accept(JABUTICABA_JAM);
                output.accept(ALJAMIC_BERRY_JAM);
                output.accept(ALJAME_JAM);
                output.accept(WATER_JAM);
                output.accept(MILK_POT);
                output.accept(LAVA_POT);
                output.accept(POWDER_SNOW_POT);
                output.accept(HILLARY_JAM);
                output.accept(MILKLLARY_JAM);
                output.accept(GREEN_APPLE_JAM);
                output.accept(APPLE_JAM);
                output.accept(GOLDEN_APPLE_JAM);
                output.accept(ENCHANTED_GOLDEN_APPLE_JAM);
                output.accept(MELON_JAM);
                output.accept(PUMPKIN_JAM);
                output.accept(SWEET_BERRY_JAM);
                output.accept(GLOW_BERRY_JAM);
                output.accept(COOKIE_POT);
                output.accept(BEETROOT_SOUP_POT);
                output.accept(MUSHROOM_STEW_POT);
                output.accept(RABBIT_STEW_POT);
                output.accept(FUNGI_STEW_POT);
                output.accept(END_FUNGI_STEW_POT);
                output.accept(ALJAN_FUNGI_STEW_POT);
                parameters.holders().lookup(Registries.POTION).ifPresent(potions -> generateEffectJamTypes(output, potions, EFFECT_JAM.get(), CreativeModeTab.TabVisibility.PARENT_AND_SEARCH_TABS, parameters.enabledFeatures()));
                output.accept(ALJAN_FUNGI_STEW);
                output.accept(GUARANA_JAM_BREAD);
                output.accept(MANGO_JAM_BREAD);
                output.accept(MANGA_JAM_BREAD);
                output.accept(GRAPE_JAM_BREAD);
                output.accept(LEMON_JAM_BREAD);
                output.accept(PINEAPPLE_JAM_BREAD);
                output.accept(ORANGE_JAM_BREAD);
                output.accept(BANANA_JAM_BREAD);
                output.accept(GUAVA_JAM_BREAD);
                output.accept(JABUTICABA_JAM_BREAD);
                output.accept(ALJAMIC_BERRY_JAM_BREAD);
                output.accept(ALJAME_JAM_BREAD);
                output.accept(WATER_DROPLET_BREAD);
                output.accept(ZE_DROPLET_BREAD);
                output.accept(HILLARY_JAM_BREAD);
                output.accept(MILKLLARY_JAM_BREAD);
                output.accept(GREEN_APPLE_JAM_BREAD);
                output.accept(APPLE_JAM_BREAD);
                output.accept(GOLDEN_APPLE_JAM_BREAD);
                output.accept(ENCHANTED_GOLDEN_APPLE_JAM_BREAD);
                output.accept(MELON_JAM_BREAD);
                output.accept(PUMPKIN_JAM_BREAD);
                output.accept(SWEET_BERRY_JAM_BREAD);
                output.accept(GLOW_BERRY_JAM_BREAD);
                output.accept(FRIED_EGG_BREAD);
                output.accept(TURTLE_FRIED_EGG_BREAD);
                output.accept(ENDER_DRAGON_FRIED_EGG_BREAD);
                output.accept(BREAD_WITH_PAO);
                output.accept(CHOCOLATE);
                output.accept(HONEYED_BREAD);
                output.accept(NUTELLA_CHOCOLATE);
                output.accept(AMARACAMEL_BATTER_BREAD);
                output.accept(AMARACAMEL_BATTER_TOAST);
                output.accept(MONSTER_ENERGY_DRINK);
                output.accept(ENERGETIC_MONSTER);
                output.accept(WINE);
                output.accept(JABUTICABA_WINE);
                output.accept(ALJAME_TEA_BOX);
                output.accept(ALJAME_TEA);
                output.accept(ALJAME_TEACUP);
                output.accept(PATIENCE_TEA);
                output.accept(PEACE_TEA);
                output.accept(DISGUST_TEA);
                output.accept(MOOD_TEA);
                output.accept(AMARACAMEL_JUICE);
                output.accept(COFFEE_MUG);
                output.accept(CHOCCY_MILK_BUCKET);
                output.accept(CHOCCY_MILK_BOTTLE);
                output.accept(HILLARY_BOTTLE);
                output.accept(MILKLLARY_BOTTLE);
                output.accept(TODDY);
                output.accept(MORTADELLA);
                output.accept(ALJAMIC_BEEF);
                output.accept(COOKED_ALJAMIC_BEEF);
                output.accept(ALJAMIC_PORKCHOP);
                output.accept(COOKED_ALJAMIC_PORKCHOP);
                output.accept(ALJAMIC_MUTTON);
                output.accept(COOKED_ALJAMIC_MUTTON);
                output.accept(ALJAMIC_CHICKEN);
                output.accept(COOKED_ALJAMIC_CHICKEN);
                output.accept(ROTTEN_ALJAMIC_FLESH);
                output.accept(ALJAMIC_EYE);
                output.accept(RAW_SOPHIE);
                output.accept(RAW_MINCED_SOPHIE);
                output.accept(FRIED_SOPHIE);
                output.accept(MINCED_SOPHIE);
                output.accept(HOT_SOPHIE);
                output.accept(RAW_LUCIA);
                output.accept(RAW_MINCED_LUCIA);
                output.accept(COOKED_LUCIA);
                output.accept(MINCED_LUCIA);
                output.accept(RAW_FABRICIO);
                output.accept(RAW_MINCED_FABRICIO);
                output.accept(TOASTED_FABRICIO);
                output.accept(MINCED_FABRICIO);
                output.accept(COLD_FABRICIO);
                output.accept(RAW_SOPHICIO_MIXTURE);
                output.accept(SOPHICIO_MIXTURE);
                output.accept(PASTA);
                output.accept(FRIED_SOPHIE_FRIED_EGG_MEAL);
                output.accept(COOKED_LUCIA_FRIED_EGG_MEAL);
                output.accept(TOASTED_FABRICIO_FRIED_EGG_MEAL);
                output.accept(HOT_SOPHIE_COLD_FABRICIO_MEAL);
                output.accept(EMPTY_AMARACAMEL_BATTER_BAG);
                output.accept(AMARACAMEL_BATTER);
                output.accept(FRIED_EGG_BAG);
                output.accept(EMPTY_FRIED_EGG_BAG);
                output.accept(TURTLE_FRIED_EGG_BAG);
                output.accept(EMPTY_TURTLE_FRIED_EGG_BAG);
                output.accept(ENDER_DRAGON_FRIED_EGG_BAG);
                output.accept(EMPTY_ENDER_DRAGON_FRIED_EGG_BAG);
                output.accept(LAGUSTA_BAG);
                output.accept(EMPTY_LAGUSTA_BAG);
                output.accept(LAGUSTA);
                output.accept(EMPTY_BOOT_PACK);
                output.accept(QUEEN_LUCY_BATTLE_PACK);
                output.accept(FOOD_BAG);
                output.accept(FRIED_EGG);
                output.accept(OREGANO_FRIED_EGG);
                output.accept(OMELET);
                output.accept(TURTLE_FRIED_EGG);
                output.accept(OREGANO_TURTLE_FRIED_EGG);
                output.accept(TURTLE_OMELET);
                output.accept(ENDER_DRAGON_FRIED_EGG);
                output.accept(OREGANO_ENDER_DRAGON_FRIED_EGG);
                output.accept(ENDER_OMELET);
                output.accept(PINE_JELLY);
                output.accept(CHEESE_BREAD);
                output.accept(FOOD_BAG_ALT);
                output.accept(CHEESE_BREAD_BAG);
                output.accept(PATTY);
                output.accept(NOTEBOOK);
                output.accept(FRIED_NOTEBOOK);
                output.accept(STUFFED_COOKIE_NOTEBOOK);
                output.accept(FRIED_STUFFED_COOKIE_NOTEBOOK);
            }).build());

    public static void generateEffectJamTypes(CreativeModeTab.Output output, HolderLookup.RegistryLookup<Potion> potions, Item item, CreativeModeTab.TabVisibility visibility, FeatureFlagSet requiredFeatures) {
        potions.listElements().filter(potion -> potion.value().isEnabled(requiredFeatures)).map(potion -> PotionContents.createItemStack(item, potion))
                .forEach(stack -> output.accept(stack, visibility));
    }
}
