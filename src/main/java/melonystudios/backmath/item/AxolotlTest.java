package melonystudios.backmath.item;

import melonystudios.backmath.BackMath;
import melonystudios.backmath.fluid.BMFluids;
import melonystudios.backmath.component.BMDataComponents;
import melonystudios.backmath.component.custom.SuperchargeSettings;
import melonystudios.backmath.crystallizer.item.CrystallizerMaterialItem;
import melonystudios.backmath.crystallizer.item.MoldItem;
import melonystudios.backmath.crystallizer.item.MoldsBookItem;
import melonystudios.backmath.item.behavior.BMItemBehaviors;
import melonystudios.backmath.item.behavior.FoodSettings;
import melonystudios.backmath.item.behavior.ItemBehaviorParameters;
import melonystudios.backmath.item.custom.*;
import melonystudios.backmath.item.custom.armor.*;
import melonystudios.backmath.item.custom.behavior.BMArmorItem;
import melonystudios.backmath.item.custom.behavior.*;
import melonystudios.backmath.item.custom.food.BMFoodItem;
import melonystudios.backmath.item.custom.food.BMFoods;
import melonystudios.backmath.item.custom.food.MealItem;
import melonystudios.backmath.item.custom.food.PopsicleItem;
import melonystudios.backmath.item.custom.food.drink.JuiceItem;
import melonystudios.backmath.item.custom.food.drink.TeaItem;
import melonystudios.backmath.item.custom.food.jam.EffectJamItem;
import melonystudios.backmath.item.custom.food.jam.JamItem;
import melonystudios.backmath.item.custom.tool.*;
import melonystudios.backmath.item.custom.tool.bow.AngelicBowItem;
import melonystudios.backmath.item.custom.tool.bow.BMCrossbowItem;
import melonystudios.backmath.item.custom.tool.bow.DevilBowItem;
import melonystudios.backmath.item.custom.tool.bow.MidTermBowItem;
import melonystudios.backmath.item.custom.tool.misc.*;
import melonystudios.backmath.misc.BMJukeboxSongs;
import melonystudios.backmath.util.BMResourceLocations;
import net.minecraft.ChatFormatting;
import net.minecraft.core.component.DataComponents;
import net.minecraft.network.chat.Component;
import net.minecraft.world.food.Foods;
import net.minecraft.world.item.*;
import net.neoforged.neoforge.registries.DeferredItem;
import net.neoforged.neoforge.registries.DeferredRegister;

import static melonystudios.backmath.item.BMSetFields.*;

public class AxolotlTest {
    public static final DeferredRegister.Items ITEMS = DeferredRegister.createItems(BackMath.MOD_ID);

    // Back Layer:
    public static final DeferredItem<Item> CHARJAN_COAL = ITEMS.register("charjan_coal", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> RAW_DEVIL = ITEMS.register("raw_devil", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> RAW_ANGELIC = ITEMS.register("raw_angelic", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> RAW_MID_TERM = ITEMS.register("raw_mid_term", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> RAW_ALJAMEED = ITEMS.register("raw_aljameed", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> RAW_ALJAMIC_COPPER = ITEMS.register("raw_aljamic_copper", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> RAW_ALJAMIC_TIN = ITEMS.register("raw_aljamic_tin", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> RAW_MOONER = ITEMS.register("raw_mooner", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRUSHED_DEVIL_ORE = ITEMS.register("crushed_devil_ore", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRUSHED_ANGELIC_ORE = ITEMS.register("crushed_angelic_ore", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRUSHED_MID_TERM_ORE = ITEMS.register("crushed_mid_term_ore", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> CRUSHED_CHRISTIAN_MID_TERM = ITEMS.register("crushed_christian_mid_term", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> CRUSHED_ALJAMEED_ORE = ITEMS.register("crushed_aljameed_ore", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRUSHED_MOONERING_ORE = ITEMS.register("crushed_moonering_ore", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> MID_TERM = ITEMS.register("mid_term", () -> new MidTermItem(new Item.Properties().fireResistant().component(BMDataComponents.SUPERCHARGE_SETTINGS, SuperchargeSettings.DEFAULT).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM = ITEMS.register("obsidian_infused_mid_term", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> MILKLLARITY = ITEMS.register("milkllarity", () -> new CrystallizerMaterialItem(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> EMOTIONAL_SINGULARITY = ITEMS.register("emotional_singularity", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> HEAT_SINGULARITY = ITEMS.register("heat_singularity", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> TEMPERATURE_SINGULARITY = ITEMS.register("temperature_singularity", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> CHRISTIANITY_SINGULARITY = ITEMS.register("christianity_singularity", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MANGIBELARITY = ITEMS.register("mangibelarity", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> AMARACAMELARITY = ITEMS.register("amaracamelarity", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> YIN_YANG = ITEMS.register("yin_yang", () -> new Item(new Item.Properties().fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> FRUTIFERY_SINGULARITY_BACKMATH = ITEMS.register("frutifery_singularity_backmath", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> FRUTIFERY_SINGULARITY_MINECRAFT = ITEMS.register("frutifery_singularity_minecraft", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MEATY_SINGULARITY_SOPHIE = ITEMS.register("meaty_singularity_sophie", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MEATY_SINGULARITY_FABRICIO = ITEMS.register("meaty_singularity_fabricio", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MEATY_SINGULARITY_LUCIA = ITEMS.register("meaty_singularity_lucia", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MEATY_SINGULARITY_MINECRAFT = ITEMS.register("meaty_singularity_minecraft", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> FISHY_SINGULARITY = ITEMS.register("fishy_singularity", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> VEGETABLY_SINGULARITY = ITEMS.register("vegetably_singularity", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> VEGETABLY_SINGULARITY_VARIANTS = ITEMS.register("vegetably_singularity_variants", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MULTI_SINGULARITY_FRAME = ITEMS.register("multi_singularity_frame", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLINE_ANGELIC = ITEMS.register("crystalline_angelic", () -> new CrystallizerMaterialItem(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> JANTICAL = ITEMS.register("jantical", () -> new JanticalItem(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> CUT_JANTICAL = ITEMS.register("cut_jantical", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> PERSONA_SHARD = ITEMS.register("persona_shard", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> EMERIOND = ITEMS.register("emeriond", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKLLARITY_SHARD = ITEMS.register("milkllarity_shard", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MID_TERM_SHARD = ITEMS.register("mid_term_shard", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_SHARD = ITEMS.register("obsidian_infused_mid_term_shard", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> CRYSTALLINE_ANGELIC_SHARD = ITEMS.register("crystalline_angelic_shard", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> JANTICAL_SHARD = ITEMS.register("jantical_shard", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> DIAMOND_SHARD = ITEMS.register("diamond_nugget", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> DEVIL_NUGGET = ITEMS.register("devil_nugget", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ANGELIC_NUGGET = ITEMS.register("angelic_nugget", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> MILKLLARY_NUGGET = ITEMS.register("milkllary_nugget", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> TWO_THIRDS_HILLARY_NUGGET = ITEMS.register("mid_hillary_nugget", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> HARDENED_AMARACAMEL_NUGGET = ITEMS.register("hardened_amaracamel_nugget", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CHRISTIAN_MID_TERM_NUGGET = ITEMS.register("christian_mid_term_nugget", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MID_TERM_NUGGET = ITEMS.register("mid_term_nugget", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_NUGGET = ITEMS.register("obsidian_infused_mid_term_nugget", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> ALJAMEED_NUGGET = ITEMS.register("aljameed_nugget", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTEEL_NUGGET = ITEMS.register("aljansteel_nugget", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> MOONERING_NUGGET = ITEMS.register("moonering_nugget", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> DEVIL_INGOT = ITEMS.register("devil_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> DEVIL_ANGELIC_ALLOY_INGOT = ITEMS.register("devil_angelic_alloy_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ANGELIC_INGOT = ITEMS.register("angelic_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> MILKLLARY_INGOT = ITEMS.register("milkllary_ingot", () -> new CrystallizerMaterialItem(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> TWO_THIRDS_HILLARY_INGOT = ITEMS.register("mid_hillary_ingot", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> HARDENED_AMARACAMEL_BATTER = ITEMS.register("hardened_amaracamel_batter", () -> new CrystallizerMaterialItem(new Item.Properties()));
    public static final DeferredItem<Item> HARDENED_AMARACAMEL_INGOT = ITEMS.register("hardened_amaracamel_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CHRISTIAN_MID_TERM_INGOT = ITEMS.register("christian_mid_term_ingot", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> CHRISTIAN_MID_TERM_DEVIL_ALLOY_INGOT = ITEMS.register("christian_mid_term_devil_alloy_ingot", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> CHRISTIAN_MID_TERM_ANGELIC_ALLOY_INGOT = ITEMS.register("christian_mid_term_angelic_alloy_ingot", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> WARMTERM_INGOT = ITEMS.register("warmterm_ingot", () -> new Item(new Item.Properties().fireResistant().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MID_TERM_INGOT = ITEMS.register("mid_term_ingot", () -> new CrystallizerMaterialItem(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> COLDTERM_INGOT = ITEMS.register("coldterm_ingot", () -> new Item(new Item.Properties().fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_INGOT = ITEMS.register("obsidian_infused_mid_term_ingot", () -> new CrystallizerMaterialItem(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> OBSIDIAN_INGOT = ITEMS.register("obsidian_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ALJAMEED_INGOT = ITEMS.register("aljameed_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTEEL_INGOT = ITEMS.register("aljansteel_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ALJAMIC_COPPER_INGOT = ITEMS.register("aljamic_copper_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ALJAMIC_TIN_INGOT = ITEMS.register("aljamic_tin_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> MOONERING_INGOT = ITEMS.register("moonering_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_GUARANA_INGOT = ITEMS.register("crystallized_guarana_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_MANGO_INGOT = ITEMS.register("crystallized_mango_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_MANGAED_MANGO_INGOT = ITEMS.register("crystallized_mangaed_mango_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_GRAPE_INGOT = ITEMS.register("crystallized_grape_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_LEMON_INGOT = ITEMS.register("crystallized_lemon_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_PINEAPPLE_INGOT = ITEMS.register("crystallized_pineapple_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_ORANGE_INGOT = ITEMS.register("crystallized_orange_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_BANANA_INGOT = ITEMS.register("crystallized_banana_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_GUAVA_INGOT = ITEMS.register("crystallized_guava_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_JABUTICABA_INGOT = ITEMS.register("crystallized_jabuticaba_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_ALJAMIC_BERRY_INGOT = ITEMS.register("crystallized_aljamic_berry_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_ALJAME_INGOT = ITEMS.register("crystallized_aljame_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_APPLE_INGOT = ITEMS.register("crystallized_apple_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_GOLDEN_APPLE_INGOT = ITEMS.register("crystallized_golden_apple_ingot", () -> new Item(new Item.Properties().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> CRYSTALLIZED_ENCHANTED_GOLDEN_APPLE_INGOT = ITEMS.register("crystallized_enchanted_golden_apple_ingot", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> CRYSTALLIZED_MELON_INGOT = ITEMS.register("crystallized_melon_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_PUMPKIN_INGOT = ITEMS.register("crystallized_pumpkin_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_SWEET_BERRY_INGOT = ITEMS.register("crystallized_sweet_berry_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLIZED_GLOW_BERRY_INGOT = ITEMS.register("crystallized_glow_berry_ingot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> HILLARY_BUCKET = ITEMS.register("hilary_bucket", () -> new BucketItem(BMFluids.HILLARY.get(), new Item.Properties().craftRemainder(Items.BUCKET).stacksTo(1)));
    public static final DeferredItem<Item> MILKLLARY_BUCKET = ITEMS.register("milklary_bucket", () -> new BucketItem(BMFluids.MILKLLARY.get(), new Item.Properties().craftRemainder(Items.BUCKET).rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> LIQUID_ALJAME_BUCKET = ITEMS.register("liquid_aljame_bucket", () -> new BucketItem(BMFluids.LIQUID_ALJAME.get(), new Item.Properties().craftRemainder(Items.BUCKET).stacksTo(1)));
    public static final DeferredItem<Item> LIQUID_MANGA_BUCKET = ITEMS.register("liquid_manga_bucket", () -> new BucketItem(BMFluids.LIQUID_MANGA.get(), new Item.Properties().craftRemainder(Items.BUCKET).stacksTo(1)));
    public static final DeferredItem<Item> LIQUEFIED_MONSTER_BUCKET = ITEMS.register("liquefied_monster_bucket", () -> new BucketItem(BMFluids.LIQUEFIED_MONSTER.get(), new Item.Properties().craftRemainder(Items.BUCKET).stacksTo(1)));
    public static final DeferredItem<Item> SLEEPISHWATER_BUCKET = ITEMS.register("sleepishwater_bucket", () -> new BucketItem(BMFluids.SLEEPISHWATER.get(), new Item.Properties().craftRemainder(Items.BUCKET).stacksTo(1)));
    public static final DeferredItem<Item> MOLTEN_MID_TERM_BUCKET = ITEMS.register("molten_mid_term_bucket", () -> new CrystallizerMaterialItem(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).fireResistant().craftRemainder(Items.BUCKET).rarity(Rarity.RARE).stacksTo(1)));
    public static final DeferredItem<Item> CRYSTALLINE_BIRCH_STICK = ITEMS.register("crystalline_birch_stick", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> GOLDENWOOD_STICK = ITEMS.register("goldenwood_stick", () -> new Item(new Item.Properties().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> GUAVA_STICK = ITEMS.register("guava_stick", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> JABUTICABA_STICK = ITEMS.register("jabuticaba_stick", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CORK_OAK_STICK = ITEMS.register("cork_oak_stick", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ALJANWOOD_STICK = ITEMS.register("aljanwood_stick", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ALJANCAP_STICK = ITEMS.register("aljancap_stick", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> INSOMNIAN_STICK = ITEMS.register("insomnian_stick", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> AVONDALIC_WILLOW_STICK = ITEMS.register("avondalic_willow_stick", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> DEVIL_ROD = ITEMS.register("devil_rod", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ANGELIC_ROD = ITEMS.register("angelic_rod", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> HILLARY_ROD = ITEMS.register("hillary_rod", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> MID_TERM_ROD = ITEMS.register("mid_term_rod", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> HUMAN_PATRICK = ITEMS.register("human_patrick", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).rarity(Rarity.EPIC).stacksTo(1).fireResistant()));
    public static final DeferredItem<Item> CORK_STOPPER = ITEMS.register("cork_stopper", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ALJANWOOD_BOAT = ITEMS.register("aljanwood_boat", () -> new Item(new Item.Properties().component(BMDataComponents.WOOD_TYPE, "aljanwood").stacksTo(1)));
    public static final DeferredItem<Item> ALJANCAP_BOAT = ITEMS.register("aljancap_boat", () -> new Item(new Item.Properties().component(BMDataComponents.WOOD_TYPE, "aljancap").stacksTo(1)));
    public static final DeferredItem<Item> INSOMNIAN_BOAT = ITEMS.register("insomnian_boat", () -> new Item(new Item.Properties().component(BMDataComponents.WOOD_TYPE, "insomnian").stacksTo(1)));
    public static final DeferredItem<Item> JANTIQUIFIED_PEARL = ITEMS.register("jantiquified_pearl", () -> new JantiquifiedPearlItem(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> INSOFLINT = ITEMS.register("insoflint", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CARAMELED_WHEAT = ITEMS.register("carameled_wheat", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CARAMELED_WHEAT_DOUGH = ITEMS.register("carameled_wheat_dough", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ALJAMEED_BONE = ITEMS.register("aljameed_bone", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> SLEEPISH_BONE = ITEMS.register("sleepish_bone", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> SLEEPISH_FERTILIZER = ITEMS.register("sleepish_fertilizer", () -> new SleepishFertilizerItem(new Item.Properties()));
    public static final DeferredItem<Item> JANTSKIN = ITEMS.register("jantskin", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> STICKY_AMARACAMEL_BALL = ITEMS.register("sticky_amaracamel_ball", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> RED_YELLOW_DYE = ITEMS.register("devil_dye", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ALJAN_LIGHT_BLUE_DYE = ITEMS.register("aljan_light_blue_dye", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> POISON_BROWN_DYE = ITEMS.register("poison_brown_dye", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> INSOMNIAN_DYE = ITEMS.register("insomnian_dye", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ANGELIC_MEAL_PLATE = ITEMS.register("angelic_meal_plate", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> QUEEN_LUCY_BATTLE_INFO = ITEMS.register("queen_sophie_battle_info", () -> new DescriptiveItem(Component.translatable("tooltip.backmath.queen_lucy_battle_info"), new Item.Properties().rarity(Rarity.EPIC).fireResistant()));
    public static final DeferredItem<Item> REGULAR_MOLDS_BOOK = ITEMS.register("regular_molds_book", () -> new MoldsBookItem(new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> ADVANCED_MOLDS_BOOK = ITEMS.register("advanced_molds_book", () -> new MoldsBookItem(new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> ALJAMIC_GLASS_BOTTLE = ITEMS.register("aljamic_glass_bottle", () -> new AljamicGlassBottleItem(new Item.Properties()));
    public static final DeferredItem<Item> SLEEPISHWATER_BOTTLE = ITEMS.register("sleepishwater_bottle", () -> new SleepishwaterBottleItem(new Item.Properties().stacksTo(1)));
    public static final DeferredItem<Item> SOPHIE_FRAGRANCE = ITEMS.register("sophie_fragrance", () -> new Item(new Item.Properties().stacksTo(1)));
    public static final DeferredItem<Item> GEL_ALCOHOL = ITEMS.register("gel_alcohol", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> HILLARY_DISINFECTANT = ITEMS.register("hilary_disinfectant", () -> new Item(new Item.Properties().stacksTo(2)));
    public static final DeferredItem<Item> HILLARY_DEODORANT = ITEMS.register("hilary_deodorant", () -> new Item(new Item.Properties().stacksTo(16)));
    public static final DeferredItem<Item> GLUE = ITEMS.register("glue", () -> new Item(new Item.Properties().durability(384)));
    public static final DeferredItem<Item> TWO_THIRDS_HILLARY_KEY = ITEMS.register("mid_hillary_key", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> CARAMELED_WHEAT_SEEDS = ITEMS.register("carameled_wheat_seeds", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> DEVIL_DUST = ITEMS.register("devil_dust", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> DEVIL_ANGELIC_DUST = ITEMS.register("devil_angelic_dust", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> ANGELIC_DUST = ITEMS.register("angelic_dust", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> HILLARY_AGGLOMERATIO = ITEMS.register("hillary_agglomeratio", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> MILKLLARY_AGGLOMERATIO = ITEMS.register("milkllary_agglomeratio", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> TWO_THIRDS_HILLARY_DUST = ITEMS.register("two_thirds_hillary_dust", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> CARAMELED_WHEAT_FLOUR = ITEMS.register("carameled_wheat_flour", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CHRISTIAN_MID_TERM_DUST = ITEMS.register("christian_mid_term_dust", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> CHRISTIAN_MID_TERM_DEVIL_DUST = ITEMS.register("christian_mid_term_devil_dust", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> CHRISTIAN_MID_TERM_ANGELIC_DUST = ITEMS.register("christian_mid_term_angelic_dust", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MID_TERM_DUST = ITEMS.register("mid_term_dust", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_DUST = ITEMS.register("obsidian_infused_mid_term_dust", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> ALJAMEED_DUST = ITEMS.register("aljameed_dust", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTEEL_BLEND = ITEMS.register("aljansteel_blend", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> MOONERING_DUST = ITEMS.register("moonering_dust", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CEBOLINHA_HAIR_STRAND = ITEMS.register("cebolinha_hair_strand", () -> new CebolinhaHairStrandItem(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> SPATH_SIRIUS_BLACK = ITEMS.register("spath_simos_drack", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> BLACK_SULIOS = ITEMS.register("black_sulios", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> EMPTY_MOLD = ITEMS.register("empty_mold", () -> new MoldItem("empty", new Item.Properties()));
    public static final DeferredItem<Item> SINGULARITY_MOLD = ITEMS.register("singularity_mold", () -> new MoldItem("singularity", new Item.Properties().stacksTo(1)));
    public static final DeferredItem<Item> CRYSTALLIZED_MOLD = ITEMS.register("crystallized_mold", () -> new MoldItem("crystallized", new Item.Properties().stacksTo(1)));
    public static final DeferredItem<Item> INGOT_MOLD = ITEMS.register("ingot_mold", () -> new MoldItem("ingot", new Item.Properties().stacksTo(1)));
    public static final DeferredItem<Item> MOLD_MOLD = ITEMS.register("mold_mold", () -> new MoldItem("mold", new Item.Properties().stacksTo(1)));
    public static final DeferredItem<Item> ROD_MOLD = ITEMS.register("rod_mold", () -> new MoldItem("rod", new Item.Properties().stacksTo(1)));
    public static final DeferredItem<Item> CRYSTALLINE_EMPTY_MOLD = ITEMS.register("crystalline_empty_mold", () -> new MoldItem("crystalline_empty", new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> CRYSTALLINE_GEM_MOLD = ITEMS.register("crystalline_gem_mold", () -> new MoldItem("crystalline_gem", new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> UPGRADE_TOKEN_BASE = ITEMS.register("upgrade_token_base", () -> new UpgradeTokenItem(new Item.Properties().rarity(Rarity.UNCOMMON), "base"));
    public static final DeferredItem<Item> UPGRADE_TOKEN_FLAME = ITEMS.register("upgrade_token_flame", () -> new UpgradeTokenItem(new Item.Properties().rarity(Rarity.UNCOMMON), "flame"));
    public static final DeferredItem<Item> UPGRADE_TOKEN_CRYSTALLIZER_UPG = ITEMS.register("upgrade_token_crystallizer_upg", () -> new UpgradeTokenItem(new Item.Properties().rarity(Rarity.UNCOMMON), "crystallizer_upg"));
    public static final DeferredItem<Item> BLANK_MOB_PERSONA_CARD = ITEMS.register("blank_mob_persona_card", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> MOB_PERSONA_CARD_WAN_SOP = ITEMS.register("mob_persona_card_wan_sop", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> MOB_PERSONA_CARD_ANG_SOP = ITEMS.register("mob_persona_card_ang_sop", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> MOB_PERSONA_CARD_INS_SOP = ITEMS.register("mob_persona_card_ins_sop", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> MOB_PERSONA_CARD_WAR_SOP = ITEMS.register("mob_persona_card_war_sop", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> MOB_PERSONA_CARD_QUE_LUC = ITEMS.register("mob_persona_card_que_sop", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> MOB_PERSONA_CARD_ARC_LUC = ITEMS.register("mob_persona_card_arc_luc", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> MOB_PERSONA_CARD_KAR_LUC = ITEMS.register("mob_persona_card_kar_luc", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> MOB_PERSONA_CARD_SHY_ALC = ITEMS.register("mob_persona_card_shy_fab", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> MOB_PERSONA_CARD_MAL = ITEMS.register("mob_persona_card_mal", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1)));
    public static final DeferredItem<Item> WANDERER_SOPHIE_SPAWN_EGG = ITEMS.register("friend_sophie_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ANGRY_SOPHIE_SPAWN_EGG = ITEMS.register("angry_sophie_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> INSOMNIA_SOPHIE_SPAWN_EGG = ITEMS.register("insomnia_sophie_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ARCHER_INSOMNIA_SOPHIE_SPAWN_EGG = ITEMS.register("archer_insomnia_sophie_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> WARRIOR_SOPHIE_SPAWN_EGG = ITEMS.register("warrior_sophie_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> QUEEN_LUCY_SPAWN_EGG = ITEMS.register("queen_sophie_spawn_egg", () -> new Item(new Item.Properties().rarity(Rarity.EPIC).fireResistant()));
    public static final DeferredItem<Item> QUEEN_LUCY_PET_SPAWN_EGG = ITEMS.register("queen_sophie_pet_spawn_egg", () -> new Item(new Item.Properties().rarity(Rarity.EPIC).fireResistant()));
    public static final DeferredItem<Item> ARCHER_LUCIA_SPAWN_EGG = ITEMS.register("archer_lucia_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> KARATE_LUCIA_SPAWN_EGG = ITEMS.register("karate_lucia_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> SHY_ALCALYTE_SPAWN_EGG = ITEMS.register("shy_fabricio_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> COLLECTOR_ALCALYTE_SPAWN_EGG = ITEMS.register("collector_fabricio_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> MALAIKA_SPAWN_EGG = ITEMS.register("malaika_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> INSOMNIA_ZOMBIE_SPAWN_EGG = ITEMS.register("insomnia_zombie_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ZOMBIE_FABRICIO_SPAWN_EGG = ITEMS.register("zombie_fabricio_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ALJAMIC_BONES_SPAWN_EGG = ITEMS.register("aljamic_bones_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> SLEEPISH_SKELETON_SPAWN_EGG = ITEMS.register("sleepish_skeleton_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> AMARACAMELER_SPAWN_EGG = ITEMS.register("amaracameler_spawn_egg", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> JANTICLE_SPAWN_EGG = ITEMS.register("janticle_spawn_egg", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> WELLERMAN_DISC = ITEMS.register("wellerman_disc", () -> new Item(new Item.Properties().jukeboxPlayable(BMJukeboxSongs.WELLERMAN).stacksTo(1).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> SNOWMAN_DISC = ITEMS.register("snowman_disc", () -> new Item(new Item.Properties().jukeboxPlayable(BMJukeboxSongs.SNOWMAN).stacksTo(1).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> DUET_CHALLENGE_DISC = ITEMS.register("ericwho_disc", () -> new Item(new Item.Properties().jukeboxPlayable(BMJukeboxSongs.DUET_CHALLENGE).stacksTo(1).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> ARCADE_DISC = ITEMS.register("arcade_disc", () -> new Item(new Item.Properties().jukeboxPlayable(BMJukeboxSongs.ARCADE).stacksTo(1).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> SUGAR_CRASH_DISC = ITEMS.register("sugar_crash_disc", () -> new Item(new Item.Properties().jukeboxPlayable(BMJukeboxSongs.SUGAR_CRASH).stacksTo(1).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> O_ONIBUS_VAI_DERRAPAR_DISC = ITEMS.register("zonibus_disc", () -> new Item(new Item.Properties().jukeboxPlayable(BMJukeboxSongs.O_ONIBUS_VAI_DERRAPAR).stacksTo(1).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> IEVAN_POLKKA_DISC = ITEMS.register("ievan_polkka_disc", () -> new Item(new Item.Properties().jukeboxPlayable(BMJukeboxSongs.IEVAN_POLKKA).stacksTo(1).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> NEVER_GONNA_GIVE_YOU_UP_DISC = ITEMS.register("rick_roll_disc", () -> new Item(new Item.Properties().jukeboxPlayable(BMJukeboxSongs.NEVER_GONNA_GIVE_YOU_UP).stacksTo(1).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> BEGGIN_DISC = ITEMS.register("beggin_disc", () -> new Item(new Item.Properties().jukeboxPlayable(BMJukeboxSongs.BEGGIN).stacksTo(1).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> STAY_DISC = ITEMS.register("stay_disc", () -> new Item(new Item.Properties().jukeboxPlayable(BMJukeboxSongs.STAY).stacksTo(1).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> THE_FLYING_ARM_DISC = ITEMS.register("the_flying_arm_disc", () -> new Item(new Item.Properties().jukeboxPlayable(BMJukeboxSongs.THE_FLYING_ARM).stacksTo(1).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> DRAMATIC_INTRO_1_DISC = ITEMS.register("sophies_dramatic_entrance_1_disc", () -> new Item(new Item.Properties().jukeboxPlayable(BMJukeboxSongs.DRAMATIC_INTRO_1).stacksTo(1).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> DRAMATIC_INTRO_2_DISC = ITEMS.register("sophies_dramatic_entrance_2_disc", () -> new Item(new Item.Properties().jukeboxPlayable(BMJukeboxSongs.DRAMATIC_INTRO_2).stacksTo(1).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> DRAMATIC_INTRO_3_DISC = ITEMS.register("sophies_dramatic_entrance_3_disc", () -> new Item(new Item.Properties().jukeboxPlayable(BMJukeboxSongs.DRAMATIC_INTRO_3).stacksTo(1).rarity(Rarity.UNCOMMON)));

    // Back Math Weaponry
    public static final DeferredItem<Item> DEVIL_WARRIOR_HELMET = ITEMS.register("devil_warrior_helmet", () -> new BMArmorItem(WARRIOR_DEVIL_ARMOR, ArmorItem.Type.HELMET, BMItemBehaviors.DEVIL, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(18))));
    public static final DeferredItem<Item> DEVIL_HELMET = ITEMS.register("devil_helmet", () -> new BMArmorItem(DEVIL_ARMOR, ArmorItem.Type.HELMET, BMItemBehaviors.DEVIL, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(18))));
    public static final DeferredItem<Item> DEVIL_CHESTPLATE = ITEMS.register("devil_chestplate", () -> new BMArmorItem(DEVIL_ARMOR, ArmorItem.Type.CHESTPLATE, BMItemBehaviors.DEVIL, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(18))));
    public static final DeferredItem<Item> DEVIL_LEGGINGS = ITEMS.register("devil_leggings", () -> new BMArmorItem(DEVIL_ARMOR, ArmorItem.Type.LEGGINGS, BMItemBehaviors.DEVIL, new Item.Properties().durability(ArmorItem.Type.LEGGINGS.getDurability(18))));
    public static final DeferredItem<Item> DEVIL_BOOTS = ITEMS.register("devil_boots", () -> new BMArmorItem(DEVIL_ARMOR, ArmorItem.Type.BOOTS, BMItemBehaviors.DEVIL, new Item.Properties().durability(ArmorItem.Type.BOOTS.getDurability(18))));
    public static final DeferredItem<Item> ANGELIC_WARRIOR_HELMET = ITEMS.register("angelic_warrior_helmet", () -> new BMArmorItem(WARRIOR_ANGELIC_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(15))));
    public static final DeferredItem<Item> ANGELIC_HELMET = ITEMS.register("angelic_helmet", () -> new BMArmorItem(ANGELIC_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(15))));
    public static final DeferredItem<Item> ANGELIC_CHESTPLATE = ITEMS.register("angelic_chestplate", () -> new BMArmorItem(ANGELIC_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(15))));
    public static final DeferredItem<Item> ANGELIC_LEGGINGS = ITEMS.register("angelic_leggings", () -> new BMArmorItem(ANGELIC_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties().durability(ArmorItem.Type.LEGGINGS.getDurability(15))));
    public static final DeferredItem<Item> ANGELIC_BOOTS = ITEMS.register("angelic_boots", () -> new BMArmorItem(ANGELIC_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties().durability(ArmorItem.Type.BOOTS.getDurability(15))));
    public static final DeferredItem<Item> HARDENED_AMARACAMEL_WARRIOR_HELMET = ITEMS.register("hardened_amaracamel_warrior_helmet", () -> new BMArmorItem(WARRIOR_HARDENED_AMARACAMEL_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(17))));
    public static final DeferredItem<Item> HARDENED_AMARACAMEL_HELMET = ITEMS.register("hardened_amaracamel_helmet", () -> new BMArmorItem(HARDENED_AMARACAMEL_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(17))));
    public static final DeferredItem<Item> HARDENED_AMARACAMEL_CHESTPLATE = ITEMS.register("hardened_amaracamel_chestplate", () -> new BMArmorItem(HARDENED_AMARACAMEL_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(17))));
    public static final DeferredItem<Item> HARDENED_AMARACAMEL_LEGGINGS = ITEMS.register("hardened_amaracamel_leggings", () -> new BMArmorItem(HARDENED_AMARACAMEL_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties().durability(ArmorItem.Type.LEGGINGS.getDurability(17))));
    public static final DeferredItem<Item> HARDENED_AMARACAMEL_BOOTS = ITEMS.register("hardened_amaracamel_boots", () -> new BMArmorItem(HARDENED_AMARACAMEL_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties().durability(ArmorItem.Type.BOOTS.getDurability(17))));
    public static final DeferredItem<Item> MID_TERM_WARRIOR_HELMET = ITEMS.register("mid_term_warrior_helmet", () -> new MidTermArmorItem(WARRIOR_MID_TERM_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(47)).fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MID_TERM_HELMET = ITEMS.register("mid_term_helmet", () -> new MidTermArmorItem(MID_TERM_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(47)).fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MID_TERM_BREASTPLATE = ITEMS.register("mid_term_breastplate", () -> new MidTermArmorItem(MID_TERM_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(47)).fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MID_TERM_LEGGINGS = ITEMS.register("mid_term_leggings", () -> new MidTermArmorItem(MID_TERM_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties().durability(ArmorItem.Type.LEGGINGS.getDurability(47)).fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MID_TERM_BOOTS = ITEMS.register("mid_term_boots", () -> new MidTermArmorItem(MID_TERM_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties().durability(ArmorItem.Type.BOOTS.getDurability(47)).fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_WARRIOR_HELMET = ITEMS.register("obsidian_infused_mid_term_warrior_helmet", () -> new MidTermArmorItem(WARRIOR_OBSIDIAN_INFUSED_MID_TERM_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(53)).fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_HELMET = ITEMS.register("obsidian_infused_mid_term_helmet", () -> new MidTermArmorItem(OBSIDIAN_INFUSED_MID_TERM_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(53)).fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_BREASTPLATE = ITEMS.register("obsidian_infused_mid_term_breastplate", () -> new MidTermArmorItem(OBSIDIAN_INFUSED_MID_TERM_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(53)).fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_LEGGINGS = ITEMS.register("obsidian_infused_mid_term_leggings", () -> new MidTermArmorItem(OBSIDIAN_INFUSED_MID_TERM_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties().durability(ArmorItem.Type.LEGGINGS.getDurability(53)).fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_BOOTS = ITEMS.register("obsidian_infused_mid_term_boots", () -> new MidTermArmorItem(OBSIDIAN_INFUSED_MID_TERM_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties().durability(ArmorItem.Type.BOOTS.getDurability(53)).fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> PLATEFORCED_MID_TERM_HELMET = ITEMS.register("plateforced_mid_term_helmet", () -> new BMArmorItem(PLATEFORCED_MID_TERM_ARMOR, ArmorItem.Type.HELMET, BMItemBehaviors.PLATEFORCED_MID_TERM, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(50)).fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> PLATEFORCED_MID_TERM_BREASTPLATE = ITEMS.register("plateforced_mid_term_breastplate", () -> new BMArmorItem(PLATEFORCED_MID_TERM_ARMOR, ArmorItem.Type.CHESTPLATE, BMItemBehaviors.PLATEFORCED_MID_TERM, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(50)).fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> PLATEFORCED_MID_TERM_LEGGINGS = ITEMS.register("plateforced_mid_term_leggings", () -> new BMArmorItem(PLATEFORCED_MID_TERM_ARMOR, ArmorItem.Type.LEGGINGS, BMItemBehaviors.PLATEFORCED_MID_TERM, new Item.Properties().durability(ArmorItem.Type.LEGGINGS.getDurability(50)).fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> PLATEFORCED_MID_TERM_BOOTS = ITEMS.register("plateforced_mid_term_boots", () -> new BMArmorItem(PLATEFORCED_MID_TERM_ARMOR, ArmorItem.Type.BOOTS, BMItemBehaviors.PLATEFORCED_MID_TERM, new Item.Properties().durability(ArmorItem.Type.BOOTS.getDurability(50)).fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> MILKLLARY_WARRIOR_HELMET = ITEMS.register("milkllary_warrior_helmet", () -> new BMArmorItem(WARRIOR_MILKLLARY_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(15)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKLLARY_HELMET = ITEMS.register("milkllary_helmet", () -> new BMArmorItem(MILKLLARY_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(15)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKLLARY_CHESTPLATE = ITEMS.register("milkllary_chestplate", () -> new BMArmorItem(MILKLLARY_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(15)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKLLARY_LEGGINGS = ITEMS.register("milkllary_leggings", () -> new BMArmorItem(MILKLLARY_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties().durability(ArmorItem.Type.LEGGINGS.getDurability(15)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKLLARY_BOOTS = ITEMS.register("milkllary_boots", () -> new BMArmorItem(MILKLLARY_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties().durability(ArmorItem.Type.BOOTS.getDurability(15)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> JANTSKIN_HELMET = ITEMS.register("jantskin_helmet", () -> new BMArmorItem(JANTSKIN_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(5))));
    public static final DeferredItem<Item> JANTSKIN_CHESTPLATE = ITEMS.register("jantskin_chestplate", () -> new BMArmorItem(JANTSKIN_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(5))));
    public static final DeferredItem<Item> JANTSKIN_LEGGINGS = ITEMS.register("jantskin_leggings", () -> new BMArmorItem(JANTSKIN_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties().durability(ArmorItem.Type.LEGGINGS.getDurability(5))));
    public static final DeferredItem<Item> JANTSKIN_BOOTS = ITEMS.register("jantskin_boots", () -> new BMArmorItem(JANTSKIN_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties().durability(ArmorItem.Type.BOOTS.getDurability(5))));
    public static final DeferredItem<Item> ALJAMEED_WARRIOR_HELMET = ITEMS.register("aljameed_warrior_helmet", () -> new BMArmorItem(WARRIOR_ALJAMEED_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(15))));
    public static final DeferredItem<Item> ALJAMIC_BONE_HELMET = ITEMS.register("aljamic_bone_helmet", () -> new BMArmorItem(ALJAMIC_BONE_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(15))));
    public static final DeferredItem<Item> ALJAMEED_HELMET = ITEMS.register("aljameed_helmet", () -> new BMArmorItem(ALJAMEED_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(15))));
    public static final DeferredItem<Item> ALJAMEED_CHESTPLATE = ITEMS.register("aljameed_chestplate", () -> new BMArmorItem(ALJAMEED_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(15))));
    public static final DeferredItem<Item> ALJAMEED_LEGGINGS = ITEMS.register("aljameed_leggings", () -> new BMArmorItem(ALJAMEED_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties().durability(ArmorItem.Type.LEGGINGS.getDurability(15))));
    public static final DeferredItem<Item> ALJAMEED_BOOTS = ITEMS.register("aljameed_boots", () -> new BMArmorItem(ALJAMEED_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties().durability(ArmorItem.Type.BOOTS.getDurability(15))));
    public static final DeferredItem<Item> MOONERING_WARRIOR_HELMET = ITEMS.register("moonering_warrior_helmet", () -> new BMArmorItem(WARRIOR_MOONERING_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(33))));
    public static final DeferredItem<Item> MOONERING_HELMET = ITEMS.register("moonering_helmet", () -> new BMArmorItem(MOONERING_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(33))));
    public static final DeferredItem<Item> MOONERING_CHESTPLATE = ITEMS.register("moonering_chestplate", () -> new BMArmorItem(MOONERING_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(33))));
    public static final DeferredItem<Item> MOONERING_LEGGINGS = ITEMS.register("moonering_leggings", () -> new BMArmorItem(MOONERING_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties().durability(ArmorItem.Type.LEGGINGS.getDurability(33))));
    public static final DeferredItem<Item> MOONERING_BOOTS = ITEMS.register("moonering_boots", () -> new BMArmorItem(MOONERING_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties().durability(ArmorItem.Type.BOOTS.getDurability(33))));
    public static final DeferredItem<Item> JANTIQUIFIED_MOONERING_WARRIOR_HELMET = ITEMS.register("jantiquified_moonering_warrior_helmet", () -> new BMArmorItem(WARRIOR_JANTIQUIFIED_MOONERING_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(37)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> JANTIQUIFIED_MOONERING_HELMET = ITEMS.register("jantiquified_moonering_helmet", () -> new BMArmorItem(JANTIQUIFIED_MOONERING_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(37)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> JANTIQUIFIED_MOONERING_CHESTPLATE = ITEMS.register("jantiquified_moonering_chestplate", () -> new BMArmorItem(JANTIQUIFIED_MOONERING_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(37)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> JANTIQUIFIED_MOONERING_LEGGINGS = ITEMS.register("jantiquified_moonering_leggings", () -> new BMArmorItem(JANTIQUIFIED_MOONERING_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties().durability(ArmorItem.Type.LEGGINGS.getDurability(37)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> JANTIQUIFIED_MOONERING_BOOTS = ITEMS.register("jantiquified_moonering_boots", () -> new BMArmorItem(JANTIQUIFIED_MOONERING_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties().durability(ArmorItem.Type.BOOTS.getDurability(37)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> INSOMNIA_SOPHIE_SLEEPWEAR_BLOUSE = ITEMS.register("insomnia_sophie_sleepwear_blouse", () -> new BMArmorItem(INSOMNIAC_TERMIAN_SLEEPWEAR_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(5))));
    public static final DeferredItem<Item> INSOMNIA_SOPHIE_SLEEPWEAR_PANTS = ITEMS.register("insomnia_sophie_sleepwear_pants", () -> new BMArmorItem(INSOMNIAC_TERMIAN_SLEEPWEAR_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties().durability(ArmorItem.Type.LEGGINGS.getDurability(5))));
    public static final DeferredItem<Item> ARCHER_LUCIA_HOOD = ITEMS.register("archer_lucia_hood", () -> new BMArmorItem(ARCHER_TERMIAN_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(15)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> ARCHER_LUCIA_VEST = ITEMS.register("archer_lucia_vest", () -> new BMArmorItem(ARCHER_TERMIAN_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(15)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> ARCHER_LUCIA_BOOTS = ITEMS.register("archer_lucia_boots", () -> new BMArmorItem(ARCHER_TERMIAN_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties().durability(ArmorItem.Type.BOOTS.getDurability(15)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> ARCHER_FABRICIO_HOOD = ITEMS.register("archer_fabricio_hood", () -> new BMArmorItem(ARCHER_ALCALYTE_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(15)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> ARCHER_FABRICIO_VEST = ITEMS.register("archer_fabricio_vest", () -> new BMArmorItem(ARCHER_ALCALYTE_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(15)).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> QUEEN_LUCY_SHIRT_CURRENT = ITEMS.register("queen_lucy_shirt_current", () -> new QueenLucyShirtItem(QLS_CURRENT, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(2)).rarity(Rarity.EPIC), "current"));
    public static final DeferredItem<Item> QUEEN_LUCY_SHIRT_ALT = ITEMS.register("queen_lucy_shirt_alt", () -> new QueenLucyShirtItem(QLS_ALT, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(2)).rarity(Rarity.EPIC), "alt"));
    public static final DeferredItem<Item> QUEEN_LUCY_SHIRT_RELIC = ITEMS.register("queen_lucy_shirt_relic", () -> new QueenLucyShirtItem(QLS_RELIC, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(2)).rarity(Rarity.EPIC), "relic"));
    public static final DeferredItem<Item> BAKUGOU_HAIR = ITEMS.register("bakugou_hair", () -> new BMArmorItem(BAKUGOU_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(5))));
    public static final DeferredItem<Item> BAKUGOU_BLOUSE = ITEMS.register("bakugou_blouse", () -> new BMArmorItem(BAKUGOU_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().durability(ArmorItem.Type.CHESTPLATE.getDurability(5))));
    public static final DeferredItem<Item> BAKUGOU_PANTS = ITEMS.register("bakugou_pants", () -> new BMArmorItem(BAKUGOU_ARMOR, ArmorItem.Type.LEGGINGS, new Item.Properties().durability(ArmorItem.Type.LEGGINGS.getDurability(5))));
    public static final DeferredItem<Item> BAKUGOU_SHOES = ITEMS.register("bakugou_shoes", () -> new BMArmorItem(BAKUGOU_ARMOR, ArmorItem.Type.BOOTS, new Item.Properties().durability(ArmorItem.Type.BOOTS.getDurability(5))));
    public static final DeferredItem<Item> GOLDEN_PLATED = ITEMS.register("peitoraldeouro", () -> new ArmorItem(GOLDEN_PLATED_ARMOR, ArmorItem.Type.CHESTPLATE, new Item.Properties().rarity(Rarity.UNCOMMON).durability(ArmorItem.Type.CHESTPLATE.getDurability(17))));
    public static final DeferredItem<Item> CANDY_YELLOW_TURTLE_HELMET = ITEMS.register("candy_yellow_turtle_helmet", () -> new TurtleShellItem(CANDY_YELLOW_TURTLE_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(25))));
    public static final DeferredItem<Item> CANDY_PINK_TURTLE_HELMET = ITEMS.register("candy_pink_turtle_helmet", () -> new TurtleShellItem(CANDY_PINK_TURTLE_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(25))));
    public static final DeferredItem<Item> CAT_TIARA = ITEMS.register("tiara_de_gato", () -> new BMArmorItem(CAT_TIARA_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(37))));
    public static final DeferredItem<Item> DOG_TIARA = ITEMS.register("dog_tiara", () -> new BMArmorItem(DOG_TIARA_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(13))));
    public static final DeferredItem<Item> KARATE_HEADBAND = ITEMS.register("yellow_karate_band", () -> new KarateHeadbandItem(KARATE_HEADBAND_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(4))));
    public static final DeferredItem<Item> GOLDEN_HALO = ITEMS.register("golden_halo", () -> new BMArmorItem(GOLDEN_HALO_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(4))));
    public static final DeferredItem<Item> RED_YELLOW_GLASSES = ITEMS.register("red_yellow_glasses", () -> new BMArmorItem(RED_YELLOW_GLASSES_ARMOR, ArmorItem.Type.HELMET, new Item.Properties().durability(ArmorItem.Type.HELMET.getDurability(4))));
    public static final DeferredItem<Item> GOLDEN_CROWN = ITEMS.register("golden_crown", () -> new CrownItem(new Item.Properties()));
    public static final DeferredItem<Item> DEVIL_CROWN = ITEMS.register("devil_crown", () -> new CrownItem(BMItemBehaviors.DEVIL, new Item.Properties()));
    public static final DeferredItem<Item> ANGELIC_CROWN = ITEMS.register("angelic_crown", () -> new CrownItem(new Item.Properties()));
    public static final DeferredItem<Item> MID_TERM_CROWN = ITEMS.register("mid_term_crown", () -> new CrownItem(BMItemBehaviors.MID_TERM, new Item.Properties().rarity(Rarity.RARE).fireResistant()));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_CROWN = ITEMS.register("obsidian_infused_mid_term_crown", () -> new CrownItem(BMItemBehaviors.MID_TERM, new Item.Properties().rarity(Rarity.EPIC).fireResistant()));
    public static final DeferredItem<Item> CHRISTIAN_MID_TERM_CROWN = ITEMS.register("christian_mid_term_crown", () -> new CrownItem(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> CRYSTALLINE_ANGELIC_CROWN = ITEMS.register("crystalline_angelic_crown", () -> new CrownItem(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKLLARY_CROWN = ITEMS.register("milkllary_crown", () -> new CrownItem(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> ALJAMEED_CROWN = ITEMS.register("aljameed_crown", () -> new CrownItem(new Item.Properties()));
    public static final DeferredItem<Item> MOONERING_CROWN = ITEMS.register("moonering_crown", () -> new CrownItem(new Item.Properties()));
    public static final DeferredItem<Item> JANTICAL_CROWN = ITEMS.register("jantical_crown", () -> new CrownItem(new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MID_TERM_LONGSWORD = ITEMS.register("mid_term_greatsword", () -> new MidTermLongswordItem(MID_TERM_SET, 12, -3.4F, new Item.Properties().fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MILKED_WOODEN_SWORD = ITEMS.register("milked_wooden_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, Tiers.WOOD, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_STONE_SWORD = ITEMS.register("milked_stone_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, Tiers.STONE, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_GOLDEN_SWORD = ITEMS.register("milked_golden_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, Tiers.GOLD, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_IRON_SWORD = ITEMS.register("milked_iron_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, Tiers.IRON, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_DIAMOND_SWORD = ITEMS.register("milked_diamond_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, Tiers.DIAMOND, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_NETHERITE_SWORD = ITEMS.register("milked_netherite_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, Tiers.NETHERITE, 3, -2.4F, new Item.Properties().fireResistant()));
    public static final DeferredItem<Item> MILKED_DEVIL_SWORD = ITEMS.register("milked_devil_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_DEVIL, DEVIL_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_ANGELIC_SWORD = ITEMS.register("milked_angelic_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, ANGELIC_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_MID_TERM_SWORD = ITEMS.register("milked_mid_term_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_MID_TERM, MID_TERM_SET, 3, -2.4F, new Item.Properties().fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MILKED_OBSIDIAN_INFUSED_MID_TERM_SWORD = ITEMS.register("milked_obsidian_infused_mid_term_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_MID_TERM, OBSIDIAN_INFUSED_MID_TERM_SET, 3, -2.4F, new Item.Properties().fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> MILKEDLLARY_SWORD = ITEMS.register("milked_milkllary_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, MILKLLARY_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKED_OLIVE_SWORD = ITEMS.register("milked_olive_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, OLIVE_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKED_CRYSTALLINE_BIRCH_SWORD = ITEMS.register("milked_crystalline_birch_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, CRYSTALLINE_BIRCH_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_GOLDENWOOD_SWORD = ITEMS.register("milked_goldenwood_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, GOLDENWOOD_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MILKED_GUAVA_SWORD = ITEMS.register("milked_guava_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, GUAVA_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_JABUTICABA_SWORD = ITEMS.register("milked_jabuticaba_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, JABUTICABA_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_CORK_OAK_SWORD = ITEMS.register("milked_cork_oak_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, CORK_OAK_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_ALJANWOOD_SWORD = ITEMS.register("milked_aljanwood_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, ALJANWOOD_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_ALJANCAP_SWORD = ITEMS.register("milked_aljancap_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, ALJANCAP_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_INSOMNIAN_SWORD = ITEMS.register("milked_insomnian_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, INSOMNIAN_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_AVONDALIC_WILLOW_SWORD = ITEMS.register("milked_avondalic_willow_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, AVONDALIC_WILLOW_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_ALJANSTONE_SWORD = ITEMS.register("milked_aljanstone_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, ALJANSTONE_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_SLEEPINGSTONE_SWORD = ITEMS.register("milked_sleepingstone_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, SLEEPINGSTONE_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_ALJAMEED_BLADE = ITEMS.register("milked_aljameed_blade", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, ALJAMEED_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_ALJANSTEEL_BLADE = ITEMS.register("milked_aljansteel_blade", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, ALJANSTEEL_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_MOONERING_SWORD = ITEMS.register("milked_moonering_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, MOONERING_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MILKED_JANTIQUIFIED_MOONERING_SWORD = ITEMS.register("milked_jantiquified_moonering_sword", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, JANTIQUIFIED_MOONERING_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKED_PERSONA_BLADE = ITEMS.register("milked_persona_blade", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, PERSONA_SWORD_SET, 0, -2.4F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKED_MID_TERM_SPAREY = ITEMS.register("milked_mid_term_sparey", () -> new BMSwordItem(BMItemBehaviors.NONE, MID_TERM_SPAREY_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.RARE).fireResistant()));
    public static final DeferredItem<Item> MILKED_OBSIDIAN_INFUSED_MID_TERM_SPAREY = ITEMS.register("milked_obsidian_infused_mid_term_sparey", () -> new BMSwordItem(BMItemBehaviors.NONE, OBSIDIAN_INFUSED_MID_TERM_SPAREY_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.EPIC).fireResistant()));
    public static final DeferredItem<Item> MILKED_SPAREY = ITEMS.register("milked_sparey", () -> new BMSwordItem(BMItemBehaviors.NONE, BMSetFields.SPAREY_SET, 3, -2.4F, new Item.Properties().fireResistant().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKED_DEVIL_SPAREY = ITEMS.register("milked_devil_sparey", () -> new BMSwordItem(BMItemBehaviors.NONE, BMSetFields.DEVIL_SPAREY_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKED_GOLDEN_PATTY = ITEMS.register("milked_empada_de_ouro", () -> new BMSwordItem(BMItemBehaviors.MILKED_SWORD, GOLDEN_PATTY_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.UNCOMMON).food(Foods.GOLDEN_APPLE)));
    public static final DeferredItem<Item> MILKED_BUTTER_SWORD = ITEMS.register("milked_espada_de_manteiga", () -> new ButterSwordItem(BMItemBehaviors.MILKED_BUTTER, BUTTER_SWORD_SET, 3, -2.4F, new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> DEVIL_SWORD = ITEMS.register("devil_sword", () -> new BMSwordItem(BMItemBehaviors.DEVIL, DEVIL_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> DEVIL_PICKAXE = ITEMS.register("devil_pickaxe", () -> new BMPickaxeItem(BMItemBehaviors.DEVIL, DEVIL_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> DEVIL_SHOVEL = ITEMS.register("devil_shovel", () -> new BMShovelItem(BMItemBehaviors.DEVIL, DEVIL_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> DEVIL_AXE = ITEMS.register("devil_axe", () -> new BMAxeItem(BMItemBehaviors.DEVIL, DEVIL_SET, 6, -3.1F, new Item.Properties()));
    public static final DeferredItem<Item> DEVIL_HOE = ITEMS.register("devil_hoe", () -> new BMHoeItem(BMItemBehaviors.DEVIL, DEVIL_SET, -2, -1, new Item.Properties()));
    public static final DeferredItem<Item> ANGELIC_SWORD = ITEMS.register("angelic_sword", () -> new BMSwordItem(ANGELIC_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> ANGELIC_PICKAXE = ITEMS.register("angelic_pickaxe", () -> new BMPickaxeItem(ANGELIC_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> ANGELIC_SHOVEL = ITEMS.register("angelic_shovel", () -> new BMShovelItem(ANGELIC_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> ANGELIC_SPOON = ITEMS.register("spoon", () -> new AngelicSpoonItem(ANGELIC_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> ANGELIC_AXE = ITEMS.register("angelic_axe", () -> new BMAxeItem(ANGELIC_SET, 6, -3.1F, new Item.Properties()));
    public static final DeferredItem<Item> ANGELIC_HOE = ITEMS.register("angelic_hoe", () -> new BMHoeItem(ANGELIC_SET, -2, -1, new Item.Properties()));
    public static final DeferredItem<Item> MID_TERM_SWORD = ITEMS.register("mid_term_sword", () -> new BMSwordItem(BMItemBehaviors.MID_TERM, MID_TERM_SET, 3, -2.4F, new Item.Properties().fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MID_TERM_PICKAXE = ITEMS.register("mid_term_pickaxe", () -> new BMPickaxeItem(BMItemBehaviors.MID_TERM, MID_TERM_SET, 1, -2.8F, new Item.Properties().fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MID_TERM_SHOVEL = ITEMS.register("mid_term_shovel", () -> new BMShovelItem(BMItemBehaviors.MID_TERM, MID_TERM_SET, 5, -2.8F, new Item.Properties().fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MID_TERM_AXE = ITEMS.register("mid_term_axe", () -> new BMAxeItem(BMItemBehaviors.MID_TERM, MID_TERM_SET, 1.5F, -3, new Item.Properties().fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MID_TERM_HOE = ITEMS.register("mid_term_hoe", () -> new BMHoeItem(BMItemBehaviors.MID_TERM, MID_TERM_SET, -2, -1, new Item.Properties().fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_SWORD = ITEMS.register("obsidian_infused_mid_term_sword", () -> new BMSwordItem(BMItemBehaviors.MID_TERM, OBSIDIAN_INFUSED_MID_TERM_SET, 3, -2.4F, new Item.Properties().fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_PICKAXE = ITEMS.register("obsidian_infused_mid_term_pickaxe", () -> new BMPickaxeItem(BMItemBehaviors.MID_TERM, OBSIDIAN_INFUSED_MID_TERM_SET, 1, -2.8F, new Item.Properties().fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_SHOVEL = ITEMS.register("obsidian_infused_mid_term_shovel", () -> new BMShovelItem(BMItemBehaviors.MID_TERM, OBSIDIAN_INFUSED_MID_TERM_SET, 5, -2.8F, new Item.Properties().fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_AXE = ITEMS.register("obsidian_infused_mid_term_axe", () -> new BMAxeItem(BMItemBehaviors.MID_TERM, OBSIDIAN_INFUSED_MID_TERM_SET, 1.5F, -3, new Item.Properties().fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_HOE = ITEMS.register("obsidian_infused_mid_term_hoe", () -> new BMHoeItem(BMItemBehaviors.MID_TERM, OBSIDIAN_INFUSED_MID_TERM_SET, -2, -1, new Item.Properties().fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> MILKLLARY_SWORD = ITEMS.register("milkllary_sword", () -> new BMSwordItem(MILKLLARY_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKLLARY_PICKAXE = ITEMS.register("milkllary_pickaxe", () -> new BMPickaxeItem(MILKLLARY_SET, 1, -2.8F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKLLARY_SHOVEL = ITEMS.register("milkllary_shovel", () -> new BMShovelItem(MILKLLARY_SET, 1.5F, -3, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKLLARY_AXE = ITEMS.register("milkllary_axe", () -> new BMAxeItem(MILKLLARY_SET, 6, -3.1F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKLLARY_HOE = ITEMS.register("milkllary_hoe", () -> new BMHoeItem(MILKLLARY_SET, -2, -1, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> OLIVE_SWORD = ITEMS.register("olive_sword", () -> new BMSwordItem(OLIVE_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> OLIVE_PICKAXE = ITEMS.register("olive_pickaxe", () -> new BMPickaxeItem(OLIVE_SET, 9, -2.8F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> OLIVE_SHOVEL = ITEMS.register("olive_shovel", () -> new BMShovelItem(OLIVE_SET, 1.5F, -3, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> OLIVE_AXE = ITEMS.register("olive_axe", () -> new BMAxeItem(OLIVE_SET, 6, -3.1F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> OLIVE_HOE = ITEMS.register("olive_hoe", () -> new BMHoeItem(OLIVE_SET, -1, -1, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> SPAREY = ITEMS.register("sparey", () -> new BMSwordItem(BMItemBehaviors.NONE, BMSetFields.SPAREY_SET, 3, -2.4F, new Item.Properties().fireResistant().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> STACKS = ITEMS.register("stacks", () -> new BMPickaxeItem(BMItemBehaviors.NONE, BMSetFields.SPAREY_SET, 1, -2.8F, new Item.Properties().fireResistant().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> SPAXE = ITEMS.register("spaxe", () -> new BMShovelItem(BMItemBehaviors.NONE, BMSetFields.SPAREY_SET, 6, -3.1F, new Item.Properties().fireResistant().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> SPAVEL = ITEMS.register("spavel", () -> new BMAxeItem(BMItemBehaviors.NONE, BMSetFields.SPAREY_SET, 1.5F, -3, new Item.Properties().fireResistant().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> STOE = ITEMS.register("stoe", () -> new BMHoeItem(BMItemBehaviors.NONE, BMSetFields.SPAREY_SET, -2, -1, new Item.Properties().fireResistant().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> CRYSTALLINE_BIRCH_SWORD = ITEMS.register("crystalline_birch_sword", () -> new BMSwordItem(CRYSTALLINE_BIRCH_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLINE_BIRCH_PICKAXE = ITEMS.register("crystalline_birch_pickaxe", () -> new BMPickaxeItem(CRYSTALLINE_BIRCH_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLINE_BIRCH_SHOVEL = ITEMS.register("crystalline_birch_shovel", () -> new BMShovelItem(CRYSTALLINE_BIRCH_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLINE_BIRCH_AXE = ITEMS.register("crystalline_birch_axe", () -> new BMAxeItem(CRYSTALLINE_BIRCH_SET, 6, -3.2F, new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLINE_BIRCH_HOE = ITEMS.register("crystalline_birch_hoe", () -> new BMHoeItem(CRYSTALLINE_BIRCH_SET, 0, -3, new Item.Properties()));
    public static final DeferredItem<Item> GOLDENWOOD_SWORD = ITEMS.register("goldenwood_sword", () -> new BMSwordItem(GOLDENWOOD_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> GOLDENWOOD_PICKAXE = ITEMS.register("goldenwood_pickaxe", () -> new BMPickaxeItem(GOLDENWOOD_SET, 1, -2.8F, new Item.Properties().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> GOLDENWOOD_SHOVEL = ITEMS.register("goldenwood_shovel", () -> new BMShovelItem(GOLDENWOOD_SET, 1.5F, -3, new Item.Properties().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> GOLDENWOOD_AXE = ITEMS.register("goldenwood_axe", () -> new BMAxeItem(GOLDENWOOD_SET, 6, -3.2F, new Item.Properties().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> GOLDENWOOD_HOE = ITEMS.register("goldenwood_hoe", () -> new BMHoeItem(GOLDENWOOD_SET, 0, -3, new Item.Properties().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> GUAVA_SWORD = ITEMS.register("guava_sword", () -> new BMSwordItem(GUAVA_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> GUAVA_PICKAXE = ITEMS.register("guava_pickaxe", () -> new BMPickaxeItem(GUAVA_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> GUAVA_SHOVEL = ITEMS.register("guava_shovel", () -> new BMShovelItem(GUAVA_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> GUAVA_AXE = ITEMS.register("guava_axe", () -> new BMAxeItem(GUAVA_SET, 6, -3.2F, new Item.Properties()));
    public static final DeferredItem<Item> GUAVA_HOE = ITEMS.register("guava_hoe", () -> new BMHoeItem(GUAVA_SET, 0, -3, new Item.Properties()));
    public static final DeferredItem<Item> JABUTICABA_SWORD = ITEMS.register("jabuticaba_sword", () -> new BMSwordItem(JABUTICABA_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> JABUTICABA_PICKAXE = ITEMS.register("jabuticaba_pickaxe", () -> new BMPickaxeItem(JABUTICABA_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> JABUTICABA_SHOVEL = ITEMS.register("jabuticaba_shovel", () -> new BMShovelItem(JABUTICABA_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> JABUTICABA_AXE = ITEMS.register("jabuticaba_axe", () -> new BMAxeItem(JABUTICABA_SET, 6, -3.2F, new Item.Properties()));
    public static final DeferredItem<Item> JABUTICABA_HOE = ITEMS.register("jabuticaba_hoe", () -> new BMHoeItem(JABUTICABA_SET, 0, -3, new Item.Properties()));
    public static final DeferredItem<Item> CORK_OAK_SWORD = ITEMS.register("cork_oak_sword", () -> new BMSwordItem(CORK_OAK_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> CORK_OAK_PICKAXE = ITEMS.register("cork_oak_pickaxe", () -> new BMPickaxeItem(CORK_OAK_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> CORK_OAK_SHOVEL = ITEMS.register("cork_oak_shovel", () -> new BMShovelItem(CORK_OAK_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> CORK_OAK_AXE = ITEMS.register("cork_oak_axe", () -> new BMAxeItem(CORK_OAK_SET, 6, -3.2F, new Item.Properties()));
    public static final DeferredItem<Item> CORK_OAK_HOE = ITEMS.register("cork_oak_hoe", () -> new BMHoeItem(CORK_OAK_SET, 0, -3, new Item.Properties()));
    public static final DeferredItem<Item> ALJANWOOD_SWORD = ITEMS.register("aljanwood_sword", () -> new BMSwordItem(ALJANWOOD_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> ALJANWOOD_PICKAXE = ITEMS.register("aljanwood_pickaxe", () -> new BMPickaxeItem(ALJANWOOD_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> ALJANWOOD_SHOVEL = ITEMS.register("aljanwood_shovel", () -> new BMShovelItem(ALJANWOOD_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> ALJANWOOD_AXE = ITEMS.register("aljanwood_axe", () -> new BMAxeItem(ALJANWOOD_SET, 6, -3.2F, new Item.Properties()));
    public static final DeferredItem<Item> ALJANWOOD_HOE = ITEMS.register("aljanwood_hoe", () -> new BMHoeItem(ALJANWOOD_SET, 0, -3, new Item.Properties()));
    public static final DeferredItem<Item> ALJANCAP_SWORD = ITEMS.register("aljancap_sword", () -> new BMSwordItem(ALJANCAP_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> ALJANCAP_PICKAXE = ITEMS.register("aljancap_pickaxe", () -> new BMPickaxeItem(ALJANCAP_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> ALJANCAP_SHOVEL = ITEMS.register("aljancap_shovel", () -> new BMShovelItem(ALJANCAP_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> ALJANCAP_AXE = ITEMS.register("aljancap_axe", () -> new BMAxeItem(ALJANCAP_SET, 6, -3.2F, new Item.Properties()));
    public static final DeferredItem<Item> ALJANCAP_HOE = ITEMS.register("aljancap_hoe", () -> new BMHoeItem(ALJANCAP_SET, 0, -3, new Item.Properties()));
    public static final DeferredItem<Item> INSOMNIAN_SWORD = ITEMS.register("insomnian_sword", () -> new BMSwordItem(INSOMNIAN_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> INSOMNIAN_PICKAXE = ITEMS.register("insomnian_pickaxe", () -> new BMPickaxeItem(INSOMNIAN_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> INSOMNIAN_SHOVEL = ITEMS.register("insomnian_shovel", () -> new BMShovelItem(INSOMNIAN_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> INSOMNIAN_AXE = ITEMS.register("insomnian_axe", () -> new BMAxeItem(INSOMNIAN_SET, 6, -3.2F, new Item.Properties()));
    public static final DeferredItem<Item> INSOMNIAN_HOE = ITEMS.register("insomnian_hoe", () -> new BMHoeItem(INSOMNIAN_SET, 0, -3, new Item.Properties()));
    public static final DeferredItem<Item> AVONDALIC_WILLOW_SWORD = ITEMS.register("avondalic_willow_sword", () -> new BMSwordItem(AVONDALIC_WILLOW_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> AVONDALIC_WILLOW_PICKAXE = ITEMS.register("avondalic_willow_pickaxe", () -> new BMPickaxeItem(AVONDALIC_WILLOW_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> AVONDALIC_WILLOW_SHOVEL = ITEMS.register("avondalic_willow_shovel", () -> new BMShovelItem(AVONDALIC_WILLOW_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> AVONDALIC_WILLOW_AXE = ITEMS.register("avondalic_willow_axe", () -> new BMAxeItem(AVONDALIC_WILLOW_SET, 6, -3.2F, new Item.Properties()));
    public static final DeferredItem<Item> AVONDALIC_WILLOW_HOE = ITEMS.register("avondalic_willow_hoe", () -> new BMHoeItem(AVONDALIC_WILLOW_SET, 0, -3, new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTONE_SWORD = ITEMS.register("aljanstone_sword", () -> new BMSwordItem(ALJANSTONE_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTONE_PICKAXE = ITEMS.register("aljanstone_pickaxe", () -> new BMPickaxeItem(ALJANSTONE_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTONE_SHOVEL = ITEMS.register("aljanstone_shovel", () -> new BMShovelItem(ALJANSTONE_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTONE_AXE = ITEMS.register("aljanstone_axe", () -> new BMAxeItem(ALJANSTONE_SET, 6, -3.1F, new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTONE_HOE = ITEMS.register("aljanstone_hoe", () -> new BMHoeItem(ALJANSTONE_SET, -1, -1, new Item.Properties()));
    public static final DeferredItem<Item> SLEEPINGSTONE_SWORD = ITEMS.register("sleepingstone_sword", () -> new BMSwordItem(SLEEPINGSTONE_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> SLEEPINGSTONE_PICKAXE = ITEMS.register("sleepingstone_pickaxe", () -> new BMPickaxeItem(SLEEPINGSTONE_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> SLEEPINGSTONE_SHOVEL = ITEMS.register("sleepingstone_shovel", () -> new BMShovelItem(SLEEPINGSTONE_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> SLEEPINGSTONE_AXE = ITEMS.register("sleepingstone_axe", () -> new BMAxeItem(SLEEPINGSTONE_SET, 6, -3.1F, new Item.Properties()));
    public static final DeferredItem<Item> SLEEPINGSTONE_HOE = ITEMS.register("sleepingstone_hoe", () -> new BMHoeItem(SLEEPINGSTONE_SET, -1, -1, new Item.Properties()));
    public static final DeferredItem<Item> ALJAMEED_BLADE = ITEMS.register("aljameed_blade", () -> new BMSwordItem(ALJAMEED_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> ALJAMEED_PICK = ITEMS.register("aljameed_pick", () -> new BMPickaxeItem(ALJAMEED_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> ALJAMEED_SHOVEL = ITEMS.register("aljameed_shovel", () -> new BMShovelItem(ALJAMEED_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> ALJAMEED_AXE = ITEMS.register("aljameed_axe", () -> new BMAxeItem(ALJAMEED_SET, 6, -3.1F, new Item.Properties()));
    public static final DeferredItem<Item> ALJAMEED_HOE = ITEMS.register("aljameed_hoe", () -> new BMHoeItem(ALJAMEED_SET, -2, -1, new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTEEL_BLADE = ITEMS.register("aljansteel_blade", () -> new BMSwordItem(ALJANSTEEL_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTEEL_PICK = ITEMS.register("aljansteel_pick", () -> new BMPickaxeItem(ALJANSTEEL_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTEEL_SHOVEL = ITEMS.register("aljansteel_shovel", () -> new BMShovelItem(ALJANSTEEL_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTEEL_AXE = ITEMS.register("aljansteel_axe", () -> new BMAxeItem(ALJANSTEEL_SET, 6, -3.1F, new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTEEL_HOE = ITEMS.register("aljansteel_hoe", () -> new BMHoeItem(ALJANSTEEL_SET, -2, -1, new Item.Properties()));
    public static final DeferredItem<Item> MOONERING_BACKSTABBER = ITEMS.register("moonering_backstabber", () -> new BMSwordItem(MOONERING_SET, 4, -2, new Item.Properties()));
    public static final DeferredItem<Item> MOONERING_SWORD = ITEMS.register("moonering_sword", () -> new BMSwordItem(MOONERING_SET, 3, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> MOONERING_PICKAXE = ITEMS.register("moonering_pickaxe", () -> new BMPickaxeItem(MOONERING_SET, 1, -2.8F, new Item.Properties()));
    public static final DeferredItem<Item> MOONERING_SHOVEL = ITEMS.register("moonering_shovel", () -> new BMShovelItem(MOONERING_SET, 1.5F, -3, new Item.Properties()));
    public static final DeferredItem<Item> MOONERING_AXE = ITEMS.register("moonering_axe", () -> new BMAxeItem(MOONERING_SET, 6, -3.1F, new Item.Properties()));
    public static final DeferredItem<Item> MOONERING_HOE = ITEMS.register("moonering_hoe", () -> new BMHoeItem(MOONERING_SET, -1, -1, new Item.Properties()));
    public static final DeferredItem<Item> JANTIQUIFIED_MOONERING_SWORD = ITEMS.register("jantiquified_moonering_sword", () -> new BMSwordItem(JANTIQUIFIED_MOONERING_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> JANTIQUIFIED_MOONERING_PICKAXE = ITEMS.register("jantiquified_moonering_pickaxe", () -> new BMPickaxeItem(JANTIQUIFIED_MOONERING_SET, 1, -2.8F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> JANTIQUIFIED_MOONERING_SHOVEL = ITEMS.register("jantiquified_moonering_shovel", () -> new BMShovelItem(JANTIQUIFIED_MOONERING_SET, 1.5F, -3, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> JANTIQUIFIED_MOONERING_AXE = ITEMS.register("jantiquified_moonering_axe", () -> new BMAxeItem(JANTIQUIFIED_MOONERING_SET, 6, -3.1F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> JANTIQUIFIED_MOONERING_HOE = ITEMS.register("jantiquified_moonering_hoe", () -> new BMHoeItem(JANTIQUIFIED_MOONERING_SET, -1, -1, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> WOODEN_KNIFE = ITEMS.register("wooden_knife", () -> new KnifeItem(2, -1.6F, Tiers.WOOD, new Item.Properties()));
    public static final DeferredItem<Item> STONE_KNIFE = ITEMS.register("stone_knife", () -> new KnifeItem(2, -1.6F, Tiers.STONE, new Item.Properties()));
    public static final DeferredItem<Item> IRON_KNIFE = ITEMS.register("iron_knife", () -> new KnifeItem(2, -1.6F, Tiers.IRON, new Item.Properties()));
    public static final DeferredItem<Item> GOLDEN_KNIFE = ITEMS.register("golden_knife", () -> new KnifeItem(2, -1.6F, Tiers.GOLD, new Item.Properties()));
    public static final DeferredItem<Item> DIAMOND_KNIFE = ITEMS.register("diamond_knife", () -> new KnifeItem(2, -1.6F, Tiers.DIAMOND, new Item.Properties()));
    public static final DeferredItem<Item> NETHERITE_KNIFE = ITEMS.register("netherite_knife", () -> new KnifeItem(2, -1.6F, Tiers.NETHERITE, new Item.Properties().fireResistant()));
    public static final DeferredItem<Item> DEVIL_KNIFE = ITEMS.register("devil_knife", () -> new KnifeItem(2, -1.6F, BMItemBehaviors.DEVIL, DEVIL_SET, new Item.Properties()));
    public static final DeferredItem<Item> ANGELIC_KNIFE = ITEMS.register("angelic_knife", () -> new KnifeItem(2, -1.6F, ANGELIC_SET, new Item.Properties()));
    public static final DeferredItem<Item> MID_TERM_KNIFE = ITEMS.register("mid_term_knife", () -> new KnifeItem(2, -1.6F, BMItemBehaviors.MID_TERM, MID_TERM_SET, new Item.Properties().fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_KNIFE = ITEMS.register("obsidian_infused_mid_term_knife", () -> new KnifeItem(2, -1.6F, BMItemBehaviors.MID_TERM, OBSIDIAN_INFUSED_MID_TERM_SET, new Item.Properties().fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> MILKLLARY_KNIFE = ITEMS.register("milkllary_knife", () -> new KnifeItem(2, -1.6F, MILKLLARY_SET, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> OLIVE_KNIFE = ITEMS.register("olive_knife", () -> new KnifeItem(2, -1.6F, OLIVE_SET, new Item.Properties()));
    public static final DeferredItem<Item> CRYSTALLINE_BIRCH_KNIFE = ITEMS.register("crystalline_birch_knife", () -> new KnifeItem(2, -1.6F, CRYSTALLINE_BIRCH_SET, new Item.Properties()));
    public static final DeferredItem<Item> GOLDENWOOD_KNIFE = ITEMS.register("goldenwood_knife", () -> new KnifeItem(2, -1.6F, CORK_OAK_SET, new Item.Properties().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> GUAVA_KNIFE = ITEMS.register("guava_knife", () -> new KnifeItem(2, -1.6F, GUAVA_SET, new Item.Properties()));
    public static final DeferredItem<Item> JABUTICABA_KNIFE = ITEMS.register("jabuticaba_knife", () -> new KnifeItem(2, -1.6F, JABUTICABA_SET, new Item.Properties()));
    public static final DeferredItem<Item> CORK_OAK_KNIFE = ITEMS.register("cork_oak_knife", () -> new KnifeItem(2, -1.6F, CORK_OAK_SET, new Item.Properties()));
    public static final DeferredItem<Item> ALJANWOOD_KNIFE = ITEMS.register("aljanwood_knife", () -> new KnifeItem(2, -1.6F, ALJANWOOD_SET, new Item.Properties()));
    public static final DeferredItem<Item> ALJANCAP_KNIFE = ITEMS.register("aljancap_knife", () -> new KnifeItem(2, -1.6F, ALJANCAP_SET, new Item.Properties()));
    public static final DeferredItem<Item> INSOMNIAN_KNIFE = ITEMS.register("insomnian_knife", () -> new KnifeItem(2, -1.6F, INSOMNIAN_SET, new Item.Properties()));
    public static final DeferredItem<Item> AVONDALIC_WILLOW_KNIFE = ITEMS.register("avondalic_willow_knife", () -> new KnifeItem(2, -1.6F, AVONDALIC_WILLOW_SET, new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTONE_KNIFE = ITEMS.register("aljanstone_knife", () -> new KnifeItem(2, -1.6F, ALJANSTONE_SET, new Item.Properties()));
    public static final DeferredItem<Item> SLEEPINGSTONE_KNIFE = ITEMS.register("sleepingstone_knife", () -> new KnifeItem(2, -1.6F, SLEEPINGSTONE_SET, new Item.Properties()));
    public static final DeferredItem<Item> ALJAMEED_KNIFE = ITEMS.register("aljameed_knife", () -> new KnifeItem(2, -1.6F, ALJAMEED_SET, new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTEEL_KNIFE = ITEMS.register("aljansteel_knife", () -> new KnifeItem(2, -1.6F, ALJANSTEEL_SET, new Item.Properties()));
    public static final DeferredItem<Item> MOONERING_KNIFE = ITEMS.register("moonering_knife", () -> new KnifeItem(2, -1.6F, MOONERING_SET, new Item.Properties()));
    public static final DeferredItem<Item> JANTIQUIFIED_MOONERING_KNIFE = ITEMS.register("jantiquified_moonering_knife", () -> new KnifeItem(2, -1.6F, JANTIQUIFIED_MOONERING_SET, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> TABU_SWORD = ITEMS.register("tabu_sword", () -> new BMSwordItem(TABU_SWORD_SET, 2, -1.6F, new Item.Properties()));
    public static final DeferredItem<Item> BREAD_SWORD = ITEMS.register("bread_sword", () -> new BMSwordItem(BREAD_SWORD_SET, 2, -1.6F, new Item.Properties().food(Foods.BREAD)));
    public static final DeferredItem<Item> PERSONA_BLADE = ITEMS.register("persona_blade", () -> new BMSwordItem(PERSONA_SWORD_SET, 0, -2.4F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> CAREWNI = ITEMS.register("carewni", () -> new CarewniItem(CAREWNI_SET, 0, -2.4F, new Item.Properties().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> GOLDEN_PATTY = ITEMS.register("empada_de_ouro", () -> new BMSwordItem(GOLDEN_PATTY_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.UNCOMMON).food(Foods.GOLDEN_APPLE)));
    public static final DeferredItem<Item> BUTTER_SWORD = ITEMS.register("espada_de_manteiga", () -> new ButterSwordItem(BMItemBehaviors.BUTTER, BUTTER_SWORD_SET, 3, -2.4F, new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> MECH_MECH = ITEMS.register("mech_mech", () -> new MechMechSwordItem(BMSetFields.MECH_MECH_SET, 9, 2, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> DEVIL_SPAREY = ITEMS.register("devil_sparey", () -> new BMSwordItem(BMItemBehaviors.NONE, BMSetFields.DEVIL_SPAREY_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MID_TERM_SPAREY = ITEMS.register("mid_term_sparey", () -> new BMSwordItem(BMItemBehaviors.NONE, MID_TERM_SPAREY_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.RARE).fireResistant()));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_SPAREY = ITEMS.register("obsidian_infused_mid_term_sparey", () -> new BMSwordItem(BMItemBehaviors.NONE,OBSIDIAN_INFUSED_MID_TERM_SPAREY_SET, 3, -2.4F, new Item.Properties().rarity(Rarity.EPIC).fireResistant()));
    public static final DeferredItem<Item> RAINBOW_PENCIL = ITEMS.register("lapis_rainbow", () -> new BMSwordItem(BMItemBehaviors.RAINBOW_PENCIL, RAINBOW_PENCIL_SET, 1, -2.4F, new Item.Properties().rarity(Rarity.RARE).food(Foods.APPLE))); // It used to place down Lava.
    public static final DeferredItem<Item> KARATE_TRAINING_STICK = ITEMS.register("karate_training_stick", () -> new BMSwordItem(KARATE_TRAINING_STICK_SET, 0, -2.4F, new Item.Properties()));
    public static final DeferredItem<Item> QUEEN_LUCY_SUMMONER_STAFF = ITEMS.register("queen_sophie_summoner_staff", () -> new QueenLucySummonerStaffItem(new Item.Properties().attributes(QueenLucySummonerStaffItem.createAttributes()).component(DataComponents.TOOL, QueenLucySummonerStaffItem.createToolProperties()).rarity(Rarity.EPIC).durability(1500).fireResistant()));
    public static final DeferredItem<Item> WATER_TALC_POWDER = ITEMS.register("talco_de_agua", () -> new WaterTalcPowderItem(WATER_TALC_POWDER_SET, 0, -2.4F, new Item.Properties().food(BMFoods.WATER_TALCUM_POWDER).stacksTo(1)));
    public static final DeferredItem<Item> INSOFLINT_AND_ALJANSTEEL = ITEMS.register("aljamic_flint_and_aljansteel", () -> new InsoflintAndAljansteelItem(new Item.Properties().durability(250)));
    public static final DeferredItem<Item> DEVIL_BOW = ITEMS.register("devil_bow", () -> new DevilBowItem(new Item.Properties().durability(720)));
    public static final DeferredItem<Item> ANGELIC_BOW = ITEMS.register("angelic_bow", () -> new AngelicBowItem(new Item.Properties().durability(840)));
    public static final DeferredItem<Item> MID_TERM_BOW = ITEMS.register("mid_term_bow", () -> new MidTermBowItem(new Item.Properties().durability(2031).rarity(Rarity.RARE).fireResistant()));
    public static final DeferredItem<Item> DEVIL_CROSSBOW = ITEMS.register("devil_crossbow", () -> new BMCrossbowItem(BMItemBehaviors.DEVIL, new Item.Properties().durability(520)));
    public static final DeferredItem<Item> ANGELIC_CROSSBOW = ITEMS.register("angelic_crossbow", () -> new BMCrossbowItem(BMItemBehaviors.NONE, new Item.Properties().durability(520)));
    public static final DeferredItem<Item> JANTIC_RAILGUN = ITEMS.register("jantic_railgun", () -> new JanticRailgunItem(new Item.Properties().durability(3000).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> CHOCOGLUE = ITEMS.register("chocoglue", () -> new ChocoGlueItem(new Item.Properties().durability(384)));
    public static final DeferredItem<Item> PINK_GUM_FRYING_PAN = ITEMS.register("pink_gum_frying_pan", () -> new PinkGumFryingPanItem(BMItemBehaviors.PINK_GUM_FRYING_PAN, new Item.Properties().durability(1024)));
    public static final DeferredItem<Item> INSOMNIA_ARROW = ITEMS.register("insomnia_arrow", () -> new InsomniaArrowItem(new Item.Properties()));
    public static final DeferredItem<Item> SUPERHEATER = ITEMS.register("superheater", () -> new DamageableCraftingToolItem(new Item.Properties().durability(2031).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MORTAR_AND_PESTLE = ITEMS.register("mortar_and_pestle", () -> new DamageableCraftingToolItem(new Item.Properties().durability(384)));
    public static final DeferredItem<Item> CRYSTALLINE_BIRCH_MORTAR_AND_PESTLE = ITEMS.register("crystalline_birch_mortar_and_pestle", () -> new DamageableCraftingToolItem(new Item.Properties().durability(384)));
    public static final DeferredItem<Item> GOLDENWOOD_MORTAR_AND_PESTLE = ITEMS.register("goldenwood_mortar_and_pestle", () -> new DamageableCraftingToolItem(new Item.Properties().durability(384).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> GUAVA_MORTAR_AND_PESTLE = ITEMS.register("guava_mortar_and_pestle", () -> new DamageableCraftingToolItem(new Item.Properties().durability(384)));
    public static final DeferredItem<Item> JABUTICABA_MORTAR_AND_PESTLE = ITEMS.register("jabuticaba_mortar_and_pestle", () -> new DamageableCraftingToolItem(new Item.Properties().durability(384)));
    public static final DeferredItem<Item> CORK_OAK_MORTAR_AND_PESTLE = ITEMS.register("cork_oak_mortar_and_pestle", () -> new DamageableCraftingToolItem(new Item.Properties().durability(384)));
    public static final DeferredItem<Item> ALJANWOOD_MORTAR_AND_PESTLE = ITEMS.register("aljanwood_mortar_and_pestle", () -> new DamageableCraftingToolItem(new Item.Properties().durability(384)));
    public static final DeferredItem<Item> ALJANCAP_MORTAR_AND_PESTLE = ITEMS.register("aljancap_mortar_and_pestle", () -> new DamageableCraftingToolItem(new Item.Properties().durability(384)));
    public static final DeferredItem<Item> INSOMNIAN_MORTAR_AND_PESTLE = ITEMS.register("insomnian_mortar_and_pestle", () -> new DamageableCraftingToolItem(new Item.Properties().durability(384)));
    public static final DeferredItem<Item> AVONDALIC_WILLOW_MORTAR_AND_PESTLE = ITEMS.register("avondalic_willow_mortar_and_pestle", () -> new DamageableCraftingToolItem(new Item.Properties().durability(384)));
    public static final DeferredItem<Item> DEVIL_SHEARS = ITEMS.register("devil_shears", () -> new BMShearsItem(250, BMItemBehaviors.DEVIL, new Item.Properties()));
    public static final DeferredItem<Item> ANGELIC_SHEARS = ITEMS.register("angelic_shears", () -> new BMShearsItem(250, new Item.Properties()));
    public static final DeferredItem<Item> MID_TERM_SHEARS = ITEMS.register("mid_term_shears", () -> new BMShearsItem(4062, BMItemBehaviors.MID_TERM, new Item.Properties().fireResistant().rarity(Rarity.RARE)));
    public static final DeferredItem<Item> OBSIDIAN_INFUSED_MID_TERM_SHEARS = ITEMS.register("obsidian_infused_mid_term_shears", () -> new BMShearsItem(4062, BMItemBehaviors.MID_TERM, new Item.Properties().fireResistant().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> CHRISTIAN_MID_TERM_SHEARS = ITEMS.register("christian_mid_term_shears", () -> new BMShearsItem(250, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> MILKLLARY_SHEARS = ITEMS.register("milkllary_shears", () -> new BMShearsItem(450, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> ALJAMEED_SHEARS = ITEMS.register("aljameed_shears", () -> new BMShearsItem(250, new Item.Properties()));
    public static final DeferredItem<Item> ALJANSTEEL_SHEARS = ITEMS.register("aljansteel_shears", () -> new BMShearsItem(250, new Item.Properties()));
    public static final DeferredItem<Item> MOONERING_SHEARS = ITEMS.register("moonering_shears", () -> new BMShearsItem(1561, new Item.Properties()));
    public static final DeferredItem<Item> JANTIQUIFIED_MOONERING_SHEARS = ITEMS.register("jantiquified_moonering_shears", () -> new BMShearsItem(2031, new Item.Properties().rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> DEVIL_SHIELD = ITEMS.register("devil_shield", () -> new BMShieldItem(550, BMItemBehaviors.DEVIL, new Item.Properties()));
    public static final DeferredItem<Item> ANGELIC_SHIELD = ITEMS.register("angelic_shield", () -> new BMShieldItem(250, new Item.Properties()));
    public static final DeferredItem<Item> MID_TERM_SHIELD = ITEMS.register("mid_term_shield", () -> new BMShieldItem(4062, BMItemBehaviors.MID_TERM, new Item.Properties().rarity(Rarity.RARE).fireResistant()));
    public static final DeferredItem<Item> ALJAMEED_SHIELD = ITEMS.register("aljameed_shield", () -> new BMShieldItem(250, new Item.Properties()));
    public static final DeferredItem<Item> MOONERING_SHIELD = ITEMS.register("moonering_shield", () -> new BMShieldItem(1561, new Item.Properties()));

    // Back Math Foods
    public static final DeferredItem<Item> GUARANA = ITEMS.register("guarana", () -> new Item(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> MANGO = ITEMS.register("mango", () -> new Item(new Item.Properties().food(Foods.CARROT)));
    public static final DeferredItem<Item> MANGAED_MANGO = ITEMS.register("mangaed_mango", () -> new BMFoodItem(ItemBehaviorParameters.FOOD, BMItemBehaviors.MANGAED_MANGO, new Item.Properties().food(Foods.CARROT)));
    public static final DeferredItem<Item> GRAPES = ITEMS.register("grapes", () -> new Item(new Item.Properties().food(Foods.SWEET_BERRIES)));
    public static final DeferredItem<Item> LEMON = ITEMS.register("lemon", () -> new Item(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> PINEAPPLE = ITEMS.register("pineapple", () -> new Item(new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> ORANGE = ITEMS.register("orange", () -> new Item(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> BANANA = ITEMS.register("banana", () -> new Item(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> GUAVA = ITEMS.register("guava", () -> new Item(new Item.Properties().food(BMFoods.GUAVA)));
    public static final DeferredItem<Item> JABUTICABA = ITEMS.register("jabuticaba", () -> new Item(new Item.Properties().food(BMFoods.JABUTICABA)));
    public static final DeferredItem<Item> ALJAMIC_ONION = ITEMS.register("aljamic_onion", () -> new Item(new Item.Properties().food(Foods.CARROT)));
    public static final DeferredItem<Item> ALJAMIC_BERRY = ITEMS.register("aljamic_berry", () -> new Item(new Item.Properties().food(BMFoods.ALJAMIC_BERRY)));
    public static final DeferredItem<Item> ALJAME = ITEMS.register("aljame", () -> new CrystallizerMaterialItem(new Item.Properties().food(BMFoods.ALJAME)));
    public static final DeferredItem<Item> JANTIQUIFIED_ALJAME = ITEMS.register("jantiquified_aljame", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON).food(BMFoods.JANTIQUIFIED_ALJAME)));
    public static final DeferredItem<Item> HOLY_JANTIQUIFIED_ALJAME = ITEMS.register("holy_jantiquified_aljame", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).rarity(Rarity.RARE).food(BMFoods.HOLY_JANTIQUIFIED_ALJAME)));
    public static final DeferredItem<Item> GREEN_APPLE = ITEMS.register("green_apple", () -> new Item(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> CUT_GUARANA = ITEMS.register("cut_guarana", () -> new Item(new Item.Properties().food(BMFoods.HALVED_APPLE)));
    public static final DeferredItem<Item> CUT_MANGO = ITEMS.register("cut_mango", () -> new Item(new Item.Properties().food(BMFoods.HALVED_CARROT)));
    public static final DeferredItem<Item> CUT_GRAPES = ITEMS.register("cut_grapes", () -> new Item(new Item.Properties().food(BMFoods.HALVED_SWEET_BERRIES)));
    public static final DeferredItem<Item> CUT_LEMON = ITEMS.register("cut_lemon", () -> new Item(new Item.Properties().food(BMFoods.HALVED_APPLE)));
    public static final DeferredItem<Item> CUT_PINEAPPLE = ITEMS.register("cut_pineapple", () -> new Item(new Item.Properties().food(BMFoods.HALVED_BAKED_POTATO)));
    public static final DeferredItem<Item> CUT_ORANGE = ITEMS.register("cut_orange", () -> new Item(new Item.Properties().food(BMFoods.HALVED_APPLE)));
    public static final DeferredItem<Item> CUT_BANANA = ITEMS.register("cut_banana", () -> new Item(new Item.Properties().food(BMFoods.HALVED_APPLE)));
    public static final DeferredItem<Item> CUT_GUAVA = ITEMS.register("cut_guava", () -> new Item(new Item.Properties().food(BMFoods.HALVED_GUAVA)));
    public static final DeferredItem<Item> CUT_JABUTICABA = ITEMS.register("cut_jabuticaba", () -> new Item(new Item.Properties().food(BMFoods.HALVED_JABUTICABA)));
    public static final DeferredItem<Item> CUT_ALJAMIC_BERRY = ITEMS.register("cut_aljamic_berry", () -> new Item(new Item.Properties().food(BMFoods.HALVED_ALJAMIC_BERRY)));
    public static final DeferredItem<Item> CUT_ALJAME = ITEMS.register("cut_aljame", () -> new Item(new Item.Properties().food(BMFoods.HALVED_ALJAME)));
    public static final DeferredItem<Item> CUT_JANTIQUIFIED_ALJAME = ITEMS.register("cut_jantiquified_aljame", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON).food(BMFoods.HALVED_JANTIQUIFIED_ALJAME)));
    public static final DeferredItem<Item> CUT_HOLY_JANTIQUIFIED_ALJAME = ITEMS.register("cut_holy_jantiquified_aljame", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).rarity(Rarity.RARE).food(BMFoods.HALVED_HOLY_JANTIQUIFIED_ALJAME)));
    public static final DeferredItem<Item> CUT_GREEN_APPLE = ITEMS.register("cut_green_apple", () -> new Item(new Item.Properties().food(BMFoods.HALVED_APPLE)));
    public static final DeferredItem<Item> CUT_APPLE = ITEMS.register("cut_apple", () -> new Item(new Item.Properties().food(BMFoods.HALVED_APPLE)));
    public static final DeferredItem<Item> CUT_GOLDEN_APPLE = ITEMS.register("cut_golden_apple", () -> new Item(new Item.Properties().rarity(Rarity.RARE).food(BMFoods.HALVED_GOLDEN_APPLE)));
    public static final DeferredItem<Item> CUT_ENCHANTED_GOLDEN_APPLE = ITEMS.register("cut_enchanted_golden_apple", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).rarity(Rarity.EPIC).food(BMFoods.HALVED_ENCHANTED_GOLDEN_APPLE)));
    public static final DeferredItem<Item> PUMPKIN_SLICE = ITEMS.register("pumpkin_slice", () -> new Item(new Item.Properties().food(BMFoods.HALVED_HONEY_BOTTLE)));
    public static final DeferredItem<Item> CUT_SWEET_BERRIES = ITEMS.register("cut_sweet_berries", () -> new Item(new Item.Properties().food(BMFoods.HALVED_SWEET_BERRIES)));
    public static final DeferredItem<Item> CUT_GLOW_BERRIES = ITEMS.register("cut_glow_berries", () -> new Item(new Item.Properties().food(BMFoods.HALVED_SWEET_BERRIES)));
    public static final DeferredItem<Item> GUARANA_JUICE = ITEMS.register("guarana_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(Foods.APPLE)));
    public static final DeferredItem<Item> MANGO_JUICE = ITEMS.register("mango_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(Foods.CARROT)));
    public static final DeferredItem<Item> MANGA_JUICE = ITEMS.register("manga_juice", () -> new JuiceItem(ItemBehaviorParameters.BOTTLE_DRINK, BMItemBehaviors.MANGAED_MANGO, new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(Foods.CARROT)));
    public static final DeferredItem<Item> GRAPE_JUICE = ITEMS.register("grape_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(Foods.BREAD)));
    public static final DeferredItem<Item> LEMON_JUICE = ITEMS.register("lemon_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(Foods.BREAD)));
    public static final DeferredItem<Item> PINEAPPLE_JUICE = ITEMS.register("pineapple_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(Foods.BREAD)));
    public static final DeferredItem<Item> ORANGE_JUICE = ITEMS.register("orange_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(Foods.BREAD)));
    public static final DeferredItem<Item> BANANA_JUICE = ITEMS.register("banana_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(Foods.BREAD)));
    public static final DeferredItem<Item> GUAVA_JUICE = ITEMS.register("guava_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(BMFoods.GUAVA)));
    public static final DeferredItem<Item> JABUTICABADA = ITEMS.register("jabuticabada", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(BMFoods.JABUTICABA)));
    public static final DeferredItem<Item> GREEN_APPLE_JUICE = ITEMS.register("green_apple_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(Foods.APPLE)));
    public static final DeferredItem<Item> ALJAMIC_BERRY_JUICE = ITEMS.register("aljamic_berry_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(BMFoods.ALJAMIC_BERRY)));
    public static final DeferredItem<Item> ALJAMIC_ALJAMIC_BERRY_JUICE = ITEMS.register("aljamic_aljamic_berry_juice", () -> new JuiceItem(ItemBehaviorParameters.ALJAMIC_BOTTLE_DRINK, BMItemBehaviors.NONE, new Item.Properties().craftRemainder(AxolotlTest.ALJAMIC_GLASS_BOTTLE.get()).food(BMFoods.ALJAMIC_BERRY)));
    public static final DeferredItem<Item> ALJAME_JUICE = ITEMS.register("aljame_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(BMFoods.ALJAME)));
    public static final DeferredItem<Item> ALJAMIC_ALJAME_JUICE = ITEMS.register("aljamic_aljame_juice", () -> new JuiceItem(ItemBehaviorParameters.ALJAMIC_BOTTLE_DRINK, BMItemBehaviors.NONE, new Item.Properties().craftRemainder(AxolotlTest.ALJAMIC_GLASS_BOTTLE.get()).food(BMFoods.ALJAME)));
    public static final DeferredItem<Item> APPLE_JUICE = ITEMS.register("apple_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(Foods.APPLE)));
    public static final DeferredItem<Item> GOLDEN_APPLE_JUICE = ITEMS.register("golden_apple_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).rarity(Rarity.RARE).food(Foods.GOLDEN_APPLE)));
    public static final DeferredItem<Item> ENCHANTED_GOLDEN_APPLE_JUICE = ITEMS.register("enchanted_golden_apple_juice", () -> new JuiceItem(ItemBehaviorParameters.BOTTLE_DRINK, BMItemBehaviors.GLINT_ONLY, new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).rarity(Rarity.EPIC).food(Foods.ENCHANTED_GOLDEN_APPLE)));
    public static final DeferredItem<Item> MELON_JUICE = ITEMS.register("melon_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(Foods.MELON_SLICE)));
    public static final DeferredItem<Item> PUMPKIN_JUICE = ITEMS.register("pumpkin_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(Foods.HONEY_BOTTLE)));
    public static final DeferredItem<Item> SWEET_BERRY_JUICE = ITEMS.register("sweet_berry_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(Foods.SWEET_BERRIES)));
    public static final DeferredItem<Item> GLOW_BERRY_JUICE = ITEMS.register("glow_berry_juice", () -> new JuiceItem(new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).food(Foods.SWEET_BERRIES)));
    public static final DeferredItem<Item> GUARANA_POPSICLE = ITEMS.register("guarana_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> MANGO_POPSICLE = ITEMS.register("mango_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.CARROT)));
    public static final DeferredItem<Item> MANGA_POPSICLE = ITEMS.register("manga_popsicle", () -> new PopsicleItem(BMItemBehaviors.MANGAED_MANGO, new Item.Properties().food(Foods.CARROT)));
    public static final DeferredItem<Item> GRAPE_POPSICLE = ITEMS.register("grape_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.BREAD)));
    public static final DeferredItem<Item> LEMON_POPSICLE = ITEMS.register("lemon_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.BREAD)));
    public static final DeferredItem<Item> PINEAPPLE_POPSICLE = ITEMS.register("pineapple_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.BREAD)));
    public static final DeferredItem<Item> ORANGE_POPSICLE = ITEMS.register("orange_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.BREAD)));
    public static final DeferredItem<Item> BANANA_POPSICLE = ITEMS.register("banana_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.BREAD)));
    public static final DeferredItem<Item> GUAVA_POPSICLE = ITEMS.register("guava_popsicle", () -> new PopsicleItem(new Item.Properties().food(BMFoods.GUAVA)));
    public static final DeferredItem<Item> JABUTICABA_POPSICLE = ITEMS.register("jabuticaba_popsicle", () -> new PopsicleItem(new Item.Properties().food(BMFoods.JABUTICABA)));
    public static final DeferredItem<Item> GREEN_APPLE_POPSICLE = ITEMS.register("green_apple_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> ALJAMIC_BERRY_POPSICLE = ITEMS.register("aljamic_berry_popsicle", () -> new PopsicleItem(new Item.Properties().food(BMFoods.ALJAMIC_BERRY)));
    public static final DeferredItem<Item> ALJAME_POPSICLE = ITEMS.register("aljame_popsicle", () -> new PopsicleItem(new Item.Properties().food(BMFoods.ALJAME)));
    public static final DeferredItem<Item> WATER_POPSICLE = ITEMS.register("water_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> HILLARY_POPSICLE = ITEMS.register("hillary_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> MILKLLARY_POPSICLE = ITEMS.register("milkllary_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.BAKED_POTATO).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> APPLE_POPSICLE = ITEMS.register("apple_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> GOLDEN_APPLE_POPSICLE = ITEMS.register("golden_apple_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.GOLDEN_APPLE).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> ENCHANTED_GOLDEN_APPLE_POPSICLE = ITEMS.register("enchanted_golden_apple_popsicle", () -> new PopsicleItem(BMItemBehaviors.GLINT_ONLY, new Item.Properties().rarity(Rarity.EPIC).food(Foods.ENCHANTED_GOLDEN_APPLE)));
    public static final DeferredItem<Item> MELON_POPSICLE = ITEMS.register("melon_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.MELON_SLICE)));
    public static final DeferredItem<Item> PUMPKIN_POPSICLE = ITEMS.register("pumpkin_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.HONEY_BOTTLE)));
    public static final DeferredItem<Item> SWEET_BERRY_POPSICLE = ITEMS.register("sweet_berry_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.SWEET_BERRIES)));
    public static final DeferredItem<Item> GLOW_BERRY_POPSICLE = ITEMS.register("glow_berry_popsicle", () -> new PopsicleItem(new Item.Properties().food(Foods.SWEET_BERRIES)));
    public static final DeferredItem<Item> SPICE_POT = ITEMS.register("spice_pot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> OREGANO_POT = ITEMS.register("oregano_pot", () -> new JamItem(ItemBehaviorParameters.SPICE_POT, BMItemBehaviors.NONE, new Item.Properties().craftRemainder(AxolotlTest.SPICE_POT.get())));
    public static final DeferredItem<Item> JAM_POT = ITEMS.register("jam_pot", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> GUARANA_JAM = ITEMS.register("guarana_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.APPLE)));
    public static final DeferredItem<Item> MANGO_JAM = ITEMS.register("mango_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.CARROT)));
    public static final DeferredItem<Item> MANGA_JAM = ITEMS.register("manga_jam", () -> new JamItem(ItemBehaviorParameters.JAM, BMItemBehaviors.MANGAED_MANGO, new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.CARROT)));
    public static final DeferredItem<Item> GRAPE_JAM = ITEMS.register("grape_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.BREAD)));
    public static final DeferredItem<Item> LEMON_JAM = ITEMS.register("lemon_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.BREAD)));
    public static final DeferredItem<Item> PINEAPPLE_JAM = ITEMS.register("pineapple_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.BREAD)));
    public static final DeferredItem<Item> ORANGE_JAM = ITEMS.register("orange_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.BREAD)));
    public static final DeferredItem<Item> BANANA_JAM = ITEMS.register("banana_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.BREAD)));
    public static final DeferredItem<Item> GUAVA_JAM = ITEMS.register("guava_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(BMFoods.GUAVA)));
    public static final DeferredItem<Item> JABUTICABA_JAM = ITEMS.register("jabuticaba_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(BMFoods.JABUTICABA)));
    public static final DeferredItem<Item> GREEN_APPLE_JAM = ITEMS.register("green_apple_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.APPLE)));
    public static final DeferredItem<Item> ALJAMIC_BERRY_JAM = ITEMS.register("aljamic_berry_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(BMFoods.ALJAMIC_BERRY)));
    public static final DeferredItem<Item> ALJAME_JAM = ITEMS.register("aljame_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(BMFoods.ALJAME)));
    public static final DeferredItem<Item> WATER_JAM = ITEMS.register("water_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.SWEET_BERRIES)));
    public static final DeferredItem<Item> MILK_POT = ITEMS.register("milk_pot", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get())));
    public static final DeferredItem<Item> LAVA_POT = ITEMS.register("lava_pot", () -> new JamItem(ItemBehaviorParameters.JAM, BMItemBehaviors.LAVA_POT, new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get())));
    public static final DeferredItem<Item> POWDER_SNOW_POT = ITEMS.register("powder_snow_pot", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get())));
    public static final DeferredItem<Item> HILLARY_JAM = ITEMS.register("hilary_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.APPLE)));
    public static final DeferredItem<Item> MILKLLARY_JAM = ITEMS.register("milklary_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).rarity(Rarity.UNCOMMON).food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> APPLE_JAM = ITEMS.register("apple_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.APPLE)));
    public static final DeferredItem<Item> GOLDEN_APPLE_JAM = ITEMS.register("golden_apple_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).rarity(Rarity.RARE).food(Foods.GOLDEN_APPLE)));
    public static final DeferredItem<Item> ENCHANTED_GOLDEN_APPLE_JAM = ITEMS.register("enchanted_golden_apple_jam", () -> new JamItem(ItemBehaviorParameters.JAM, BMItemBehaviors.GLINT_ONLY, new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).rarity(Rarity.EPIC).food(Foods.ENCHANTED_GOLDEN_APPLE)));
    public static final DeferredItem<Item> MELON_JAM = ITEMS.register("melon_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.MELON_SLICE)));
    public static final DeferredItem<Item> PUMPKIN_JAM = ITEMS.register("pumpkin_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.HONEY_BOTTLE)));
    public static final DeferredItem<Item> SWEET_BERRY_JAM = ITEMS.register("sweet_berry_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.SWEET_BERRIES)));
    public static final DeferredItem<Item> GLOW_BERRY_JAM = ITEMS.register("glow_berry_jam", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.SWEET_BERRIES)));
    public static final DeferredItem<Item> COOKIE_POT = ITEMS.register("cookie_pot", () -> new JamItem(new Item.Properties().craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.COOKIE)));
    public static final DeferredItem<Item> BEETROOT_SOUP_POT = ITEMS.register("beetroot_soup_pot", () -> new JamItem(new Item.Properties().stacksTo(1).craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.BEETROOT_SOUP)));
    public static final DeferredItem<Item> MUSHROOM_STEW_POT = ITEMS.register("mushroom_stew_pot", () -> new JamItem(new Item.Properties().stacksTo(1).craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.MUSHROOM_STEW)));
    public static final DeferredItem<Item> RABBIT_STEW_POT = ITEMS.register("rabbit_stew_pot", () -> new JamItem(new Item.Properties().stacksTo(1).craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.RABBIT_STEW)));
    public static final DeferredItem<Item> FUNGI_STEW_POT = ITEMS.register("fungi_stew_pot", () -> new JamItem(new Item.Properties().stacksTo(1).craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.MUSHROOM_STEW)));
    public static final DeferredItem<Item> END_FUNGI_STEW_POT = ITEMS.register("end_fungi_stew_pot", () -> new JamItem(new Item.Properties().stacksTo(1).craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.MUSHROOM_STEW)));
    public static final DeferredItem<Item> ALJAN_FUNGI_STEW_POT = ITEMS.register("aljan_fungi_stew_pot", () -> new JamItem(new Item.Properties().stacksTo(1).craftRemainder(AxolotlTest.JAM_POT.get()).food(Foods.MUSHROOM_STEW)));
    public static final DeferredItem<Item> EFFECT_JAM = ITEMS.register("effect_jam", () -> new EffectJamItem(new Item.Properties().stacksTo(1).craftRemainder(AxolotlTest.JAM_POT.get())));
    public static final DeferredItem<Item> ALJAN_FUNGI_STEW = ITEMS.register("aljan_fungi_stew", () -> new Item(new Item.Properties().stacksTo(1).food(Foods.MUSHROOM_STEW)));
    public static final DeferredItem<Item> GUARANA_JAM_BREAD = ITEMS.register("guarana_jam_bread", () -> new Item(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> MANGO_JAM_BREAD = ITEMS.register("mango_jam_bread", () -> new Item(new Item.Properties().food(Foods.CARROT)));
    public static final DeferredItem<Item> MANGA_JAM_BREAD = ITEMS.register("manga_jam_bread", () -> new BMFoodItem(ItemBehaviorParameters.FOOD, BMItemBehaviors.MANGAED_MANGO, new Item.Properties().food(Foods.CARROT)));
    public static final DeferredItem<Item> GRAPE_JAM_BREAD = ITEMS.register("grape_jam_bread", () -> new Item(new Item.Properties().food(Foods.SWEET_BERRIES)));
    public static final DeferredItem<Item> LEMON_JAM_BREAD = ITEMS.register("lemon_jam_bread", () -> new Item(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> PINEAPPLE_JAM_BREAD = ITEMS.register("pineapple_jam_bread", () -> new Item(new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> ORANGE_JAM_BREAD = ITEMS.register("orange_jam_bread", () -> new Item(new Item.Properties().food(Foods.BREAD)));
    public static final DeferredItem<Item> BANANA_JAM_BREAD = ITEMS.register("banana_jam_bread", () -> new Item(new Item.Properties().food(Foods.BREAD)));
    public static final DeferredItem<Item> GUAVA_JAM_BREAD = ITEMS.register("guava_jam_bread", () -> new Item(new Item.Properties().food(BMFoods.GUAVA)));
    public static final DeferredItem<Item> JABUTICABA_JAM_BREAD = ITEMS.register("jabuticaba_jam_bread", () -> new Item(new Item.Properties().food(BMFoods.JABUTICABA)));
    public static final DeferredItem<Item> GREEN_APPLE_JAM_BREAD = ITEMS.register("green_apple_jam_bread", () -> new Item(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> ALJAMIC_BERRY_JAM_BREAD = ITEMS.register("aljamic_berry_jam_bread", () -> new Item(new Item.Properties().food(BMFoods.ALJAMIC_BERRY)));
    public static final DeferredItem<Item> ALJAME_JAM_BREAD = ITEMS.register("aljame_jam_bread", () -> new Item(new Item.Properties().food(BMFoods.ALJAME)));
    public static final DeferredItem<Item> WATER_DROPLET_BREAD = ITEMS.register("water_droplet_bread", () -> new Item(new Item.Properties().food(BMFoods.WATER_JAM_BREAD)));
    public static final DeferredItem<Item> ZE_DROPLET_BREAD = ITEMS.register("ze_droplet_bread", () -> new Item(new Item.Properties().food(BMFoods.WATER_JAM_BREAD)));
    public static final DeferredItem<Item> HILLARY_JAM_BREAD = ITEMS.register("hilary_jam_bread", () -> new Item(new Item.Properties().food(BMFoods.HILLARY_JAM_BREAD)));
    public static final DeferredItem<Item> MILKLLARY_JAM_BREAD = ITEMS.register("milklary_jam_bread", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON).food(BMFoods.MILKLLARY_JAM_BREAD)));
    public static final DeferredItem<Item> APPLE_JAM_BREAD = ITEMS.register("apple_jam_bread", () -> new Item(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> GOLDEN_APPLE_JAM_BREAD = ITEMS.register("golden_apple_jam_bread", () -> new Item(new Item.Properties().rarity(Rarity.RARE).food(Foods.GOLDEN_APPLE)));
    public static final DeferredItem<Item> ENCHANTED_GOLDEN_APPLE_JAM_BREAD = ITEMS.register("enchanted_golden_apple_jam_bread", () -> new Item(new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true).rarity(Rarity.EPIC).food(Foods.ENCHANTED_GOLDEN_APPLE)));
    public static final DeferredItem<Item> MELON_JAM_BREAD = ITEMS.register("melon_jam_bread", () -> new Item(new Item.Properties().food(Foods.MELON_SLICE)));
    public static final DeferredItem<Item> PUMPKIN_JAM_BREAD = ITEMS.register("pumpkin_jam_bread", () -> new Item(new Item.Properties().food(Foods.HONEY_BOTTLE)));
    public static final DeferredItem<Item> SWEET_BERRY_JAM_BREAD = ITEMS.register("sweet_berry_jam_bread", () -> new Item(new Item.Properties().food(BMFoods.BERRY_JAM_BREAD)));
    public static final DeferredItem<Item> GLOW_BERRY_JAM_BREAD = ITEMS.register("glow_berry_jam_bread", () -> new Item(new Item.Properties().food(BMFoods.BERRY_JAM_BREAD)));
    public static final DeferredItem<Item> FRIED_EGG_BREAD = ITEMS.register("fried_egg_bread", () -> new Item(new Item.Properties().food(BMFoods.FRIED_EGG_BREAD)));
    public static final DeferredItem<Item> TURTLE_FRIED_EGG_BREAD = ITEMS.register("turtle_fried_egg_bread", () -> new Item(new Item.Properties().food(BMFoods.FRIED_EGG_BREAD)));
    public static final DeferredItem<Item> ENDER_DRAGON_FRIED_EGG_BREAD = ITEMS.register("ender_dragon_fried_egg_bread", () -> new Item(new Item.Properties().rarity(Rarity.EPIC).food(BMFoods.FRIED_EGG_BREAD)));
    public static final DeferredItem<Item> BREAD_WITH_PAO = ITEMS.register("bread_with_pao", () -> new DescriptiveItem(Component.translatable("tooltip.backmath.bread_with_pao").withStyle(ChatFormatting.GRAY), new Item.Properties().food(BMFoods.BREAD_WITH_PAO)));
    public static final DeferredItem<Item> CHOCOLATE = ITEMS.register("chocolate", () -> new Item(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> HONEYED_BREAD = ITEMS.register("honeyed_bread", () -> new Item(new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> NUTELLA_CHOCOLATE = ITEMS.register("nutella_chocolate", () -> new Item(new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> AMARACAMEL_BATTER_BREAD = ITEMS.register("amaracamel_batter_bread", () -> new Item(new Item.Properties().food(BMFoods.AMARACAMEL)));
    public static final DeferredItem<Item> AMARACAMEL_BATTER_TOAST = ITEMS.register("amaracamel_batter_toast", () -> new Item(new Item.Properties().food(BMFoods.AMARACAMEL)));
    public static final DeferredItem<Item> MONSTER_ENERGY_DRINK = ITEMS.register("monster_energy_drink", () -> new BMFoodItem(ItemBehaviorParameters.BOTTLE_DRINK, new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).stacksTo(1)));
    public static final DeferredItem<Item> ENERGETIC_MONSTER = ITEMS.register("energetic_monster", () -> new BMFoodItem(ItemBehaviorParameters.BOTTLE_DRINK, new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).stacksTo(1)));
    public static final DeferredItem<Item> WINE = ITEMS.register("wine", () -> new BMFoodItem(ItemBehaviorParameters.WINE, new Item.Properties().craftRemainder(CORK_STOPPER.get()).stacksTo(1)));
    public static final DeferredItem<Item> JABUTICABA_WINE = ITEMS.register("jabuticaba_wine", () -> new BMFoodItem(ItemBehaviorParameters.WINE, new Item.Properties().craftRemainder(CORK_STOPPER.get()).stacksTo(1)));
    public static final DeferredItem<Item> ALJAME_TEA_BOX = ITEMS.register("aljame_tea_box", () -> new BagItem(new Item.Properties().component(BMDataComponents.BAG_LOOT_TABLE, BMResourceLocations.ALJAME_TEA_BOX)));
    public static final DeferredItem<Item> ALJAME_TEA = ITEMS.register("aljame_tea", () -> new MealCookerIngredientItem(new Item.Properties()));
    public static final DeferredItem<Item> ALJAME_TEACUP = ITEMS.register("aljame_teacup", () -> new BMFoodItem(new FoodSettings(true), new Item.Properties().food(BMFoods.ALJAME_TEACUP))); //.dispenseBehavior(new TeaDispenseBehavior())
    public static final DeferredItem<Item> PATIENCE_TEA = ITEMS.register("patience_tea", () -> new TeaItem(BMItemBehaviors.PEACE_TEA, new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> PEACE_TEA = ITEMS.register("peace_tea", () -> new TeaItem(BMItemBehaviors.PEACE_TEA, new Item.Properties().rarity(Rarity.UNCOMMON).food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> DISGUST_TEA = ITEMS.register("disgust_tea", () -> new TeaItem(BMItemBehaviors.PEACE_TEA, new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> MOOD_TEA = ITEMS.register("mood_tea", () -> new TeaItem(BMItemBehaviors.PEACE_TEA, new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> AMARACAMEL_JUICE = ITEMS.register("amaracamel_juice", () -> new BMFoodItem(ItemBehaviorParameters.BUCKET_DRINK, new Item.Properties().craftRemainder(Items.BUCKET).stacksTo(1).food(BMFoods.AMARACAMEL_JUICE)));
    public static final DeferredItem<Item> COFFEE_MUG = ITEMS.register("coffee_mug", () -> new BMFoodItem(ItemBehaviorParameters.BUCKET_DRINK, new Item.Properties().craftRemainder(Items.BUCKET).stacksTo(1)));
    public static final DeferredItem<Item> CHOCCY_MILK_BUCKET = ITEMS.register("choccy_milk_bucket", () -> new BMFoodItem(ItemBehaviorParameters.BUCKET_DRINK, new Item.Properties().craftRemainder(Items.BUCKET).stacksTo(1).food(BMFoods.CHOCCY_MILK_BUCKET)));
    public static final DeferredItem<Item> CHOCCY_MILK_BOTTLE = ITEMS.register("choccy_milk_bottle", () -> new BMFoodItem(ItemBehaviorParameters.BOTTLE_DRINK, new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).stacksTo(8).food(BMFoods.CHOCCY_MILK_BOTTLE)));
    public static final DeferredItem<Item> HILLARY_BOTTLE = ITEMS.register("hillary_bottle", () -> new BMFoodItem(ItemBehaviorParameters.BOTTLE_DRINK, new Item.Properties().craftRemainder(Items.GLASS_BOTTLE)));
    public static final DeferredItem<Item> MILKLLARY_BOTTLE = ITEMS.register("milkllary_bottle", () -> new BMFoodItem(ItemBehaviorParameters.BOTTLE_DRINK, new Item.Properties().craftRemainder(Items.GLASS_BOTTLE).rarity(Rarity.UNCOMMON)));
    public static final DeferredItem<Item> TODDY = ITEMS.register("toddy", () -> new BMFoodItem(ItemBehaviorParameters.DRINK, new Item.Properties().stacksTo(1).food(BMFoods.TODDY)));
    public static final DeferredItem<Item> MORTADELLA = ITEMS.register("mortadella", () -> new Item(new Item.Properties().food(Foods.PORKCHOP)));
    public static final DeferredItem<Item> ALJAMIC_BEEF = ITEMS.register("aljamic_beef", () -> new Item(new Item.Properties().food(Foods.BEEF)));
    public static final DeferredItem<Item> COOKED_ALJAMIC_BEEF = ITEMS.register("cooked_aljamic_beef", () -> new Item(new Item.Properties().food(Foods.COOKED_BEEF)));
    public static final DeferredItem<Item> ALJAMIC_PORKCHOP = ITEMS.register("aljamic_porkchop", () -> new Item(new Item.Properties().food(Foods.PORKCHOP)));
    public static final DeferredItem<Item> COOKED_ALJAMIC_PORKCHOP = ITEMS.register("cooked_aljamic_porkchop", () -> new Item(new Item.Properties().food(Foods.COOKED_PORKCHOP)));
    public static final DeferredItem<Item> ALJAMIC_MUTTON = ITEMS.register("aljamic_mutton", () -> new Item(new Item.Properties().food(Foods.MUTTON)));
    public static final DeferredItem<Item> COOKED_ALJAMIC_MUTTON = ITEMS.register("cooked_aljamic_mutton", () -> new Item(new Item.Properties().food(Foods.COOKED_MUTTON)));
    public static final DeferredItem<Item> ALJAMIC_CHICKEN = ITEMS.register("aljamic_chicken", () -> new Item(new Item.Properties().food(Foods.CHICKEN)));
    public static final DeferredItem<Item> COOKED_ALJAMIC_CHICKEN = ITEMS.register("cooked_aljamic_chicken", () -> new Item(new Item.Properties().food(Foods.COOKED_CHICKEN)));
    public static final DeferredItem<Item> ROTTEN_ALJAMIC_FLESH = ITEMS.register("rotten_aljamic_flesh", () -> new Item(new Item.Properties().food(Foods.ROTTEN_FLESH)));
    public static final DeferredItem<Item> ALJAMIC_EYE = ITEMS.register("aljamic_eye", () -> new Item(new Item.Properties().food(Foods.SPIDER_EYE)));
    public static final DeferredItem<Item> RAW_SOPHIE = ITEMS.register("sophie", () -> new Item(new Item.Properties().food(Foods.POTATO)));
    public static final DeferredItem<Item> RAW_MINCED_SOPHIE = ITEMS.register("raw_minced_sophie", () -> new Item(new Item.Properties().food(BMFoods.RAW_MINCED_MEAT)));
    public static final DeferredItem<Item> FRIED_SOPHIE = ITEMS.register("fried_sophie", () -> new Item(new Item.Properties().food(Foods.COOKED_BEEF)));
    public static final DeferredItem<Item> MINCED_SOPHIE = ITEMS.register("minced_sophie", () -> new DescriptiveItem(Component.translatable("tooltip.backmath.minced_sophie").withStyle(ChatFormatting.DARK_GRAY), new Item.Properties().food(BMFoods.COOKED_MINCED_MEAT)));
    public static final DeferredItem<Item> HOT_SOPHIE = ITEMS.register("hot_sophie", () -> new BMFoodItem(ItemBehaviorParameters.FOOD, BMItemBehaviors.HOT_SOPHIE, new Item.Properties().food(Foods.DRIED_KELP)));
    public static final DeferredItem<Item> RAW_LUCIA = ITEMS.register("lucia", () -> new Item(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> RAW_MINCED_LUCIA = ITEMS.register("raw_minced_lucia", () -> new Item(new Item.Properties().food(BMFoods.RAW_MINCED_MEAT)));
    public static final DeferredItem<Item> COOKED_LUCIA = ITEMS.register("cooked_lucia", () -> new Item(new Item.Properties().food(Foods.COOKED_BEEF)));
    public static final DeferredItem<Item> MINCED_LUCIA = ITEMS.register("minced_lucia", () -> new Item(new Item.Properties().food(BMFoods.COOKED_MINCED_MEAT)));
    public static final DeferredItem<Item> RAW_FABRICIO = ITEMS.register("fabricio", () -> new Item(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> RAW_MINCED_FABRICIO = ITEMS.register("raw_minced_fabricio", () -> new Item(new Item.Properties().food(BMFoods.RAW_MINCED_MEAT)));
    public static final DeferredItem<Item> TOASTED_FABRICIO = ITEMS.register("toasted_fabricio", () -> new Item(new Item.Properties().food(Foods.COOKED_BEEF)));
    public static final DeferredItem<Item> MINCED_FABRICIO = ITEMS.register("minced_fabricio", () -> new Item(new Item.Properties().food(BMFoods.COOKED_MINCED_MEAT)));
    public static final DeferredItem<Item> COLD_FABRICIO = ITEMS.register("cold_fabricio", () -> new Item(new Item.Properties().food(Foods.DRIED_KELP)));
    public static final DeferredItem<Item> RAW_SOPHICIO_MIXTURE = ITEMS.register("raw_sophicio_mixture", () -> new Item(new Item.Properties().food(Foods.PORKCHOP)));
    public static final DeferredItem<Item> SOPHICIO_MIXTURE = ITEMS.register("sophicio_mixture", () -> new Item(new Item.Properties().food(Foods.RABBIT_STEW)));
    public static final DeferredItem<Item> PASTA = ITEMS.register("pasta", () -> new MealItem(5));
    public static final DeferredItem<Item> FRIED_SOPHIE_FRIED_EGG_MEAL = ITEMS.register("fried_sophie_fried_egg_meal", () -> new MealItem(6));
    public static final DeferredItem<Item> COOKED_LUCIA_FRIED_EGG_MEAL = ITEMS.register("cooked_lucia_fried_egg_meal", () -> new MealItem(5));
    public static final DeferredItem<Item> TOASTED_FABRICIO_FRIED_EGG_MEAL = ITEMS.register("toasted_fabricio_fried_egg_meal", () -> new MealItem(8));
    public static final DeferredItem<Item> HOT_SOPHIE_COLD_FABRICIO_MEAL = ITEMS.register("hot_sophie_cold_fabricio_meal", () -> new BMFoodItem(ItemBehaviorParameters.FOOD, BMItemBehaviors.HOT_SOPHIE, new Item.Properties().stacksTo(8).rarity(Rarity.UNCOMMON).food(BMFoods.HOT_SOPHIE_AND_COLD_FABRICIO_MEAL)));
//    public static final DeferredItem<Item> AMARACAMEL_BATTER_BAG = ITEMS.register("amaracamel_batter_bag", () -> new PlaceableBagItem(BMBlocks.AMARACAMEL_BATTER_BAG.get(), new Item.Properties()));
    public static final DeferredItem<Item> EMPTY_AMARACAMEL_BATTER_BAG = ITEMS.register("empty_amaracamel_batter_bag", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> AMARACAMEL_BATTER = ITEMS.register("amaracamel_batter", () -> new Item(new Item.Properties().food(BMFoods.AMARACAMEL)));
    public static final DeferredItem<Item> FRIED_EGG_BAG = ITEMS.register("cooked_egg_bag", () -> new BagItem(new Item.Properties().component(BMDataComponents.BAG_LOOT_TABLE, BMResourceLocations.FRIED_EGG_BAG)));
    public static final DeferredItem<Item> EMPTY_FRIED_EGG_BAG = ITEMS.register("empty_cooked_egg_bag", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> TURTLE_FRIED_EGG_BAG = ITEMS.register("turtle_fried_egg_bag", () -> new BagItem(new Item.Properties().component(BMDataComponents.BAG_LOOT_TABLE, BMResourceLocations.TURTLE_FRIED_EGG_BAG)));
    public static final DeferredItem<Item> EMPTY_TURTLE_FRIED_EGG_BAG = ITEMS.register("empty_turtle_fried_egg_bag", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> ENDER_DRAGON_FRIED_EGG_BAG = ITEMS.register("ender_dragon_fried_egg_bag", () -> new BagItem(new Item.Properties().component(BMDataComponents.BAG_LOOT_TABLE, BMResourceLocations.ENDER_DRAGON_FRIED_EGG_BAG).rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> EMPTY_ENDER_DRAGON_FRIED_EGG_BAG = ITEMS.register("empty_ender_dragon_fried_egg_bag", () -> new Item(new Item.Properties().rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> LAGUSTA_BAG = ITEMS.register("lagusta_bag", () -> new BagItem(new Item.Properties().component(BMDataComponents.BAG_LOOT_TABLE, BMResourceLocations.LAGUSTA_BAG)));
    public static final DeferredItem<Item> EMPTY_LAGUSTA_BAG = ITEMS.register("empty_lagusta_bag", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> LAGUSTA = ITEMS.register("lagusta", () -> new Item(new Item.Properties().food(BMFoods.LAGUSTA)));
//    public static final DeferredItem<Item> BOOT_PACK = ITEMS.register("boot_pack", () -> new PlaceableBagItem(BMBlocks.BOOT_PACK.get(), new Item.Properties()));
    public static final DeferredItem<Item> EMPTY_BOOT_PACK = ITEMS.register("empty_boot_pack", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> QUEEN_LUCY_BATTLE_PACK = ITEMS.register("queen_sophie_battle_pack", () -> new BagItem(new Item.Properties().fireResistant().component(BMDataComponents.BAG_LOOT_TABLE, BMResourceLocations.QUEEN_LUCY_BATTLE_PACK).rarity(Rarity.EPIC)));
    public static final DeferredItem<Item> FOOD_BAG = ITEMS.register("food_bag", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> FRIED_EGG = ITEMS.register("cooked_egg", () -> new Item(new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> OREGANO_FRIED_EGG = ITEMS.register("oregano_fried_egg", () -> new Item(new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> OMELET = ITEMS.register("omelet", () -> new Item(new Item.Properties().food(Foods.COOKED_CHICKEN)));
    public static final DeferredItem<Item> TURTLE_FRIED_EGG = ITEMS.register("turtle_fried_egg", () -> new Item(new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> OREGANO_TURTLE_FRIED_EGG = ITEMS.register("oregano_turtle_fried_egg", () -> new Item(new Item.Properties().food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> TURTLE_OMELET = ITEMS.register("turtle_omelet", () -> new Item(new Item.Properties().food(Foods.COOKED_CHICKEN)));
    public static final DeferredItem<Item> ENDER_DRAGON_FRIED_EGG = ITEMS.register("ender_dragon_fried_egg", () -> new Item(new Item.Properties().rarity(Rarity.EPIC).food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> OREGANO_ENDER_DRAGON_FRIED_EGG = ITEMS.register("oregano_ender_dragon_fried_egg", () -> new Item(new Item.Properties().rarity(Rarity.EPIC).food(Foods.BAKED_POTATO)));
    public static final DeferredItem<Item> ENDER_OMELET = ITEMS.register("ender_omelet", () -> new Item(new Item.Properties().rarity(Rarity.EPIC).food(Foods.COOKED_CHICKEN)));
//    public static final DeferredItem<Item> HILLARY_CAKE = ITEMS.register("hillary_cake", () -> new BlockItem(BMBlocks.HILLARY_CAKE.get(), new Item.Properties().stacksTo(1)));
//    public static final DeferredItem<Item> MILKLLARY_CAKE = ITEMS.register("milkllary_cake", () -> new BlockItem(BMBlocks.MILKLLARY_CAKE.get(), new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON)));
//    public static final DeferredItem<Item> CHOCOLATE_NAKED_CAKE = ITEMS.register("chocolate_naked_cake", () -> new BlockItem(BMBlocks.CHOCOLATE_NAKED_CAKE.get(), new Item.Properties().stacksTo(1)));
    public static final DeferredItem<Item> PINE_JELLY = ITEMS.register("pine_jelly", () -> new DescriptiveItem(Component.translatable("tooltip.backmath.pine_jelly").withStyle(ChatFormatting.GRAY), new Item.Properties().food(BMFoods.PINE_JELLY)));
    public static final DeferredItem<Item> CHEESE_BREAD = ITEMS.register("cheese_bread", () -> new Item(new Item.Properties().food(Foods.COOKED_BEEF)));
    public static final DeferredItem<Item> FOOD_BAG_ALT = ITEMS.register("food_bag_alt", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> CHEESE_BREAD_BAG = ITEMS.register("cheese_bread_bag", () -> new Item(new Item.Properties().food(Foods.COOKED_BEEF)));
    public static final DeferredItem<Item> PATTY = ITEMS.register("patty", () -> new Item(new Item.Properties().food(Foods.APPLE)));
    public static final DeferredItem<Item> NOTEBOOK = ITEMS.register("notebook", () -> new Item(new Item.Properties()));
    public static final DeferredItem<Item> FRIED_NOTEBOOK = ITEMS.register("fried_notebook", () -> new Item(new Item.Properties().food(Foods.COOKED_BEEF)));
    public static final DeferredItem<Item> STUFFED_COOKIE_NOTEBOOK = ITEMS.register("stuffed_cookie_notebook", () -> new Item(new Item.Properties().food(Foods.COOKED_BEEF)));
    public static final DeferredItem<Item> FRIED_STUFFED_COOKIE_NOTEBOOK = ITEMS.register("fried_stuffed_cookie_notebook", () -> new Item(new Item.Properties().food(Foods.COOKED_BEEF)));
}
